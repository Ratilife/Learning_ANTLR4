==================================================
СПИСОК ТОКЕНОВ
==================================================
Line  Pos   Type                 Value
--------------------------------------------------
1     1     LBRACE               '{'
1     2     T__2                 '1'
1     3     T__0                 ','
2     0     LBRACE               '{'
2     1     INT                  '28'
2     3     T__0                 ','
3     0     LBRACE               '{'
3     1     STRING               '"МоиШаблоны"'
3     13    T__0                 ','
3     14    T__2                 '1'
3     15    T__0                 ','
3     16    T__1                 '0'
3     17    T__0                 ','
3     18    STRING               '""'
3     20    T__0                 ','
3     21    STRING               '""'
3     23    RBRACE               '}'
3     24    T__0                 ','
4     0     LBRACE               '{'
4     1     INT                  '5'
4     2     T__0                 ','
5     0     LBRACE               '{'
5     1     STRING               '"СКД"'
5     6     T__0                 ','
5     7     T__2                 '1'
5     8     T__0                 ','
5     9     T__1                 '0'
5     10    T__0                 ','
5     11    STRING               '""'
5     13    T__0                 ','
5     14    STRING               '""'
5     16    RBRACE               '}'
5     17    T__0                 ','
6     0     LBRACE               '{'
6     1     T__1                 '0'
6     2     T__0                 ','
7     0     LBRACE               '{'
7     1     STRING               '"Набор данных - Объект"'
7     24    T__0                 ','
7     25    T__1                 '0'
7     26    T__0                 ','
7     27    T__2                 '1'
7     28    T__0                 ','
7     29    STRING               '"НаборДанныхОбъектСКД"'
7     51    T__0                 ','
7     52    STRING               '"	СтандартнаяОбработка = Ложь;\r\n	//1. получение схемы компоновки данных\r\n    СхемаКомпоновкиДанных = ПолучитьМакет(""ОсновнаяСхемаКомпоновкиДанных"");\r\n	\r\n	//2. получение настроек компановки данных\r\n	НастройкиКомпановки = КомпоновщикНастроек.ПолучитьНастройки();\r\n	\r\n	//3. получение макета компановки данных\r\n	КомпановщикМакета  = Новый КомпоновщикМакетаКомпоновкиДанных;\r\n	МакетКомпановки = КомпановщикМакета.Выполнить(СхемаКомпоновкиДанных,НастройкиКомпановки);\r\n	\r\n	//4. получение результата отчета (выполнение компановки)\r\n	ВнешниеНаборыДанных = Новый Структура(""ТаблицаДанных"",РезультатЗапроса);  //""""ТаблицаДанных"""" - на уровне схемы; РезультатЗапроса - на уровне кода \r\n	\r\n	ПроцессорКомпановки = Новый ПроцессорКомпоновкиДанных;\r\n	ПроцессорКомпановки.Инициализировать(МакетКомпановки,ВнешниеНаборыДанных);\r\n	\r\n	//5. вывод результата компановки\r\n	ПроцессорВывода = Новый ПроцессорВыводаРезультатаКомпоновкиДанныхВТабличныйДокумент;\r\n	ПроцессорВывода.УстановитьДокумент(ДокументРезультат);\r\n	ПроцессорВывода.Вывести(ПроцессорКомпановки);\r\n"'
28    1     RBRACE               '}'
29    0     RBRACE               '}'
29    1     T__0                 ','
30    0     LBRACE               '{'
30    1     T__1                 '0'
30    2     T__0                 ','
31    0     LBRACE               '{'
31    1     STRING               '"Набор данных"'
31    15    T__0                 ','
31    16    T__1                 '0'
31    17    T__0                 ','
31    18    T__1                 '0'
31    19    T__0                 ','
31    20    STRING               '""'
31    22    T__0                 ','
31    23    STRING               '"	СтандартнаяОбработка = Ложь;\r\n\r\n	//1. получение схемы компоновки данных\r\n	СхемаКомпоновкиДанных = ПолучитьМакет(""ОсновнаяСхемаКомпанновкиДанных"");\r\n	\r\n	//2. получение настроек компановки данных\r\n	НастройкиКомпановки = КомпоновщикНастроек.ПолучитьНастройки();\r\n	\r\n	//3. получение макета компановки данных\r\n	КомпановщикМакета  = Новый КомпоновщикМакетаКомпоновкиДанных;\r\n	МакетКомпановки = КомпановщикМакета.Выполнить(СхемаКомпоновкиДанных,НастройкиКомпановки);\r\n	\r\n	//4. компановка данных\r\n	ПроцессорКомпановки = Новый ПроцессорКомпановкиДанных;\r\n	ПроцессорКомпановки.Инициализировать(МакетКомпановки)\r\n	\r\n	//5. вывод результата компановки\r\n	ПроцессорВывода = Новый ПроцессорВыводаРезультатаКомпоновкиДанныхВТабличныйДокумент;\r\n	ПроцессорВывода.УстановитьДокумент(ДокументРезультат);\r\n	ПроцессорВывода.Вывести(ПроцессорКомпановки);\r\n"'
51    1     RBRACE               '}'
52    0     RBRACE               '}'
52    1     T__0                 ','
53    0     LBRACE               '{'
53    1     T__1                 '0'
53    2     T__0                 ','
54    0     LBRACE               '{'
54    1     STRING               '"ОтчетЖурналРегистрации"'
54    25    T__0                 ','
54    26    T__1                 '0'
54    27    T__0                 ','
54    28    T__1                 '0'
54    29    T__0                 ','
54    30    STRING               '""'
54    32    T__0                 ','
54    33    STRING               '"      СтандартнаяОбработка = Ложь;\r\n		\r\n		//1. получение схемы компоновки данных\r\n	    СхемаКомпоновкиДанных = ПолучитьМакет(""ОсновнаяСхемаКомпоновкиДанных"");\r\n		\r\n		//2. получение настроек компановки данных\r\n		НастройкиКомпановки = КомпоновщикНастроек.ПолучитьНастройки();\r\n		\r\n		КоллекцияПараметров = НастройкиКомпановки.ПараметрыДанных;\r\n		Параметр_Период = КоллекцияПараметров.НайтиЗначениеПараметра(Новый ПараметрКомпоновкиДанных(""Период""));\r\n		Если Параметр_Период<> Неопределено Тогда \r\n			 ЗначениеПараметраПериод = Параметр_Период.Значение;\r\n			 ДатаНачало = ЗначениеПараметраПериод.ДатаНачало;\r\n			 ДатаОкончания = ЗначениеПараметраПериод.ДатаОкончания;\r\n\r\n		Иначе\r\n			ДатаНачало = '00010101';\r\n			ДатаОкончания = '00010101';\r\n		КонецЕсли;	\r\n		ТаблицаЖурнала = Новый ТаблицаЗначений;\r\n		СтруктураОтбора = Новый Структура;\r\n		СтруктураОтбора.Вставить(""ДатаНачала"", ДатаНачало);\r\n		СтруктураОтбора.Вставить(""ДатаОкончания"", ДатаОкончания);\r\n		СтруктураОтбора.Вставить(""Добавление"",""_$Data$_.New""); \r\n		СтруктураОтбора.Вставить(""Удаление"",""_$Data$_.Delete"");\r\n		СтруктураОтбора.Вставить(""УдалениеПредопределенныхДанных"",""_$Data$_.DeletePredefinedData"");\r\n		СтруктураОтбора.Вставить(""ДобавлениеПредопределенныхДанных"",""_$Data$_.NewPredefinedData"");\r\n		СтруктураОтбора.Вставить(""Проведение"",""_$Data$_.Post"");\r\n		СтруктураОтбора.Вставить(""ОтменаПроведения"",""_$Data$_.Unpost"");\r\n		СтруктураОтбора.Вставить(""Метаданные"",Метаданные.Документы.ПоступлениеТоваров);	\r\n		Колонки = ""Дата,ИмяПользователя,Данные"";\r\n		ВыгрузитьЖурналРегистрации(ТаблицаЖурнала,СтруктураОтбора,Колонки);\r\n\r\n		//3. получение макета компановки данных\r\n		КомпановщикМакета  = Новый КомпоновщикМакетаКомпоновкиДанных;\r\n		МакетКомпановки = КомпановщикМакета.Выполнить(СхемаКомпоновкиДанных,НастройкиКомпановки);\r\n		\r\n		//4. получение результата отчета (выполнение компановки)\r\n		ВнешниеНаборыДанных = Новый Структура(""ЖурналРегистрации"",ТаблицаЖурнала);  \r\n		\r\n		ПроцессорКомпановки = Новый ПроцессорКомпоновкиДанных;\r\n		ПроцессорКомпановки.Инициализировать(МакетКомпановки,ВнешниеНаборыДанных);\r\n		\r\n		//5. вывод результата компановки\r\n		ПроцессорВывода = Новый ПроцессорВыводаРезультатаКомпоновкиДанныхВТабличныйДокумент;\r\n		ПроцессорВывода.УстановитьДокумент(ДокументРезультат);\r\n		ПроцессорВывода.Вывести(ПроцессорКомпановки);\r\n"'
101   1     RBRACE               '}'
102   0     RBRACE               '}'
102   1     T__0                 ','
103   0     LBRACE               '{'
103   1     T__1                 '0'
103   2     T__0                 ','
104   0     LBRACE               '{'
104   1     STRING               '"ОтчетОткрытиеОтчетаИзФормыОбъекта(Пример список номенклатуры)"'
104   64    T__0                 ','
104   65    T__1                 '0'
104   66    T__0                 ','
104   67    T__1                 '0'
104   68    T__0                 ','
104   69    STRING               '""'
104   71    T__0                 ','
104   72    STRING               '"// Сформировали отчет с использованием СКД по нужным условиям\r\n//далее в форме нужного объекта (пример спр номенклатура форма списка) формируем кнопку для вывода отчета\r\n\r\n&НаКлиенте\r\nПроцедура СписокНоммменклатуры(Команда)\r\n	Результат = ВывестиСписокНоменклатуры();  \r\n	Результат.ОтображатьСетку = Ложь;\r\n	Результат.ОтображатьЗаголовки = Ложь;\r\n	Результат.Показать();\r\nКонецПроцедуры\r\n\r\n// Функция ВывестиСписокНоменклатуры() описывает логику обращения на выполнение к сосданному отчету \r\n\r\n&НаСервереБезКонтекста\r\nФункция  ВывестиСписокНоменклатуры()\r\n	//В качестве схемы компоновки данных используем макет отчета ""СписокНоменклатуры""\r\n	СхемаКомпановкиДанных = Отчеты.Пример4СписокНоменклатуры.ПолучитьМакет(""ОсновнаяСхемаКомпоновкиДанных"");\r\n	// получим настройки по умолчанию\r\n	Настройки = СхемаКомпановкиДанных.НастройкиПоУмолчанию;\r\n	\r\n	//Сформируем макет компановки данных\r\n	КомпановщикМакета = Новый КомпоновщикМакетаКомпоновкиДанных;\r\n	МакетКомпанови = КомпановщикМакета.Выполнить(СхемаКомпановкиДанных,Настройки);\r\n	\r\n	//Выводим компановку данных\r\n	ПроцессорКомпановкиДанных = Новый ПроцессорКомпоновкиДанных;\r\n	ПроцессорКомпановкиДанных.Инициализировать(МакетКомпанови);\r\n	\r\n	//Выведем результат компановки в табличный документ\r\n	ДокументРезультат = Новый ТабличныйДокумент;\r\n	ПроцессорВывода = Новый ПроцессорВыводаРезультатаКомпоновкиДанныхВТабличныйДокумент;\r\n	ПроцессорВывода.УстановитьДокумент(ДокументРезультат);  \r\n	ПроцессорВывода.Вывести(ПроцессорКомпановкиДанных);\r\n	\r\n	Возврат ДокументРезультат;\r\nКонецФункции	\r\n"'
140   1     RBRACE               '}'
141   0     RBRACE               '}'
141   1     T__0                 ','
142   0     LBRACE               '{'
142   1     T__1                 '0'
142   2     T__0                 ','
143   0     LBRACE               '{'
143   1     STRING               '"Автомотическое формирование отчета"'
143   37    T__0                 ','
143   38    T__1                 '0'
143   39    T__0                 ','
143   40    T__1                 '0'
143   41    T__0                 ','
143   42    STRING               '""'
143   44    T__0                 ','
143   45    STRING               '" //Создаем форму отчета \r\n //Последовательность событий на форме до компановки результата отчета\r\n //Модуль_ФОРМЫ_ОТЧЕТА\r\n // ПриСозданииНаСервере()\r\n // ПередЗагрузкойВариантаНаСервере()\r\n // ПриЗагрузкеВариантаНаСервере()\r\n // ПередЗагрузкойПользовательскихНастроекНаСервере()\r\n // ПриЗагрузкеПользовательскихНастроекНаСервере()\r\n //Модуль_ОБЪЕКТА\r\n // ПриКомпоновкеРезультата()\r\n &НаСервере\r\n Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка) \r\n	//формирование отчета сразу при открытии формы отчета \r\n	Параметры.СформироватьПриОткрытии=Истина;  	\r\nКонецПроцедуры\r\n\r\n&НаСервере\r\nПроцедура ПриЗагрузкеВариантаНаСервере(Настройки)        \r\n	//Задаем параметры настроек перед их загрузкой в компоновщик\r\n	Настройки.ПараметрыВывода.УстановитьЗначениеПараметра(""Заголовок"",""Приход/Расход номенклатуры"");\r\n	Настройки.параметрыДанных.УстановитьЗначениеПараметра(""НачалоПериода"",'20190101');\r\n	Настройки.параметрыДанных.УстановитьЗначениеПараметра(""КонецПериода"",'20231231');	\r\nКонецПроцедуры\r\n\r\n&НаСервере\r\nПроцедура ПередЗагрузкойПользовательскихНастроекНаСервере(Настройки, ИспользуютсяСтандартныеНастройки)\r\n	//перехватываем пользовательские настройки параметров\r\n	Настройки.Элементы[0].Значение = '20190101';\r\n	Настройки.Элементы[0].Использование = Истина;\r\n	Настройки.Элементы[1].Значение = '20231231';\r\n	Настройки.Элементы[1].Использование = Истина;	\r\nКонецПроцедуры\r\n"'
175   1     RBRACE               '}'
176   0     RBRACE               '}'
177   0     RBRACE               '}'
177   1     T__0                 ','
178   0     LBRACE               '{'
178   1     INT                  '4'
178   2     T__0                 ','
179   0     LBRACE               '{'
179   1     STRING               '"Работа с внешними файлами"'
179   28    T__0                 ','
179   29    T__2                 '1'
179   30    T__0                 ','
179   31    T__1                 '0'
179   32    T__0                 ','
179   33    STRING               '""'
179   35    T__0                 ','
179   36    STRING               '""'
179   38    RBRACE               '}'
179   39    T__0                 ','
180   0     LBRACE               '{'
180   1     INT                  '21'
180   3     T__0                 ','
181   0     LBRACE               '{'
181   1     STRING               '"Работа с Excel"'
181   17    T__0                 ','
181   18    T__2                 '1'
181   19    T__0                 ','
181   20    T__1                 '0'
181   21    T__0                 ','
181   22    STRING               '""'
181   24    T__0                 ','
181   25    STRING               '""'
181   27    RBRACE               '}'
181   28    T__0                 ','
182   0     LBRACE               '{'
182   1     T__1                 '0'
182   2     T__0                 ','
183   0     LBRACE               '{'
183   1     STRING               '"Чтение_данных_из_таблицы"'
183   27    T__0                 ','
183   28    T__1                 '0'
183   29    T__0                 ','
183   30    T__1                 '0'
183   31    T__0                 ','
183   32    STRING               '""'
183   34    T__0                 ','
183   35    STRING               '"//создаем объект для работы с Excel\r\nExcel = Новый COMОбъект(""Excel.Application"");\r\n\r\n//открываем таблицу C:\tmp\1.xlsx\r\nWorkBook = Excel.WorkBooks.Open(""C:\tmp\1.xlsx"");\r\n\r\n//получаем доступ к первому листу таблицы\r\nSheet = WorkBook.WorkSheets(1);\r\n\r\nВсегоСтолбцов = 2;\r\n\r\nТаб = Новый ТаблицаЗначений;\r\nТаб.Колонки.Добавить(""ИмяКолонки1"");\r\nТаб.Колонки.Добавить(""ИмяКолонки2"");\r\n\r\n//считываем все данные в таблицу значений\r\nНомСтроки = 1;\r\nПока Истина Цикл\r\nКод = Sheet.Cells(НомСтроки, 1).Value;\r\n//прерываемся если значение первого\r\n//столбца пустое\r\nЕсли Код = Неопределено Тогда\r\nПрервать;\r\nКонецЕсли;\r\nЗначение = Sheet.Cells(НомСтроки, 1).Value;\r\n\r\nСтрока = Таб.Добавить();\r\nСтрока.Код = ИмяКолонки1;\r\nСтрока.Значение = ИмяКолонки2;\r\n\r\nНомСтроки = НомСтроки + 1;\r\nКонецЦикла;\r\n//Закрываем Excel\r\nExcel.ActiveWorkbook.Close();\r\n//закрываем таблицу"'
217   20    RBRACE               '}'
218   0     RBRACE               '}'
218   1     T__0                 ','
219   0     LBRACE               '{'
219   1     T__1                 '0'
219   2     T__0                 ','
220   0     LBRACE               '{'
220   1     STRING               '"Форматирования_текста"'
220   24    T__0                 ','
220   25    T__1                 '0'
220   26    T__0                 ','
220   27    T__1                 '0'
220   28    T__0                 ','
220   29    STRING               '""'
220   31    T__0                 ','
220   32    STRING               '"//создаем объект для работы с Excel\r\nExcel = Новый COMОбъект(""Excel.Application"");\r\n\r\n//создаем новую таблицу\r\nWorkBook = Excel.WorkBooks.Add();\r\n\r\n//получаем доступ к первому листу таблицы\r\nSheet = WorkBook.WorkSheets(1);\r\n\r\nSheet.Cells(2, 2).Value = ""Текст"";\r\n//название шрифта\r\nSheet.Cells(2, 2).Font.Name = ""Verdana"";\r\n//размер шрифта\r\nSheet.Cells(2, 2).Font.Size = 16;\r\n//жирный шрифт - 1, обычный - 0\r\nSheet.Cells(2, 2).Font.Bold = 1;\r\n//курсив - 1, обычный - 0\r\nSheet.Cells(2, 2).Font.Italic = 1;\r\n//подчеркнутый - 2, обычный - 1\r\nSheet.Cells(2, 2).Font.Underline = 2;\r\n\r\n//показываем документ на экране\r\nExcel.Visible = Истина;"'
242   24    RBRACE               '}'
243   0     RBRACE               '}'
243   1     T__0                 ','
244   0     LBRACE               '{'
244   1     T__1                 '0'
244   2     T__0                 ','
245   0     LBRACE               '{'
245   1     STRING               '"Рамки_вокруг_ячеек"'
245   21    T__0                 ','
245   22    T__1                 '0'
245   23    T__0                 ','
245   24    T__1                 '0'
245   25    T__0                 ','
245   26    STRING               '""'
245   28    T__0                 ','
245   29    STRING               '"//создаем объект для работы с Excel\r\nExcel = Новый COMОбъект(""Excel.Application"");\r\n\r\n//создаем новую таблицу\r\nWorkBook = Excel.WorkBooks.Add();\r\n\r\n//создаем объект для работы с Excel\r\nExcel = Новый COMОбъект(""Excel.Application"");\r\n\r\n//создаем новую таблицу\r\nWorkBook = Excel.WorkBooks.Add();\r\n\r\n//получаем доступ к первому листу таблицы\r\nSheet = WorkBook.WorkSheets(1);\r\n\r\n//все рамки толкой, сплошной линией\r\nRange = Sheet.Range(\r\nSheet.Cells(2, 2),\r\nSheet.Cells(3, 3));\r\nRange.Borders.Linestyle = 1;\r\n\r\n//внешние рамки толстой, сплошной\r\nRange = Sheet.Range(\r\nSheet.Cells(2, 5),\r\nSheet.Cells(3, 6));\r\nДля Н = 1 По 4 Цикл\r\nRange.Borders(Н).Linestyle = 1;\r\nRange.Borders(Н).Weight = 4;\r\nКонецЦикла;\r\n//внутренние рамки средней прерывистой\r\nДля Н = 11 По 12 Цикл\r\nRange.Borders(Н).Linestyle = -4115;\r\nRange.Borders(Н).Weight = -4138;\r\nКонецЦикла;\r\n\r\n//показываем документ на экране\r\nExcel.Visible = Истина;"'
281   24    RBRACE               '}'
282   0     RBRACE               '}'
282   1     T__0                 ','
283   0     LBRACE               '{'
283   1     T__1                 '0'
283   2     T__0                 ','
284   0     LBRACE               '{'
284   1     STRING               '"Перенос_текста_по_словам"'
284   27    T__0                 ','
284   28    T__1                 '0'
284   29    T__0                 ','
284   30    T__1                 '0'
284   31    T__0                 ','
284   32    STRING               '""'
284   34    T__0                 ','
284   35    STRING               '"//создаем объект для работы с Excel\r\nExcel = Новый COMОбъект(""Excel.Application"");\r\n\r\n//создаем новую таблицу\r\nWorkBook = Excel.WorkBooks.Add();\r\n\r\n//получаем доступ к первому листу таблицы\r\nSheet = WorkBook.WorkSheets(1);\r\n\r\nSheet.Cells(1, 1).Value =\r\n""Очень днинный текст"";\r\nSheet.Cells(1, 1).RowHeight = 45;\r\nSheet.Cells(1, 1).WrapText = Истина;\r\n\r\n//показываем документ на экране\r\nExcel.Visible = Истина;"'
299   24    RBRACE               '}'
300   0     RBRACE               '}'
300   1     T__0                 ','
301   0     LBRACE               '{'
301   1     T__1                 '0'
301   2     T__0                 ','
302   0     LBRACE               '{'
302   1     STRING               '"Открытие_таблицы"'
302   19    T__0                 ','
302   20    T__1                 '0'
302   21    T__0                 ','
302   22    T__1                 '0'
302   23    T__0                 ','
302   24    STRING               '""'
302   26    T__0                 ','
302   27    STRING               '"//создаем объект для работы с Excel\r\nExcel = Новый COMОбъект(""Excel.Application"");\r\n\r\n//открываем таблицу C:\tmp\1.xlsx\r\nWorkBook = Excel.WorkBooks.Open(""C:\tmp\1.xlsx"");\r\n\r\n//показываем документ на экране\r\nExcel.Visible = Истина;"'
309   24    RBRACE               '}'
310   0     RBRACE               '}'
310   1     T__0                 ','
311   0     LBRACE               '{'
311   1     T__1                 '0'
311   2     T__0                 ','
312   0     LBRACE               '{'
312   1     STRING               '"Определение_формата_ячейки"'
312   29    T__0                 ','
312   30    T__1                 '0'
312   31    T__0                 ','
312   32    T__1                 '0'
312   33    T__0                 ','
312   34    STRING               '""'
312   36    T__0                 ','
312   37    STRING               '"//создаем объект для работы с Excel\r\nExcel = Новый COMОбъект(""Excel.Application"");\r\n\r\n//создаем новую таблицу\r\nWorkBook = Excel.WorkBooks.Add();\r\n\r\n//получаем доступ к первому листу таблицы\r\nSheet = WorkBook.WorkSheets(1);\r\n\r\n//задаем значение и числовой формат ячейки\r\nSheet.Cells(1, 1).Value = 1000000;\r\nSheet.Cells(1, 1).NumberFormat = ""# ##0.00"";\r\n\r\n//задаем значение и строковый формат ячейки\r\nSheet.Cells(1, 3).NumberFormat = ""@"";\r\nSheet.Cells(1, 3).Value = ""112233445566778899"";\r\n\r\n//показываем документ на экране\r\nExcel.Visible = Истина;"'
330   24    RBRACE               '}'
331   0     RBRACE               '}'
331   1     T__0                 ','
332   0     LBRACE               '{'
332   1     T__1                 '0'
332   2     T__0                 ','
333   0     LBRACE               '{'
333   1     STRING               '"Объеденение_ячеек"'
333   20    T__0                 ','
333   21    T__1                 '0'
333   22    T__0                 ','
333   23    T__1                 '0'
333   24    T__0                 ','
333   25    STRING               '""'
333   27    T__0                 ','
333   28    STRING               '"//создаем объект для работы с Excel\r\nExcel = Новый COMОбъект(""Excel.Application"");\r\n\r\n//создаем новую таблицу\r\nWorkBook = Excel.WorkBooks.Add();\r\n\r\n//получаем доступ к первому листу таблицы\r\nSheet = WorkBook.WorkSheets(1);\r\n\r\nSheet.Cells(1, 1).Value =\r\n    ""Очень длинный заголовок"";\r\n\r\n//объединяем с 1-й по 3-ю ячейки\r\n//первой строки\r\nSheet.Range(\r\n    Sheet.Cells(1, 1),\r\n    Sheet.Cells(1, 3)).Merge();\r\n\r\n//показываем документ на экране\r\nExcel.Visible = Истина;"'
352   24    RBRACE               '}'
353   0     RBRACE               '}'
353   1     T__0                 ','
354   0     LBRACE               '{'
354   1     T__1                 '0'
354   2     T__0                 ','
355   0     LBRACE               '{'
355   1     STRING               '"Изминение_ширины_столбцов"'
355   28    T__0                 ','
355   29    T__1                 '0'
355   30    T__0                 ','
355   31    T__1                 '0'
355   32    T__0                 ','
355   33    STRING               '""'
355   35    T__0                 ','
355   36    STRING               '"//создаем объект для работы с Excel\r\nExcel = Новый COMОбъект(""Excel.Application"");\r\n\r\n//создаем новую таблицу\r\nWorkBook = Excel.WorkBooks.Add();\r\n\r\n//получаем доступ к первому листу таблицы\r\nSheet = WorkBook.WorkSheets(1);\r\n\r\n//задаем ширину первых 5-ти столбцов\r\nДля Н = 1 По 5 Цикл\r\n    Sheet.Columns(Н).ColumnWidth = Н * 10;\r\nКонецЦикла;\r\n\r\n//показываем документ на экране\r\nExcel.Visible = Истина;"'
370   24    RBRACE               '}'
371   0     RBRACE               '}'
371   1     T__0                 ','
372   0     LBRACE               '{'
372   1     T__1                 '0'
372   2     T__0                 ','
373   0     LBRACE               '{'
373   1     STRING               '"Изменение цвета ячеек"'
373   24    T__0                 ','
373   25    T__1                 '0'
373   26    T__0                 ','
373   27    T__1                 '0'
373   28    T__0                 ','
373   29    STRING               '""'
373   31    T__0                 ','
373   32    STRING               '"//создаем объект для работы с Excel\r\nExcel = Новый COMОбъект(""Excel.Application"");\r\n\r\n//создаем новую таблицу\r\nWorkBook = Excel.WorkBooks.Add();\r\n\r\n//получаем доступ к первому листу таблицы\r\nSheet = WorkBook.WorkSheets(1);\r\n\r\nSheet.Cells(2, 2).Value = ""Текст"";\r\n//желтый цвет текста\r\nSheet.Cells(2, 2).Font.Color = -16711681;\r\n//черный цвет фона\r\nSheet.Cells(2, 2).Interior.Color = 526344;\r\n\r\n//показываем документ на экране\r\nExcel.Visible = Истина;"'
389   24    RBRACE               '}'
390   0     RBRACE               '}'
390   1     T__0                 ','
391   0     LBRACE               '{'
391   1     T__1                 '0'
391   2     T__0                 ','
392   0     LBRACE               '{'
392   1     STRING               '"Изменение_ориентации_листа"'
392   29    T__0                 ','
392   30    T__1                 '0'
392   31    T__0                 ','
392   32    T__1                 '0'
392   33    T__0                 ','
392   34    STRING               '""'
392   36    T__0                 ','
392   37    STRING               '"//создаем объект для работы с Excel\r\nExcel = Новый COMОбъект(""Excel.Application"");\r\n\r\n//создаем новую таблицу\r\nWorkBook = Excel.WorkBooks.Add();\r\n\r\n//получаем доступ к первому листу таблицы\r\nSheet = WorkBook.WorkSheets(1);\r\n\r\n//1 - книжная, 2- альбомная\r\nSheet.PageSetup.Orientation = 2;\r\n\r\n//показываем документ на экране\r\nExcel.Visible = Истина;"'
405   24    RBRACE               '}'
406   0     RBRACE               '}'
406   1     T__0                 ','
407   0     LBRACE               '{'
407   1     T__1                 '0'
407   2     T__0                 ','
408   0     LBRACE               '{'
408   1     STRING               '"Изменение_имени_листа"'
408   24    T__0                 ','
408   25    T__1                 '0'
408   26    T__0                 ','
408   27    T__1                 '0'
408   28    T__0                 ','
408   29    STRING               '""'
408   31    T__0                 ','
408   32    STRING               '"//создаем объект для работы с Excel\r\nExcel = Новый COMОбъект(""Excel.Application"");\r\n\r\n//создаем новую таблицу\r\nWorkBook = Excel.WorkBooks.Add();\r\n\r\n//получаем доступ к первому листу таблицы\r\nSheet = WorkBook.WorkSheets(1);\r\n\r\n//задаем имя листа Excel\r\nSheet.Name = ""НовоеИмя"";\r\n\r\n//показываем документ на экране\r\nExcel.Visible = Истина;"'
421   24    RBRACE               '}'
422   0     RBRACE               '}'
422   1     T__0                 ','
423   0     LBRACE               '{'
423   1     T__1                 '0'
423   2     T__0                 ','
424   0     LBRACE               '{'
424   1     STRING               '"Изменение_высоты_строк"'
424   25    T__0                 ','
424   26    T__1                 '0'
424   27    T__0                 ','
424   28    T__1                 '0'
424   29    T__0                 ','
424   30    STRING               '""'
424   32    T__0                 ','
424   33    STRING               '"//создаем объект для работы с Excel\r\nExcel = Новый COMОбъект(""Excel.Application"");\r\n\r\n//создаем новую таблицу\r\nWorkBook = Excel.WorkBooks.Add();\r\n\r\n//получаем доступ к первому листу таблицы\r\nSheet = WorkBook.WorkSheets(1);\r\n\r\n//меняем высоту первой строки\r\nSheet.Rows(1).RowHeight = 30;\r\n\r\n//меняем высоту со 2-й по 5-ю\r\nRange = Sheet.Range(\r\n    Sheet.Cells(2, 1),\r\n    Sheet.Cells(5, 1));\r\nRange.RowHeight = 10;\r\n\r\n//показываем документ на экране\r\nExcel.Visible = Истина;"'
443   24    RBRACE               '}'
444   0     RBRACE               '}'
444   1     T__0                 ','
445   0     LBRACE               '{'
445   1     T__1                 '0'
445   2     T__0                 ','
446   0     LBRACE               '{'
446   1     STRING               '"Задание_отступов_для_печати"'
446   30    T__0                 ','
446   31    T__1                 '0'
446   32    T__0                 ','
446   33    T__1                 '0'
446   34    T__0                 ','
446   35    STRING               '""'
446   37    T__0                 ','
446   38    STRING               '"//создаем объект для работы с Excel\r\nExcel = Новый COMОбъект(""Excel.Application"");\r\n\r\n//создаем новую таблицу\r\nWorkBook = Excel.WorkBooks.Add();\r\n\r\n//получаем доступ к первому листу таблицы\r\nSheet = WorkBook.WorkSheets(1);\r\n\r\n//задаем левый отспут 3 см\r\nSheet.PageSetup.LeftMargin =\r\n    Excel.CentimetersToPoints(3);\r\n//RightMargin - правый отступ\r\n//TopMargin - верхний отступ\r\n//BottomMargin - нижний отступ\r\n\r\n//показываем документ на экране\r\nExcel.Visible = Истина;"'
463   24    RBRACE               '}'
464   0     RBRACE               '}'
464   1     T__0                 ','
465   0     LBRACE               '{'
465   1     T__1                 '0'
465   2     T__0                 ','
466   0     LBRACE               '{'
466   1     STRING               '"Выравнивание_текста_в_ячейке"'
466   31    T__0                 ','
466   32    T__1                 '0'
466   33    T__0                 ','
466   34    T__1                 '0'
466   35    T__0                 ','
466   36    STRING               '""'
466   38    T__0                 ','
466   39    STRING               '"//создаем объект для работы с Excel\r\nExcel = Новый COMОбъект(""Excel.Application"");\r\n\r\n//создаем новую таблицу\r\nWorkBook = Excel.WorkBooks.Add();\r\n\r\n//получаем доступ к первому листу таблицы\r\nSheet = WorkBook.WorkSheets(1);\r\n\r\nSheet.Cells(2, 2).Value = ""Текст"";\r\nSheet.Columns(2).ColumnWidth = 100;\r\nSheet.Rows(2).RowHeight = 100;\r\n\r\n//по центру по вертикли\r\n//левое - 1, правое - 3\r\nSheet.Cells(2, 2).VerticalAlignment = 2;\r\n//по центру по горизонтали\r\n//верхнее - 2, нижнее - 4 \r\nSheet.Cells(2, 2).HorizontalAlignment = 3;\r\n\r\n//показываем документ на экране\r\nExcel.Visible = Истина;"'
487   24    RBRACE               '}'
488   0     RBRACE               '}'
488   1     T__0                 ','
489   0     LBRACE               '{'
489   1     T__1                 '0'
489   2     T__0                 ','
490   0     LBRACE               '{'
490   1     STRING               '"Выгрузка_данных_в_таблицу"'
490   28    T__0                 ','
490   29    T__1                 '0'
490   30    T__0                 ','
490   31    T__1                 '0'
490   32    T__0                 ','
490   33    STRING               '""'
490   35    T__0                 ','
490   36    STRING               '"//создаем объект для работы с Excel\r\nExcel = Новый COMОбъект(""Excel.Application"");\r\n\r\n//создаем новую таблицу\r\nWorkBook = Excel.WorkBooks.Add();\r\n\r\n//получаем доступ к первому листу таблицы\r\nSheet = WorkBook.WorkSheets(1);\r\n\r\n//таблица значений, выгружаемая в Excel\r\nТаб = ПолучитьТабЗначений();\r\n\r\n//переносим заголовки столбцов\r\nНомСтолбца = 1;\r\nНомСтроки = 1;\r\nДля Каждого Колонка Из Таб.Колонки Цикл\r\n    Sheet.Cells(НомСтроки, НомСтолбца).Value = Колонка.Имя;\r\n    НомСтолбца = НомСтолбца + 1;\r\nКонецЦикла;\r\n\r\n//переносим данные\r\nКоличество = Таб.Колонки.Количество();\r\nДля Каждого Строка из Таб Цикл\r\n    НомСтроки = НомСтроки + 1;\r\n    Для Н = 0 По Количество - 1 Цикл\r\n        Sheet.Cells(НомСтроки, Н + 1).Value = Строка[Н];\r\n    КонецЦикла;\r\nКонецЦикла;\r\n\r\n//сохраняем таблицу\r\nWorkBook.SaveAs(""C:\tmp\2.xlsx"");\r\n\r\n//закрываем таблицу\r\nExcel.Application.Quit();\r\n\r\n\r\n&НаСервере\r\nФункция ПолучитьТабЗначений()\r\n    Таб = Новый ТаблицаЗначений;\r\n    Таб.Колонки.Добавить(""Код"");\r\n    Таб.Колонки.Добавить(""Значение"");\r\n\r\n    Строка = Таб.Добавить();\r\n    Строка.Код = 1;\r\n    Строка.Значение = ""Один"";\r\n\r\n    Строка = Таб.Добавить();\r\n    Строка.Код = 2;\r\n    Строка.Значение = ""Два"";\r\n\r\n    Возврат Таб;\r\nКонецФункции"'
541   13    RBRACE               '}'
542   0     RBRACE               '}'
542   1     T__0                 ','
543   0     LBRACE               '{'
543   1     T__1                 '0'
543   2     T__0                 ','
544   0     LBRACE               '{'
544   1     STRING               '"Вставка_формул"'
544   17    T__0                 ','
544   18    T__1                 '0'
544   19    T__0                 ','
544   20    T__1                 '0'
544   21    T__0                 ','
544   22    STRING               '""'
544   24    T__0                 ','
544   25    STRING               '"//создаем объект для работы с Excel\r\nExcel = Новый COMОбъект(""Excel.Application"");\r\n\r\n//создаем новую таблицу\r\nWorkBook = Excel.WorkBooks.Add();\r\n\r\n//получаем доступ к первому листу таблицы\r\nSheet = WorkBook.WorkSheets(1);\r\n\r\nДля Н = 1 По 5 Цикл\r\n    Sheet.Cells(Н, 1).Value = Н * 2;\r\n    Sheet.Cells(Н, 2).Value = Н * 3;\r\nКонецЦикла;\r\n\r\n//формула с прямыми ссылками на ячейки\r\nSheet.Cells(6, 1).Formula = ""=sum(A1:A5)"";\r\n\r\n//формула с относительними ссылками на ячейки\r\nSheet.Cells(6, 2).Formula = ""=sum(R[-1]C:R[-5]C)"";\r\n\r\n//показываем документ на экране\r\nExcel.Visible = Истина;"'
565   24    RBRACE               '}'
566   0     RBRACE               '}'
566   1     T__0                 ','
567   0     LBRACE               '{'
567   1     T__1                 '0'
567   2     T__0                 ','
568   0     LBRACE               '{'
568   1     STRING               '"Вставка_массива_данных"'
568   25    T__0                 ','
568   26    T__1                 '0'
568   27    T__0                 ','
568   28    T__1                 '0'
568   29    T__0                 ','
568   30    STRING               '""'
568   32    T__0                 ','
568   33    STRING               '"//создаем объект для работы с Excel\r\nExcel = Новый COMОбъект(""Excel.Application"");\r\n\r\n//создаем новую таблицу\r\nWorkBook = Excel.WorkBooks.Add();\r\n\r\n//получаем доступ к первому листу таблицы\r\nSheet = WorkBook.WorkSheets(1);\r\n\r\n//заполняем массив таблицей умножения   \r\ndata = Новый COMSafeArray(""VT_VARIANT"", 9, 9);\r\nДля Н1 = 1 По 9 Цикл\r\n    Для Н2 = 1 По 9 Цикл\r\n        data.SetValue(Н1 - 1, Н2 - 1, Н1 * Н2);\r\n    КонецЦикла;\r\nКонецЦикла;\r\n\r\n//выгружаем массив в Excel\r\n//вставка массива происходит значительно\r\n//быстрее, чем заполнение отдельных ячеек\r\nRange = Sheet.Range(\r\n    Sheet.Cells(1, 1),\r\n    Sheet.Cells(9, 9));\r\nRange.Value = data;\r\n\r\n//показываем документ на экране\r\nExcel.Visible = Истина;"'
594   24    RBRACE               '}'
595   0     RBRACE               '}'
595   1     T__0                 ','
596   0     LBRACE               '{'
596   1     T__1                 '0'
596   2     T__0                 ','
597   0     LBRACE               '{'
597   1     STRING               '"Автоопределение_ширины_столбцов"'
597   34    T__0                 ','
597   35    T__1                 '0'
597   36    T__0                 ','
597   37    T__1                 '0'
597   38    T__0                 ','
597   39    STRING               '""'
597   41    T__0                 ','
597   42    STRING               '"//создаем объект для работы с Excel\r\nExcel = Новый COMОбъект(""Excel.Application"");\r\n\r\n//создаем новую таблицу\r\nWorkBook = Excel.WorkBooks.Add();\r\n\r\n//получаем доступ к первому листу таблицы\r\nSheet = WorkBook.WorkSheets(1);\r\n\r\n//заносим информацию в ячейки\r\nстрока = """";\r\nДля н = 1 По 9 Цикл\r\n    строка = строка + н;\r\n    Sheet.Cells(1, н).Value = строка;\r\nКонецЦикла;\r\n\r\n//автоопределение ширины первого столбца\r\nSheet.Columns(1).AutoFit();\r\n\r\n//автоопределение ширины со 2-го по 9-й\r\nRange = Sheet.Range(\r\n    Sheet.Cells(1, 2),\r\n    Sheet.Cells(1, 9));\r\nRange.EntireColumn.AutoFit();\r\n\r\n//показываем документ на экране\r\nExcel.Visible = Истина;"'
623   24    RBRACE               '}'
624   0     RBRACE               '}'
624   1     T__0                 ','
625   0     LBRACE               '{'
625   1     T__1                 '0'
625   2     T__0                 ','
626   0     LBRACE               '{'
626   1     STRING               '"Получение списка имён листов"'
626   31    T__0                 ','
626   32    T__1                 '0'
626   33    T__0                 ','
626   34    T__1                 '0'
626   35    T__0                 ','
626   36    STRING               '""'
626   38    T__0                 ','
626   39    STRING               '"Эксель = новый COMОбъект(""Excel.Application"");\r\nКнига = Эксель.WorkBooks.Open(""C:\file.xls"");\r\nКоличествоЛистов = Книга.Sheets.Count;\r\nМассивИмёнЛистов = новый Массив;\r\nдля сс = 1 По КоличествоЛистов Цикл\r\n    МассивИмёнЛистов.Добавить(Книга.Sheets(сс).Name);\r\nКонецЦикла;\r\nЭксель.Application.Quit();\r\n//\r\n//использование\r\nЛистЕксель = МассивИмёнЛистов[0];\r\nЛист = Книга.WorkSheets(ЛистЕксель);"'
637   37    RBRACE               '}'
638   0     RBRACE               '}'
638   1     T__0                 ','
639   0     LBRACE               '{'
639   1     T__1                 '0'
639   2     T__0                 ','
640   0     LBRACE               '{'
640   1     STRING               '"Определяем количество заполненных строк и колонок"'
640   52    T__0                 ','
640   53    T__1                 '0'
640   54    T__0                 ','
640   55    T__1                 '0'
640   56    T__0                 ','
640   57    STRING               '""'
640   59    T__0                 ','
640   60    STRING               '"//Получим количество строк и колонок.\r\n//В разных версиях Excel получаются по-разному, поэтому сначала определим версию Excel\r\nВерсия = Лев(Excel.Version,Найти(Excel.Version,""."")-1);\r\nЕсли Версия = ""8"" тогда\r\nФайлСтрок = Excel.Cells.CurrentRegion.Rows.Count;\r\nФайлКолонок = Макс(Excel.Cells.CurrentRegion.Columns.Count, 13);\r\nИначе\r\nФайлСтрок = Excel.Cells(1,1).SpecialCells(11).Row;\r\nФайлКолонок = Excel.Cells(1,1).SpecialCells(11).Column;\r\nКонецесли;"'
649   11    RBRACE               '}'
650   0     RBRACE               '}'
650   1     T__0                 ','
651   0     LBRACE               '{'
651   1     T__1                 '0'
651   2     T__0                 ','
652   0     LBRACE               '{'
652   1     STRING               '"Закрыть Excel в 1С после считывания данных"'
652   45    T__0                 ','
652   46    T__1                 '0'
652   47    T__0                 ','
652   48    T__1                 '0'
652   49    T__0                 ','
652   50    STRING               '""'
652   52    T__0                 ','
652   53    STRING               '"  Excel.DisplayAlerts = 0; \r\n  Excel.Quit();\r\n  Excel.DisplayAlerts = 1;"'
654   27    RBRACE               '}'
655   0     RBRACE               '}'
656   0     RBRACE               '}'
656   1     T__0                 ','
657   0     LBRACE               '{'
657   1     INT                  '11'
657   3     T__0                 ','
658   0     LBRACE               '{'
658   1     STRING               '"Работа с Word"'
658   16    T__0                 ','
658   17    T__2                 '1'
658   18    T__0                 ','
658   19    T__1                 '0'
658   20    T__0                 ','
658   21    STRING               '""'
658   23    T__0                 ','
658   24    STRING               '""'
658   26    RBRACE               '}'
658   27    T__0                 ','
659   0     LBRACE               '{'
659   1     T__1                 '0'
659   2     T__0                 ','
660   0     LBRACE               '{'
660   1     STRING               '"Вставка_текста"'
660   17    T__0                 ','
660   18    T__1                 '0'
660   19    T__0                 ','
660   20    T__1                 '0'
660   21    T__0                 ','
660   22    STRING               '""'
660   24    T__0                 ','
660   25    STRING               '""'
660   27    RBRACE               '}'
661   0     RBRACE               '}'
661   1     T__0                 ','
662   0     LBRACE               '{'
662   1     T__1                 '0'
662   2     T__0                 ','
663   0     LBRACE               '{'
663   1     STRING               '"Выделение_текста"'
663   19    T__0                 ','
663   20    T__1                 '0'
663   21    T__0                 ','
663   22    T__1                 '0'
663   23    T__0                 ','
663   24    STRING               '""'
663   26    T__0                 ','
663   27    STRING               '""'
663   29    RBRACE               '}'
664   0     RBRACE               '}'
664   1     T__0                 ','
665   0     LBRACE               '{'
665   1     T__1                 '0'
665   2     T__0                 ','
666   0     LBRACE               '{'
666   1     STRING               '"Выравнивание_текста"'
666   22    T__0                 ','
666   23    T__1                 '0'
666   24    T__0                 ','
666   25    T__1                 '0'
666   26    T__0                 ','
666   27    STRING               '""'
666   29    T__0                 ','
666   30    STRING               '""'
666   32    RBRACE               '}'
667   0     RBRACE               '}'
667   1     T__0                 ','
668   0     LBRACE               '{'
668   1     T__1                 '0'
668   2     T__0                 ','
669   0     LBRACE               '{'
669   1     STRING               '"Замена_текста"'
669   16    T__0                 ','
669   17    T__1                 '0'
669   18    T__0                 ','
669   19    T__1                 '0'
669   20    T__0                 ','
669   21    STRING               '""'
669   23    T__0                 ','
669   24    STRING               '""'
669   26    RBRACE               '}'
670   0     RBRACE               '}'
670   1     T__0                 ','
671   0     LBRACE               '{'
671   1     T__1                 '0'
671   2     T__0                 ','
672   0     LBRACE               '{'
672   1     STRING               '"Открытие_документа"'
672   21    T__0                 ','
672   22    T__1                 '0'
672   23    T__0                 ','
672   24    T__1                 '0'
672   25    T__0                 ','
672   26    STRING               '""'
672   28    T__0                 ','
672   29    STRING               '""'
672   31    RBRACE               '}'
673   0     RBRACE               '}'
673   1     T__0                 ','
674   0     LBRACE               '{'
674   1     T__1                 '0'
674   2     T__0                 ','
675   0     LBRACE               '{'
675   1     STRING               '"Преобразование_в_Таблицу"'
675   27    T__0                 ','
675   28    T__1                 '0'
675   29    T__0                 ','
675   30    T__1                 '0'
675   31    T__0                 ','
675   32    STRING               '""'
675   34    T__0                 ','
675   35    STRING               '""'
675   37    RBRACE               '}'
676   0     RBRACE               '}'
676   1     T__0                 ','
677   0     LBRACE               '{'
677   1     T__1                 '0'
677   2     T__0                 ','
678   0     LBRACE               '{'
678   1     STRING               '"Создание_документа"'
678   21    T__0                 ','
678   22    T__1                 '0'
678   23    T__0                 ','
678   24    T__1                 '0'
678   25    T__0                 ','
678   26    STRING               '""'
678   28    T__0                 ','
678   29    STRING               '""'
678   31    RBRACE               '}'
679   0     RBRACE               '}'
679   1     T__0                 ','
680   0     LBRACE               '{'
680   1     T__1                 '0'
680   2     T__0                 ','
681   0     LBRACE               '{'
681   1     STRING               '"Сохранение_документа"'
681   23    T__0                 ','
681   24    T__1                 '0'
681   25    T__0                 ','
681   26    T__1                 '0'
681   27    T__0                 ','
681   28    STRING               '""'
681   30    T__0                 ','
681   31    STRING               '""'
681   33    RBRACE               '}'
682   0     RBRACE               '}'
682   1     T__0                 ','
683   0     LBRACE               '{'
683   1     T__1                 '0'
683   2     T__0                 ','
684   0     LBRACE               '{'
684   1     STRING               '"Удаление_текста"'
684   18    T__0                 ','
684   19    T__1                 '0'
684   20    T__0                 ','
684   21    T__1                 '0'
684   22    T__0                 ','
684   23    STRING               '""'
684   25    T__0                 ','
684   26    STRING               '"//создаем объект для работы с Word\r\nWord = Новый COMОбъект(""Word.Application"");\r\n\r\n//создаем новый документ\r\nDoc = Word.Documents.Add();\r\n\r\n//добавляем параграф\r\nPar = Doc.Paragraphs.Add();\r\nPar.Range.InsertBefore(""Некоторый текст"");\r\n\r\n//удаляем слово некоторый и пробел\r\nRange = Doc.Range(0, 10);\r\nRange.Text = """";\r\n\r\n//показываем документ на экране\r\nWord.Visible = Истина;"'
699   23    RBRACE               '}'
700   0     RBRACE               '}'
700   1     T__0                 ','
701   0     LBRACE               '{'
701   1     T__1                 '0'
701   2     T__0                 ','
702   0     LBRACE               '{'
702   1     STRING               '"Форматирование_текста"'
702   24    T__0                 ','
702   25    T__1                 '0'
702   26    T__0                 ','
702   27    T__1                 '0'
702   28    T__0                 ','
702   29    STRING               '""'
702   31    T__0                 ','
702   32    STRING               '"//создаем объект для работы с Word\r\nWord = Новый COMОбъект(""Word.Application"");\r\n\r\n//создаем новый документ\r\nDoc = Word.Documents.Add();\r\n\r\n//добавляем параграф\r\nPar = Doc.Paragraphs.Add();\r\nPar.Range.InsertBefore(""Форматируем этот текст"");\r\n//меняем размер шрифта\r\nPar.Range.Font.Size = 15;\r\n//меняем название шрифта\r\nPar.Range.Font.Name = ""Verdana"";\r\n\r\n//выбираем слово ""этот""\r\nRange = Doc.Range(12, 16);\r\n//меняем шрифт на ширный\r\nRange.Font.Bold = Истина;\r\n//курсив\r\nRange.Font.Italic = Истина;\r\n//подчеркнутый\r\nRange.Font.Underline = Истина;\r\n//красный\r\nRange.Font.Color = 13311;\r\n\r\n//показываем документ на экране\r\nWord.Visible = Истина;"'
728   23    RBRACE               '}'
729   0     RBRACE               '}'
729   1     T__0                 ','
730   0     LBRACE               '{'
730   1     T__1                 '0'
730   2     T__0                 ','
731   0     LBRACE               '{'
731   1     STRING               '"Чтение_текста_документа"'
731   26    T__0                 ','
731   27    T__1                 '0'
731   28    T__0                 ','
731   29    T__1                 '0'
731   30    T__0                 ','
731   31    STRING               '""'
731   33    T__0                 ','
731   34    STRING               '"//создаем объект для работы с Word\r\nWord = Новый COMОбъект(""Word.Application"");\r\n\r\n//открываем документ C:\tmp\1.docx\r\nDoc = Word.Documents.Open(""C:\tmp\1.docx"");\r\n\r\n//читаем весь текст документа\r\nText = doc.Content.Text;\r\nСообщить(Text);\r\n\r\n//читаем с 6-го по 10-й символ\r\nFrom = 6;\r\nTo = 10;\r\nRange = Doc.Range(From, To);\r\nText = Range.Text;\r\nСообщить(Text);\r\n\r\n//закрыть документ\r\nDoc.Close();\r\nWord.Quit();"'
750   13    RBRACE               '}'
751   0     RBRACE               '}'
752   0     RBRACE               '}'
752   1     T__0                 ','
753   0     LBRACE               '{'
753   1     INT                  '2'
753   2     T__0                 ','
754   0     LBRACE               '{'
754   1     STRING               '"ДиалогВыбораФайла"'
754   20    T__0                 ','
754   21    T__2                 '1'
754   22    T__0                 ','
754   23    T__1                 '0'
754   24    T__0                 ','
754   25    STRING               '""'
754   27    T__0                 ','
754   28    STRING               '""'
754   30    RBRACE               '}'
754   31    T__0                 ','
755   0     LBRACE               '{'
755   1     T__1                 '0'
755   2     T__0                 ','
756   0     LBRACE               '{'
756   1     STRING               '"ДиалогВыбораФайла"'
756   20    T__0                 ','
756   21    T__1                 '0'
756   22    T__0                 ','
756   23    T__1                 '0'
756   24    T__0                 ','
756   25    STRING               '""'
756   27    T__0                 ','
756   28    STRING               '"//Открываем стандартный диалог Windows выбора каталога/файла в режиме выбора каталога\r\nДиалог = Новый \r\nДиалогВыбораФайла(РежимДиалогаВыбораФайла.ВыборКаталога);\r\n//Если пользователь не нажал кнопку ОТМЕНА в диалоге\r\nЕсли Диалог.Выбрать() Тогда\r\n      ИмяКаталога = Диалог.Каталог;\r\nКонецЕсли;\r\nСообщить(ИмяКаталога);\r\n"'
764   1     RBRACE               '}'
765   0     RBRACE               '}'
765   1     T__0                 ','
766   0     LBRACE               '{'
766   1     T__1                 '0'
766   2     T__0                 ','
767   0     LBRACE               '{'
767   1     STRING               '"ДиалогВыбораФайла2"'
767   21    T__0                 ','
767   22    T__1                 '0'
767   23    T__0                 ','
767   24    T__1                 '0'
767   25    T__0                 ','
767   26    STRING               '""'
767   28    T__0                 ','
767   29    STRING               '" //Открываем стандартный диалог Windows выбора каталога/файла в режиме выбора файла на сохранение\r\nДиалог = Новый \r\nДиалогВыбораФайла(РежимДиалогаВыбораФайла.Сохранение);\r\n//каталог по-умолчанию, можно не указывать\r\nДиалог.Каталог = ""C:\"";\r\n//фильтр для одного вида файлов, для нескольких – см. следующий пример\r\nДиалог.Фильтр = ""Текстовый файл (*.txt)|*.txt|"";      //""Документ Excel (*.xls, *.xlsx)|*.xls;*.xlsx|""\r\n//Если пользователь не нажал кнопку ОТМЕНА в диалоге\r\nЕсли Диалог.Выбрать() Тогда\r\n//Полное имя файла – с учетом «пути к нему» (имени каталога к нему)\r\n    ИмяФайла = Диалог.ПолноеИмяФайла;\r\nКонецЕсли;\r\nСообщить(ИмяФайла);\r"'
779   21    RBRACE               '}'
780   0     RBRACE               '}'
781   0     RBRACE               '}'
781   1     T__0                 ','
782   0     LBRACE               '{'
782   1     INT                  '2'
782   2     T__0                 ','
783   0     LBRACE               '{'
783   1     STRING               '"Работы с файлами"'
783   19    T__0                 ','
783   20    T__2                 '1'
783   21    T__0                 ','
783   22    T__1                 '0'
783   23    T__0                 ','
783   24    STRING               '""'
783   26    T__0                 ','
783   27    STRING               '""'
783   29    RBRACE               '}'
783   30    T__0                 ','
784   0     LBRACE               '{'
784   1     INT                  '2'
784   2     T__0                 ','
785   0     LBRACE               '{'
785   1     STRING               '"Операции над файлами"'
785   23    T__0                 ','
785   24    T__2                 '1'
785   25    T__0                 ','
785   26    T__1                 '0'
785   27    T__0                 ','
785   28    STRING               '""'
785   30    T__0                 ','
785   31    STRING               '""'
785   33    RBRACE               '}'
785   34    T__0                 ','
786   0     LBRACE               '{'
786   1     T__1                 '0'
786   2     T__0                 ','
787   0     LBRACE               '{'
787   1     STRING               '"Как проверить существование файла"'
787   36    T__0                 ','
787   37    T__1                 '0'
787   38    T__0                 ','
787   39    T__1                 '0'
787   40    T__0                 ','
787   41    STRING               '""'
787   43    T__0                 ','
787   44    STRING               '"ФайлНаДиске = Новый Файл(""c:\file_src.txt"");\r\n    Если ФайлНаДиске.Существует() Тогда\r\n        Сообщить(""c:\file_src.txt существует"");\r\n    КонецЕсли;"'
790   15    RBRACE               '}'
791   0     RBRACE               '}'
791   1     T__0                 ','
792   0     LBRACE               '{'
792   1     T__1                 '0'
792   2     T__0                 ','
793   0     LBRACE               '{'
793   1     STRING               '"Как скопировать файл"'
793   23    T__0                 ','
793   24    T__1                 '0'
793   25    T__0                 ','
793   26    T__1                 '0'
793   27    T__0                 ','
793   28    STRING               '""'
793   30    T__0                 ','
793   31    STRING               '"КопироватьФайл(\r\n        ""c:\file_src.txt"", // что копируем\r\n        ""c:\file_dest.txt"" // куда копируем\r\n    ); // перезапишет, если уже есть такой файл"'
796   48    RBRACE               '}'
797   0     RBRACE               '}'
798   0     RBRACE               '}'
798   1     T__0                 ','
799   0     LBRACE               '{'
799   1     T__1                 '0'
799   2     T__0                 ','
800   0     LBRACE               '{'
800   1     STRING               '"НачатьПоискФайлов"'
800   20    T__0                 ','
800   21    T__1                 '0'
800   22    T__0                 ','
800   23    T__1                 '0'
800   24    T__0                 ','
800   25    STRING               '""'
800   27    T__0                 ','
800   28    STRING               '"&НаКлиенте\r\nПроцедура АсинхронныеМетоды()\r\n \r\n ОбратныйВызов = Новый ОписаниеОповещения(""ОбработкаЗавершения"", ЭтотОбъект, ""доп. параметры"", ""ОбработкаОшибки"", ЭтотОбъект); \r\n \r\n //поищем файлы в папке tmp\r\n НачатьПоискФайлов(ОбратныйВызов, ""D:\tmp"", ""*.*"");\r\n \r\nКонецПроцедуры\r\n// разместить на форме где работают  \r\n&НаКлиенте\r\nПроцедура ОбработкаЗавершения(НайденныеФайлы, ДополнительныеПараметры) Экспорт\r\n \r\n //выводим список найденых файлов\r\n Для Каждого Файл Из НайденныеФайлы Цикл\r\n Сообщить(Файл.ПолноеИмя);\r\n КонецЦикла; \r\n \r\n //дополнительный параметр указанный в описании оповещения\r\n Сообщить(ДополнительныеПараметры);\r\n \r\nКонецПроцедуры\r\n \r\n&НаКлиенте\r\nПроцедура ОбработкаОшибки(ИнформацияОбОшибке, СтандартнаяОбработка, ДополнительныеПараметры) Экспорт\r\n \r\n Сообщить(""Ошибка поиска файлов: "" + КраткоеПредставлениеОшибки(ИнформацияОбОшибке));\r\n \r\n Сообщить(ДополнительныеПараметры);\r\n \r\nКонецПроцедуры"'
830   15    RBRACE               '}'
831   0     RBRACE               '}'
832   0     RBRACE               '}'
833   0     RBRACE               '}'
833   1     T__0                 ','
834   0     LBRACE               '{'
834   1     INT                  '16'
834   3     T__0                 ','
835   0     LBRACE               '{'
835   1     STRING               '"Формы"'
835   8     T__0                 ','
835   9     T__2                 '1'
835   10    T__0                 ','
835   11    T__1                 '0'
835   12    T__0                 ','
835   13    STRING               '""'
835   15    T__0                 ','
835   16    STRING               '""'
835   18    RBRACE               '}'
835   19    T__0                 ','
836   0     LBRACE               '{'
836   1     INT                  '2'
836   2     T__0                 ','
837   0     LBRACE               '{'
837   1     STRING               '"Временное хранилище"'
837   22    T__0                 ','
837   23    T__2                 '1'
837   24    T__0                 ','
837   25    T__1                 '0'
837   26    T__0                 ','
837   27    STRING               '""'
837   29    T__0                 ','
837   30    STRING               '""'
837   32    RBRACE               '}'
837   33    T__0                 ','
838   0     LBRACE               '{'
838   1     T__1                 '0'
838   2     T__0                 ','
839   0     LBRACE               '{'
839   1     STRING               '"Передача_с_сервера_на_форму"'
839   30    T__0                 ','
839   31    T__1                 '0'
839   32    T__0                 ','
839   33    T__1                 '0'
839   34    T__0                 ','
839   35    STRING               '""'
839   37    T__0                 ','
839   38    STRING               '"&НаКлиенте\r\n//Получаем с сервера адрес врем. хранилища\r\nАдрес = ПолучитьАдресСтруктуры();\r\n//Получаем по адреу значение\r\nМонитор = ПолучитьИзВременногоХранилища(Адрес);\r\n//Используем значение на клиенте\r\nСообщить(Монитор.Контрастность);\r\n\r\n&НаСервереБезКонтекста\r\n\r\nФункция ПолучитьАдресСтруктуры()\r\n    //Создаем структуру\r\n    Монитор = Новый Структура(\r\n        ""Диагональ,Контрастность,Матрица"",\r\n        23, ""1000:1"", ""IPS"");\r\n    //Помещаем во врем. хранилище\r\n    Адрес = ПоместитьВоВременноеХранилище(Монитор);\r\n	//Возвращаем адрес\r\n    Возврат Адрес;\r\n\r\nКонецФункции"'
859   13    RBRACE               '}'
860   0     RBRACE               '}'
860   1     T__0                 ','
861   0     LBRACE               '{'
861   1     T__1                 '0'
861   2     T__0                 ','
862   0     LBRACE               '{'
862   1     STRING               '"Между_серверными_вызовами"'
862   28    T__0                 ','
862   29    T__1                 '0'
862   30    T__0                 ','
862   31    T__1                 '0'
862   32    T__0                 ','
862   33    STRING               '""'
862   35    T__0                 ','
862   36    STRING               '"//Получаем с сервера адрес врем. хранилища\r\nАдрес = ПолучитьАдресТаблицы();\r\n//Передаем адрес в серверную процедуру\r\nОбработкаТаблицы(Адрес);\r\n\r\n&НаСервереБезКонтекста\r\n\r\nФункция ПолучитьАдресТаблицы()\r\n    //Создаем таблицу значений\r\n    Товары = Новый ТаблицаЗначений;\r\n    Товары.Колонки.Добавить(""Товар"");\r\n    Товары.Колонки.Добавить(""Цена"");\r\n    Товар = Товары.Добавить();\r\n    Товар.Товар = ""Чайник"";\r\n    Товар.Цена = 2500.5;\r\n    //Помещаем во врем. хранилище\r\n    Возврат ПоместитьВоВременноеХранилище(Товары);\r\nКонецФункции\r\n\r\n\r\n&НаСервереБезКонтекста\r\n\r\nПроцедура ОбработкаТаблицы(Адрес)\r\n\r\n    //Получаем по адресу значение\r\n\r\n    Товары = ПолучитьИзВременногоХранилища(Адрес);\r\n\r\n    //Работаем с таблицей значений\r\n\r\n    Сообщить(Товары.Количество());\r\n\r\nКонецПроцедуры"'
894   15    RBRACE               '}'
895   0     RBRACE               '}'
896   0     RBRACE               '}'
896   1     T__0                 ','
897   0     LBRACE               '{'
897   1     INT                  '3'
897   2     T__0                 ','
898   0     LBRACE               '{'
898   1     STRING               '"Настройки отображения формы"'
898   30    T__0                 ','
898   31    T__2                 '1'
898   32    T__0                 ','
898   33    T__1                 '0'
898   34    T__0                 ','
898   35    STRING               '""'
898   37    T__0                 ','
898   38    STRING               '""'
898   40    RBRACE               '}'
898   41    T__0                 ','
899   0     LBRACE               '{'
899   1     T__1                 '0'
899   2     T__0                 ','
900   0     LBRACE               '{'
900   1     STRING               '"Изменение_высоты_и_ширины"'
900   28    T__0                 ','
900   29    T__1                 '0'
900   30    T__0                 ','
900   31    T__1                 '0'
900   32    T__0                 ','
900   33    STRING               '""'
900   35    T__0                 ','
900   36    STRING               '"//Получаем форму создания новой записи регистра сведений ""Цены""\r\nФорма = ПолучитьФорму(""РегистрСведений.Цены.ФормаЗаписи"");\r\n//Показываем форму\r\nФорма.Открыть();\r\n//Меняем высоту и ширину\r\nФорма.Высота = 15;\r\nФорма.Ширина = 15;"'
906   19    RBRACE               '}'
907   0     RBRACE               '}'
907   1     T__0                 ','
908   0     LBRACE               '{'
908   1     T__1                 '0'
908   2     T__0                 ','
909   0     LBRACE               '{'
909   1     STRING               '"Изменение_группировки_элементов"'
909   34    T__0                 ','
909   35    T__1                 '0'
909   36    T__0                 ','
909   37    T__1                 '0'
909   38    T__0                 ','
909   39    STRING               '""'
909   41    T__0                 ','
909   42    STRING               '"//Получаем форму создания новой\r\n//записи регистра сведений ""Цены""\r\nФорма = ПолучитьФорму(""РегистрСведений.Цены.ФормаЗаписи"");\r\n//Показываем форму\r\nФорма.Открыть();\r\n//Меняем группировку элементов формы на горизонтальную\r\nФорма.Группировка = ГруппировкаПодчиненныхЭлементовФормы.Горизонтальная;"'
915   73    RBRACE               '}'
916   0     RBRACE               '}'
916   1     T__0                 ','
917   0     LBRACE               '{'
917   1     T__1                 '0'
917   2     T__0                 ','
918   0     LBRACE               '{'
918   1     STRING               '"Изменение_доступности_формы"'
918   30    T__0                 ','
918   31    T__1                 '0'
918   32    T__0                 ','
918   33    T__1                 '0'
918   34    T__0                 ','
918   35    STRING               '""'
918   37    T__0                 ','
918   38    STRING               '"//Получаем форму создания новой\r\n//записи регистра сведений ""Цены""\r\nФорма = ПолучитьФорму(""РегистрСведений.Цены.ФормаЗаписи"");\r\n//Показываем форму\r\nФорма.Открыть();\r\n//Блокируем дуступ к элементам формы\r\nФорма.Доступность = Ложь;"'
924   26    RBRACE               '}'
925   0     RBRACE               '}'
926   0     RBRACE               '}'
926   1     T__0                 ','
927   0     LBRACE               '{'
927   1     INT                  '10'
927   3     T__0                 ','
928   0     LBRACE               '{'
928   1     STRING               '"Открытие формы"'
928   17    T__0                 ','
928   18    T__2                 '1'
928   19    T__0                 ','
928   20    T__1                 '0'
928   21    T__0                 ','
928   22    STRING               '""'
928   24    T__0                 ','
928   25    STRING               '""'
928   27    RBRACE               '}'
928   28    T__0                 ','
929   0     LBRACE               '{'
929   1     T__1                 '0'
929   2     T__0                 ','
930   0     LBRACE               '{'
930   1     STRING               '"Открыть_объект_с_оповещением"'
930   31    T__0                 ','
930   32    T__1                 '0'
930   33    T__0                 ','
930   34    T__1                 '0'
930   35    T__0                 ','
930   36    STRING               '""'
930   38    T__0                 ','
930   39    STRING               '"//Получаем склад ""Основной""\r\nСклад = ПолучитьОсновнойСклад();\r\n//Указываем процедуру, вызываемую\r\n//при изменении реквизитов склада\r\nОповещение = Новый ОписаниеОповещения(\r\n    ""ОбработатьРезультат"", ЭтотОбъект);\r\n//Отображаем форму склада\r\nПоказатьЗначение(Оповещение, Склад);\r\n//Процедура обработки изменений\r\n&НаКлиенте\r\nПроцедура ОбработатьРезультат(Склад) Экспорт\r\n       Сообщить(Склад);\r\nКонецПроцедуры"'
942   15    RBRACE               '}'
943   0     RBRACE               '}'
943   1     T__0                 ','
944   0     LBRACE               '{'
944   1     T__1                 '0'
944   2     T__0                 ','
945   0     LBRACE               '{'
945   1     STRING               '"Открыть_форму"'
945   16    T__0                 ','
945   17    T__1                 '0'
945   18    T__0                 ','
945   19    T__1                 '0'
945   20    T__0                 ','
945   21    STRING               '""'
945   23    T__0                 ','
945   24    STRING               '"//Способ №1\r\nОткрытьФорму(""Справочник.Сотрудники.ФормаСписка"");\r\n//Способ №2\r\nФорма = ПолучитьФорму(""Справочник.Сотрудники.ФормаСписка"");\r\nФорма.Открыть();"'
949   17    RBRACE               '}'
950   0     RBRACE               '}'
950   1     T__0                 ','
951   0     LBRACE               '{'
951   1     T__1                 '0'
951   2     T__0                 ','
952   0     LBRACE               '{'
952   1     STRING               '"Открыть_форму_выбора"'
952   23    T__0                 ','
952   24    T__1                 '0'
952   25    T__0                 ','
952   26    T__1                 '0'
952   27    T__0                 ','
952   28    STRING               '""'
952   30    T__0                 ','
952   31    STRING               '""'
952   33    RBRACE               '}'
953   0     RBRACE               '}'
953   1     T__0                 ','
954   0     LBRACE               '{'
954   1     T__1                 '0'
954   2     T__0                 ','
955   0     LBRACE               '{'
955   1     STRING               '"Открыть_форму_Модально"'
955   25    T__0                 ','
955   26    T__1                 '0'
955   27    T__0                 ','
955   28    T__1                 '0'
955   29    T__0                 ','
955   30    STRING               '""'
955   32    T__0                 ','
955   33    STRING               '"//Способ №1\r\nОткрытьФормуМодально(""Справочник.Сотрудники.ФормаСписка"");\r\n//Способ №2\r\nФорма = ПолучитьФорму(""Справочник.Сотрудники.ФормаСписка"");\r\nФорма.ОткрытьМодально();"'
959   25    RBRACE               '}'
960   0     RBRACE               '}'
960   1     T__0                 ','
961   0     LBRACE               '{'
961   1     T__1                 '0'
961   2     T__0                 ','
962   0     LBRACE               '{'
962   1     STRING               '"Открыть_форму_объекта"'
962   24    T__0                 ','
962   25    T__1                 '0'
962   26    T__0                 ','
962   27    T__1                 '0'
962   28    T__0                 ','
962   29    STRING               '""'
962   31    T__0                 ','
962   32    STRING               '"&НаКлиенте\r\nПроцедура ПоказатьОсновнойСклад() Экспорт\r\n    //Получаем склад ""Основной""\r\n    Склад = ПолучитьОсновнойСклад();\r\n    ПоказатьЗначение(, Склад);\r\n\r\nКонецПроцедуры\r\n\r\n&НаСервере\r\nФункция ПолучитьОсновнойСклад()\r\n    Возврат Справочники.Склады.Основной;\r\nКонецФункции"'
973   13    RBRACE               '}'
974   0     RBRACE               '}'
974   1     T__0                 ','
975   0     LBRACE               '{'
975   1     T__1                 '0'
975   2     T__0                 ','
976   0     LBRACE               '{'
976   1     STRING               '"Открыть_форму_с_отбором"'
976   26    T__0                 ','
976   27    T__1                 '0'
976   28    T__0                 ','
976   29    T__1                 '0'
976   30    T__0                 ','
976   31    STRING               '""'
976   33    T__0                 ','
976   34    STRING               '"Отбор = Новый Структура;\r\nОтбор.Вставить(""Должность"", ""Матрос"");\r\nПараметры = Новый Структура(""Отбор"", Отбор);\r\n//Открываем форму списка справочника сотрудники\r\n//с отбором по должности ""Матрос""\r\nОткрытьФорму(""Справочник.Сотрудники.ФормаСписка"", Параметры);"'
981   64    RBRACE               '}'
982   0     RBRACE               '}'
982   1     T__0                 ','
983   0     LBRACE               '{'
983   1     T__1                 '0'
983   2     T__0                 ','
984   0     LBRACE               '{'
984   1     STRING               '"Передача параметров в управляемые формы"'
984   42    T__0                 ','
984   43    T__1                 '0'
984   44    T__0                 ','
984   45    T__1                 '0'
984   46    T__0                 ','
984   47    STRING               '""'
984   49    T__0                 ','
984   50    STRING               '"//В месте получения формы \r\nПараметрыСтруктура = Новый Структура(""НовыйПараметр"",ПоследнийЭлемент);\r\nФормаВыбора = ПолучитьФорму(""Справочник.Номенклатура.ФормаВыбора"",ПараметрыСтруктура);\r\n\r\n//В модуле управляемой формы  \r\n\r\n&НаСервере\r\nПроцедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)\r\n    Если Параметры.Свойство(""НовыйПараметр"") Тогда\r\n        // здесь код обработки параметра\r\n    КонецЕсли;\r\nКонецПроцедуры"'
995   15    RBRACE               '}'
996   0     RBRACE               '}'
996   1     T__0                 ','
997   0     LBRACE               '{'
997   1     T__1                 '0'
997   2     T__0                 ','
998   0     LBRACE               '{'
998   1     STRING               '"Передача параметров в обычные формы"'
998   38    T__0                 ','
998   39    T__1                 '0'
998   40    T__0                 ','
998   41    T__1                 '0'
998   42    T__0                 ','
998   43    STRING               '""'
998   45    T__0                 ','
998   46    STRING               '"Форма = Объект.ПолучитьФорму(""ФормаВыбора"",ВладелецФормы, КлючУникальности);\r\nФорма.Параметр = ЗначениеПараметра;\r\nФорма.Открыть();"'
1000  17    RBRACE               '}'
1001  0     RBRACE               '}'
1001  1     T__0                 ','
1002  0     LBRACE               '{'
1002  1     T__1                 '0'
1002  2     T__0                 ','
1003  0     LBRACE               '{'
1003  1     STRING               '"Как открыть общую форму?"'
1003  27    T__0                 ','
1003  28    T__1                 '0'
1003  29    T__0                 ','
1003  30    T__1                 '0'
1003  31    T__0                 ','
1003  32    STRING               '""'
1003  34    T__0                 ','
1003  35    STRING               '"//Здесь ОбщаяФорма - это стандартное указание на одну из общих форм, \r\n//а МояОбщаяФорма – это имя общей формы, созданной в конфигураторе. \r\nОткрытьФорму(""ОбщаяФорма.МояОбщаяФорма""); \r\n//ИЛИ\r\nФрм=ПолучитьФорму(""ОбщаяФорма.ФормаВыбораНоменклатуры"",);\r\nФрм.Открыть();\r\n"'
1009  1     RBRACE               '}'
1010  0     RBRACE               '}'
1010  1     T__0                 ','
1011  0     LBRACE               '{'
1011  1     T__1                 '0'
1011  2     T__0                 ','
1012  0     LBRACE               '{'
1012  1     STRING               '"Получить параметры из закрываемой формы"'
1012  42    T__0                 ','
1012  43    T__1                 '0'
1012  44    T__0                 ','
1012  45    T__1                 '0'
1012  46    T__0                 ','
1012  47    STRING               '""'
1012  49    T__0                 ','
1012  50    STRING               '"//Пишем в модуле формы в методе ПриЗакрытии()\r\n// параметры получаемые формой — родителем в структуру и передать через функцию  ОповеститьОВыборе()  \r\n&НаКлиенте\r\nПроцедура ПриЗакрытии(ЗавершениеРаботы)\r\n	СтруктураВозврата = Новый Структура();\r\n	СтруктураВозврата.Вставить(""Глава"",Глава);\r\n	СтруктураВозврата.Вставить(""Счетчик"",Счетчик); \r\n	\r\n	ОповеститьОВыборе(СтруктураВозврата);\r\nКонецПроцедуры     \r\n\r\n// в форме родителя пишем метод   ОбработкаВыбора()\r\n&НаКлиенте\r\nПроцедура ОбработкаВыбора(ВыбранноеЗначение, ИсточникВыбора)\r\n	Глава = ВыбранноеЗначение.Глава;\r\n	Счетчик = ВыбранноеЗначение.Счетчик;\r\n	\r\nКонецПроцедуры\r\n\r\n"'
1031  1     RBRACE               '}'
1032  0     RBRACE               '}'
1033  0     RBRACE               '}'
1033  1     T__0                 ','
1034  0     LBRACE               '{'
1034  1     INT                  '9'
1034  2     T__0                 ','
1035  0     LBRACE               '{'
1035  1     STRING               '"Получить форму"'
1035  17    T__0                 ','
1035  18    T__2                 '1'
1035  19    T__0                 ','
1035  20    T__1                 '0'
1035  21    T__0                 ','
1035  22    STRING               '""'
1035  24    T__0                 ','
1035  25    STRING               '""'
1035  27    RBRACE               '}'
1035  28    T__0                 ','
1036  0     LBRACE               '{'
1036  1     T__1                 '0'
1036  2     T__0                 ','
1037  0     LBRACE               '{'
1037  1     STRING               '"Форма_документа"'
1037  18    T__0                 ','
1037  19    T__1                 '0'
1037  20    T__0                 ','
1037  21    T__1                 '0'
1037  22    T__0                 ','
1037  23    STRING               '""'
1037  25    T__0                 ','
1037  26    STRING               '"//Получаем форму списка документа ""ОказаниеУслуги""\r\nФорма = ПолучитьФорму(""Документ.ОказаниеУслуги.ФормаСписка"");\r\nФорма.Открыть();\r\n//Получаем форму создания нового\r\n//документа ПриходнаяНакладная\r\nФорма = ПолучитьФорму(""Документ.ПриходнаяНакладная.ФормаОбъекта"");\r\nФорма.Открыть();"'
1043  17    RBRACE               '}'
1044  0     RBRACE               '}'
1044  1     T__0                 ','
1045  0     LBRACE               '{'
1045  1     T__1                 '0'
1045  2     T__0                 ','
1046  0     LBRACE               '{'
1046  1     STRING               '"Форма_констант"'
1046  17    T__0                 ','
1046  18    T__1                 '0'
1046  19    T__0                 ','
1046  20    T__1                 '0'
1046  21    T__0                 ','
1046  22    STRING               '""'
1046  24    T__0                 ','
1046  25    STRING               '"//Форма констант должна быть определена в\r\n//конфигурации в разделе:\r\n//Общие->Общие формы\r\nФорма = ПолучитьФорму(""ОбщаяФорма.ФормаКонстант"");\r\nФорма.Открыть();\r\n//Форма константы ""Экспонента""\r\nФорма = ПолучитьФорму(""Константа.Экспонента.ФормаКонстант"");\r\nФорма.Открыть();"'
1053  17    RBRACE               '}'
1054  0     RBRACE               '}'
1054  1     T__0                 ','
1055  0     LBRACE               '{'
1055  1     T__1                 '0'
1055  2     T__0                 ','
1056  0     LBRACE               '{'
1056  1     STRING               '"Форма_отчета"'
1056  15    T__0                 ','
1056  16    T__1                 '0'
1056  17    T__0                 ','
1056  18    T__1                 '0'
1056  19    T__0                 ','
1056  20    STRING               '""'
1056  22    T__0                 ','
1056  23    STRING               '"//Форма отчета ""Перерасчет""\r\nФорма = ПолучитьФорму(""Отчет.Перерасчет.Форма"");\r\nФорма.Открыть();\r\n//Форма настроек отчета ""Перерасчет""\r\nФорма = ПолучитьФорму(""Отчет.Перерасчет.ФормаНастроек"");\r\nФорма.Открыть();"'
1061  17    RBRACE               '}'
1062  0     RBRACE               '}'
1062  1     T__0                 ','
1063  0     LBRACE               '{'
1063  1     T__1                 '0'
1063  2     T__0                 ','
1064  0     LBRACE               '{'
1064  1     STRING               '"Форма_плана-счетов"'
1064  21    T__0                 ','
1064  22    T__1                 '0'
1064  23    T__0                 ','
1064  24    T__1                 '0'
1064  25    T__0                 ','
1064  26    STRING               '""'
1064  28    T__0                 ','
1064  29    STRING               '"//Получаем форму списка плана счетов ""Основной""\r\nФорма = ПолучитьФорму(""ПланСчетов.Основной.ФормаСписка"");\r\nФорма.Открыть();\r\n//Получаем форму создания нового\r\n//счета плана счетов ""Основной""\r\nФорма = ПолучитьФорму(""ПланСчетов.Основной.ФормаОбъекта"");\r\nФорма.Открыть();"'
1070  17    RBRACE               '}'
1071  0     RBRACE               '}'
1071  1     T__0                 ','
1072  0     LBRACE               '{'
1072  1     T__1                 '0'
1072  2     T__0                 ','
1073  0     LBRACE               '{'
1073  1     STRING               '"Форма_регистра_бугалтерии"'
1073  28    T__0                 ','
1073  29    T__1                 '0'
1073  30    T__0                 ','
1073  31    T__1                 '0'
1073  32    T__0                 ','
1073  33    STRING               '""'
1073  35    T__0                 ','
1073  36    STRING               '"//Форма регистра бухгалтерии ""Управленческий""\r\nФорма = ПолучитьФорму(""РегистрБухгалтерии.Управленческий.ФормаСписка"");\r\nФорма.Открыть();"'
1075  17    RBRACE               '}'
1076  0     RBRACE               '}'
1076  1     T__0                 ','
1077  0     LBRACE               '{'
1077  1     T__1                 '0'
1077  2     T__0                 ','
1078  0     LBRACE               '{'
1078  1     STRING               '"Форма_регистра_накопления"'
1078  28    T__0                 ','
1078  29    T__1                 '0'
1078  30    T__0                 ','
1078  31    T__1                 '0'
1078  32    T__0                 ','
1078  33    STRING               '""'
1078  35    T__0                 ','
1078  36    STRING               '"//Форма регистра накоплений ""ОстаткиМатериалов""\r\nФорма = ПолучитьФорму(""РегистрНакопления.ОстаткиМатериалов.ФормаСписка"");\r\nФорма.Открыть();"'
1080  17    RBRACE               '}'
1081  0     RBRACE               '}'
1081  1     T__0                 ','
1082  0     LBRACE               '{'
1082  1     T__1                 '0'
1082  2     T__0                 ','
1083  0     LBRACE               '{'
1083  1     STRING               '"Форма_регистра_расчета"'
1083  25    T__0                 ','
1083  26    T__1                 '0'
1083  27    T__0                 ','
1083  28    T__1                 '0'
1083  29    T__0                 ','
1083  30    STRING               '""'
1083  32    T__0                 ','
1083  33    STRING               '"//Форма регистра расчета ""Начисления""\r\nФорма = ПолучитьФорму(""РегистрРасчета.Начисления.ФормаСписка"");\r\nФорма.Открыть();"'
1085  17    RBRACE               '}'
1086  0     RBRACE               '}'
1086  1     T__0                 ','
1087  0     LBRACE               '{'
1087  1     T__1                 '0'
1087  2     T__0                 ','
1088  0     LBRACE               '{'
1088  1     STRING               '"Форма_регистра_сведений"'
1088  26    T__0                 ','
1088  27    T__1                 '0'
1088  28    T__0                 ','
1088  29    T__1                 '0'
1088  30    T__0                 ','
1088  31    STRING               '""'
1088  33    T__0                 ','
1088  34    STRING               '"//Форма регистра сведений ""Цены""\r\nФорма = ПолучитьФорму(""РегистрСведений.Цены.ФормаСписка"");\r\nФорма.Открыть();\r\n//Получаем форму создания новой\r\n//записи регистра сведений ""Цены""\r\nФорма = ПолучитьФорму(""РегистрСведений.Цены.ФормаЗаписи"");\r\nФорма.Открыть();"'
1094  17    RBRACE               '}'
1095  0     RBRACE               '}'
1095  1     T__0                 ','
1096  0     LBRACE               '{'
1096  1     T__1                 '0'
1096  2     T__0                 ','
1097  0     LBRACE               '{'
1097  1     STRING               '"Форма_справочника"'
1097  20    T__0                 ','
1097  21    T__1                 '0'
1097  22    T__0                 ','
1097  23    T__1                 '0'
1097  24    T__0                 ','
1097  25    STRING               '""'
1097  27    T__0                 ','
1097  28    STRING               '"//Получаем форму списка справочника ""Сотрудники""\r\nФорма = ПолучитьФорму(""Справочник.Сотрудники.ФормаСписка"");\r\nФорма.Открыть();\r\n//Получаем форму создания нового элемента\r\n//справочника Склады\r\nФорма = ПолучитьФорму(""Справочник.Склады.ФормаОбъекта"");\r\nФорма.Открыть();\r\n//Получаем форму создания новой группы\r\n//справочника Номенклатура\r\nПараметры = Новый Структура(""ЭтоГруппа"", Истина);\r\nФорма = ПолучитьФорму(\r\n    ""Справочник.Номенклатура.ФормаГруппы"",\r\n    Параметры);\r\nФорма.Открыть();"'
1110  17    RBRACE               '}'
1111  0     RBRACE               '}'
1112  0     RBRACE               '}'
1112  1     T__0                 ','
1113  0     LBRACE               '{'
1113  1     T__2                 '1'
1113  2     T__0                 ','
1114  0     LBRACE               '{'
1114  1     STRING               '"Работа с реквезитами"'
1114  23    T__0                 ','
1114  24    T__2                 '1'
1114  25    T__0                 ','
1114  26    T__1                 '0'
1114  27    T__0                 ','
1114  28    STRING               '""'
1114  30    T__0                 ','
1114  31    STRING               '""'
1114  33    RBRACE               '}'
1114  34    T__0                 ','
1115  0     LBRACE               '{'
1115  1     T__1                 '0'
1115  2     T__0                 ','
1116  0     LBRACE               '{'
1116  1     STRING               '"Работа_с_реквезитами"'
1116  23    T__0                 ','
1116  24    T__1                 '0'
1116  25    T__0                 ','
1116  26    T__1                 '0'
1116  27    T__0                 ','
1116  28    STRING               '""'
1116  30    T__0                 ','
1116  31    STRING               '"//Стандартные реквизиты на примере\r\n//работы с формой документа\r\nДата = Объект.Дата;\r\nНомер = Объект.Номер;\r\nСообщить(Номер + "" от "" + Дата);\r\n//изменение значения дополнительного реквизита\r\nОбъект.Покупатель =  Справочники.Контрагенты.НайтиПоКоду(""000000001"");"'
1122  73    RBRACE               '}'
1123  0     RBRACE               '}'
1124  0     RBRACE               '}'
1124  1     T__0                 ','
1125  0     LBRACE               '{'
1125  1     INT                  '5'
1125  2     T__0                 ','
1126  0     LBRACE               '{'
1126  1     STRING               '"Работа с табличной частью"'
1126  28    T__0                 ','
1126  29    T__2                 '1'
1126  30    T__0                 ','
1126  31    T__1                 '0'
1126  32    T__0                 ','
1126  33    STRING               '""'
1126  35    T__0                 ','
1126  36    STRING               '""'
1126  38    RBRACE               '}'
1126  39    T__0                 ','
1127  0     LBRACE               '{'
1127  1     T__1                 '0'
1127  2     T__0                 ','
1128  0     LBRACE               '{'
1128  1     STRING               '"Добавление_записи"'
1128  20    T__0                 ','
1128  21    T__1                 '0'
1128  22    T__0                 ','
1128  23    T__1                 '0'
1128  24    T__0                 ','
1128  25    STRING               '""'
1128  27    T__0                 ','
1128  28    STRING               '"Запись = Объект.<ИмяТаблицы>.Добавить();\r\n\r\nЗапись.<ИмяРеквезита> = Справочники.<ИмяСправочника>.НайтиПоКоду(""000000008"");\r\n\r\nЗапись.<ИмяРеквезита> = 5;\r\n\r\nЗапись.<ИмяРеквезита> = 2;"'
1134  27    RBRACE               '}'
1135  0     RBRACE               '}'
1135  1     T__0                 ','
1136  0     LBRACE               '{'
1136  1     T__1                 '0'
1136  2     T__0                 ','
1137  0     LBRACE               '{'
1137  1     STRING               '"Перебор_Записей"'
1137  18    T__0                 ','
1137  19    T__1                 '0'
1137  20    T__0                 ','
1137  21    T__1                 '0'
1137  22    T__0                 ','
1137  23    STRING               '""'
1137  25    T__0                 ','
1137  26    STRING               '"Для Каждого Строка Из Объект.Товары Цикл\r\n    Сообщить(Строка.Товар);\r\nКонецЦикла;"'
1139  12    RBRACE               '}'
1140  0     RBRACE               '}'
1140  1     T__0                 ','
1141  0     LBRACE               '{'
1141  1     T__1                 '0'
1141  2     T__0                 ','
1142  0     LBRACE               '{'
1142  1     STRING               '"Поиск_строк"'
1142  14    T__0                 ','
1142  15    T__1                 '0'
1142  16    T__0                 ','
1142  17    T__1                 '0'
1142  18    T__0                 ','
1142  19    STRING               '""'
1142  21    T__0                 ','
1142  22    STRING               '"//Параметры поиска ""Цена = 5""\r\nОтбор = Новый Структура;\r\nОтбор.Вставить(""Цена"", 5);\r\n//Поиск строк\r\nСтроки = Объект.Товары.НайтиСтроки(Отбор);\r\n//Перебор найденных строк\r\n  Для Каждого Строка Из Строки Цикл\r\n    Сообщить(Строка.Товар);\r\nКонецЦикла;"'
1150  12    RBRACE               '}'
1151  0     RBRACE               '}'
1151  1     T__0                 ','
1152  0     LBRACE               '{'
1152  1     T__1                 '0'
1152  2     T__0                 ','
1153  0     LBRACE               '{'
1153  1     STRING               '"Получить_количество_записей"'
1153  30    T__0                 ','
1153  31    T__1                 '0'
1153  32    T__0                 ','
1153  33    T__1                 '0'
1153  34    T__0                 ','
1153  35    STRING               '""'
1153  37    T__0                 ','
1153  38    STRING               '"Количество = Объект.Товары.Количество();\r\nСообщить(Количество);"'
1154  22    RBRACE               '}'
1155  0     RBRACE               '}'
1155  1     T__0                 ','
1156  0     LBRACE               '{'
1156  1     T__1                 '0'
1156  2     T__0                 ','
1157  0     LBRACE               '{'
1157  1     STRING               '"Удаление-записи"'
1157  18    T__0                 ','
1157  19    T__1                 '0'
1157  20    T__0                 ','
1157  21    T__1                 '0'
1157  22    T__0                 ','
1157  23    STRING               '""'
1157  25    T__0                 ','
1157  26    STRING               '"Если Объект.Товары.Количество() > 0 Тогда\r\n    //Удаляем первую запись\r\n    Объект.Товары.Удалить(0);\r\nКонецЕсли;\r\n\r\n//Удаляем все записи\r\nОбъект.Товары.Очистить();"'
1163  26    RBRACE               '}'
1164  0     RBRACE               '}'
1165  0     RBRACE               '}'
1165  1     T__0                 ','
1166  0     LBRACE               '{'
1166  1     INT                  '2'
1166  2     T__0                 ','
1167  0     LBRACE               '{'
1167  1     STRING               '"Работа с формой на сервере"'
1167  29    T__0                 ','
1167  30    T__2                 '1'
1167  31    T__0                 ','
1167  32    T__1                 '0'
1167  33    T__0                 ','
1167  34    STRING               '""'
1167  36    T__0                 ','
1167  37    STRING               '""'
1167  39    RBRACE               '}'
1167  40    T__0                 ','
1168  0     LBRACE               '{'
1168  1     T__1                 '0'
1168  2     T__0                 ','
1169  0     LBRACE               '{'
1169  1     STRING               '"Реквезит_в_значение_и_обратно"'
1169  32    T__0                 ','
1169  33    T__1                 '0'
1169  34    T__0                 ','
1169  35    T__1                 '0'
1169  36    T__0                 ','
1169  37    STRING               '""'
1169  39    T__0                 ','
1169  40    STRING               '"&НаСервере\r\nПроцедура ОчиститьТаблицуТоваров()\r\n\r\n //Получаем объект документа\r\n ДокОбъект = РеквизитФормыВЗначение(""Объект"");\r\n //Работаем с объектом, например,\r\n //вызывая его метод:\r\n ДокОбъект.ОчиститьТаблицуТоваров();\r\n //Если объект изменен, то передаем объект обратно на форму\r\n ЗначениеВРеквизитФормы(ДокОбъект, ""Объект"");\r\n\r\nКонецПроцедуры\r\n\r\n\r\n//модуль объекта документа\r\n\r\nПроцедура ОчиститьТаблицуТоваров() Экспорт \r\n\r\n   ЭтотОбъект.Товары.Очистить();\r\n\r\nКонецПроцедуры"'
1189  15    RBRACE               '}'
1190  0     RBRACE               '}'
1190  1     T__0                 ','
1191  0     LBRACE               '{'
1191  1     T__1                 '0'
1191  2     T__0                 ','
1192  0     LBRACE               '{'
1192  1     STRING               '"Данные_формы_в_значение"'
1192  26    T__0                 ','
1192  27    T__1                 '0'
1192  28    T__0                 ','
1192  29    T__1                 '0'
1192  30    T__0                 ','
1192  31    STRING               '""'
1192  33    T__0                 ','
1192  34    STRING               '"//Модуль формы документа\r\n&НаКлиенте\r\nПроцедура Очистить(Команда)\r\n    ОбъектФормы = Объект;\r\n    ОчиститьТовары(ОбъектФормы);\r\n	КопироватьДанныеФормы(ОбъектФормы, Объект)\r\nКонецПроцедуры\r\n\r\n\r\n&НаСервереБезКонтекста\r\n\r\nПроцедура ОчиститьТовары(ОбъектФормы)\r\n\r\n    //Получаем объект документа\r\n	//ДанныеФормыВЗначение, в отличии от\r\n    //РеквизитФормыВЗначение может работать\r\n    //без контекста\r\n    ДокОбъект = ДанныеФормыВЗначение(ОбъектФормы,\r\n    Тип(""ДокументОбъект.ТестовыйДокумент""));\r\n    //Работаем с объектом, например,\r\n    //вызывая его метод:\r\n    ДокОбъект.ОчиститьТаблицуТоваров();\r\n    //Если объект изменен, то\r\n	//передаем объект обратно на форму\r\n    ЗначениеВДанныеФормы(ДокОбъект, ОбъектФормы);\r\n\r\nКонецПроцедуры\r\n\r\n\r\n//модуль объекта документа\r\n\r\nПроцедура ОчиститьТаблицуТоваров() Экспорт\r\n\r\n    ЭтотОбъект.Товары.Очистить();\r\n\r\nКонецПроцедуры"'
1227  15    RBRACE               '}'
1228  0     RBRACE               '}'
1229  0     RBRACE               '}'
1229  1     T__0                 ','
1230  0     LBRACE               '{'
1230  1     T__2                 '1'
1230  2     T__0                 ','
1231  0     LBRACE               '{'
1231  1     STRING               '"Кнопки"'
1231  9     T__0                 ','
1231  10    T__2                 '1'
1231  11    T__0                 ','
1231  12    T__1                 '0'
1231  13    T__0                 ','
1231  14    STRING               '""'
1231  16    T__0                 ','
1231  17    STRING               '""'
1231  19    RBRACE               '}'
1231  20    T__0                 ','
1232  0     LBRACE               '{'
1232  1     T__1                 '0'
1232  2     T__0                 ','
1233  0     LBRACE               '{'
1233  1     STRING               '"Множесмвенный выбор"'
1233  22    T__0                 ','
1233  23    T__1                 '0'
1233  24    T__0                 ','
1233  25    T__1                 '0'
1233  26    T__0                 ','
1233  27    STRING               '""'
1233  29    T__0                 ','
1233  30    STRING               '"//&НаКлиенте\r\n//Процедура <МножественныйВыборНазвание>(Команда)\r\n	ПараметрыФормы = Новый Структура(""МножественныйВыбор"",Истина);\r\n	ОткрытьФорму(""<Объект.НазваниеОбъекта.Форма.Название>"",ПараметрыФормы,Элементы.<Название>);\r\n//КонецПроцедуры\r\n//&НаКлиенте\r\n//Процедура <НазваниеОбработкаВыбора>(Элемент, ВыбранноеЗначение, СтандартнаяОбработка)\r\n	// обработка заполнения\r\n	Для Каждого ВыбранныйЭлемент из ВыбранноеЗначение Цикл\r\n		НоваяСтрока = Объект.<НазваниеОбъекта>.Добавить();\r\n		НоваяСтрока.<НазваниеРеквезита> = ВыбранныйЭлемент;\r\n	КонецЦикла	\r\n//КонецПроцедуры	\r\n"'
1246  1     RBRACE               '}'
1247  0     RBRACE               '}'
1248  0     RBRACE               '}'
1248  1     T__0                 ','
1249  0     LBRACE               '{'
1249  1     INT                  '2'
1249  2     T__0                 ','
1250  0     LBRACE               '{'
1250  1     STRING               '"Видимость реквезитов/элементов на форме"'
1250  42    T__0                 ','
1250  43    T__2                 '1'
1250  44    T__0                 ','
1250  45    T__1                 '0'
1250  46    T__0                 ','
1250  47    STRING               '""'
1250  49    T__0                 ','
1250  50    STRING               '""'
1250  52    RBRACE               '}'
1250  53    T__0                 ','
1251  0     LBRACE               '{'
1251  1     T__1                 '0'
1251  2     T__0                 ','
1252  0     LBRACE               '{'
1252  1     STRING               '"Видимость элемента"'
1252  21    T__0                 ','
1252  22    T__1                 '0'
1252  23    T__0                 ','
1252  24    T__1                 '0'
1252  25    T__0                 ','
1252  26    STRING               '""'
1252  28    T__0                 ','
1252  29    STRING               '"Элементы.ГруппаСчета.Видимость = Ложь;"'
1252  69    RBRACE               '}'
1253  0     RBRACE               '}'
1253  1     T__0                 ','
1254  0     LBRACE               '{'
1254  1     T__1                 '0'
1254  2     T__0                 ','
1255  0     LBRACE               '{'
1255  1     STRING               '"Аналог F5 Обновить форму"'
1255  27    T__0                 ','
1255  28    T__1                 '0'
1255  29    T__0                 ','
1255  30    T__1                 '0'
1255  31    T__0                 ','
1255  32    STRING               '""'
1255  34    T__0                 ','
1255  35    STRING               '"  //аналог F5\r\n	ЭтаФорма.Элементы.Список.Обновить();"'
1256  38    RBRACE               '}'
1257  0     RBRACE               '}'
1258  0     RBRACE               '}'
1258  1     T__0                 ','
1259  0     LBRACE               '{'
1259  1     INT                  '2'
1259  2     T__0                 ','
1260  0     LBRACE               '{'
1260  1     STRING               '"Оформление формы"'
1260  19    T__0                 ','
1260  20    T__2                 '1'
1260  21    T__0                 ','
1260  22    T__1                 '0'
1260  23    T__0                 ','
1260  24    STRING               '""'
1260  26    T__0                 ','
1260  27    STRING               '""'
1260  29    RBRACE               '}'
1260  30    T__0                 ','
1261  0     LBRACE               '{'
1261  1     T__1                 '0'
1261  2     T__0                 ','
1262  0     LBRACE               '{'
1262  1     STRING               '"Условное оформление в управляемых формах"'
1262  43    T__0                 ','
1262  44    T__1                 '0'
1262  45    T__0                 ','
1262  46    T__1                 '0'
1262  47    T__0                 ','
1262  48    STRING               '""'
1262  50    T__0                 ','
1262  51    STRING               '"&НаСервере\r\nПроцедура РаботаСУсловнымОформлениемУФ()\r\n	// Для Добавления элемента УО в списке нужно обратится к списку и добавить элемент УО\r\n	ЭлементОформления = Список.УсловноеОформление.Элементы.Добавить();\r\n	// Для УО формы добавление происходит через прикладной объект УсловноеОформление:\r\n	ЭлементУсловногоОформления = УсловноеОформление.Элементы.Добавить();\r\n	//Для УО нам нужно задать условие отбора, задать значение свойства УО и добавить оформляемые поля.\r\n	\r\n	// Создаем условие отбора\r\n	ЭлементОтбора = ЭлементОформления.Отбор.Элементы.Добавить(Тип(""ЭлементОтбораКомпоновкиДанных""));\r\n	ЭлементОтбора.ЛевоеЗначение = Новый ПолеКомпоновкиДанных(ИмяПоля); // имя поля\r\n    ЭлементОтбора.ВидСравнения = ВидСравненияКомпоновкиДанных.Равно; // либо задаем свой\r\n	//**** Значение для отбора\r\n	ЭлементОтбора.ПравоеЗначение = ЗначениеДляОтбора;\r\n	// следует заметить что правым значением может выступать ПолеКомпоновкиДанных формы или списка\r\n	ЭлементОтбора.ПравоеЗначение = Новый ПолеКомпоновкиДанных(ИмяПоля);\r\n	//****\r\n	ЭлементОтбора.Использование = Истина;\r\n	\r\n	// Установка значения элемента УО\r\n	// Возможно обращение как по индексу так и установка через метод\r\n	//1.\r\n	Элемент = ЭлементОформления.Оформление.Элементы[0];\r\n	Элемент.Значение = Цвет;\r\n	//2.\r\n	ЭлементОформления.Оформление.УстановитьЗначениеПараметра(""ЦветФона"", WebЦвета.СеребристоСерый);\r\n\r\n	Элемент.Использование = Истина;\r\n	//Добавим поля оформления, если ничего не добавлять, то система применит оформления ко всей строке:\r\n\r\n	// Создаем поля оформления\r\n	ПолеОформления = ЭлементОформления.Поля.Элементы.Добавить();\r\n	ПолеОформления.Поле = Новый ПолеКомпоновкиДанных(ПолеДляОформления);\r\n	ПолеОформления.Использование = Истина;\r\nКонецПроцедуры	"'
1296  16    RBRACE               '}'
1297  0     RBRACE               '}'
1297  1     T__0                 ','
1298  0     LBRACE               '{'
1298  1     T__1                 '0'
1298  2     T__0                 ','
1299  0     LBRACE               '{'
1299  1     STRING               '"Программное добавление элементов условного оформления формы(Пример2)"'
1299  71    T__0                 ','
1299  72    T__1                 '0'
1299  73    T__0                 ','
1299  74    T__1                 '0'
1299  75    T__0                 ','
1299  76    STRING               '""'
1299  78    T__0                 ','
1299  79    STRING               '"&НаСервере\r\nПроцедура УстановитьУсловноеОформление()         \r\n                УсловноеОформление.Элементы.Очистить();\r\n               \r\n                ЭлементОформления = УсловноеОформление.Элементы.Добавить();\r\n\r\n\r\n                ЭлементОформления.Оформление.УстановитьЗначениеПараметра(""ТолькоПросмотр"", Истина);\r\n               \r\n               ГруппаЭлементовОтбора = ЭлементОформления.Отбор.Элементы.Добавить(Тип(""ГруппаЭлементовОтбораКомпоновкиДанных""));\r\n                ГруппаЭлементовОтбора.ТипГруппы = ТипГруппыЭлементовОтбораКомпоновкиДанных.ГруппаИ;\r\n                ГруппаЭлементовОтбора.Использование = Истина;\r\n               \r\n                ЭлементОтбора = ГруппаЭлементовОтбора.Элементы.Добавить(Тип(""ЭлементОтбораКомпоновкиДанных""));\r\n               ЭлементОтбора.ЛевоеЗначение  = Новый ПолеКомпоновкиДанных(""АктивныйСчет"");  \r\n               ЭлементОтбора.ВидСравнения   = ВидСравненияКомпоновкиДанных.Равно;   \r\n               ЭлементОтбора.ПравоеЗначение = Истина;   \r\n               ЭлементОтбора.Использование  = Истина;\r\n               \r\n                ЭлементОтбора = ГруппаЭлементовОтбора.Элементы.Добавить(Тип(""ЭлементОтбораКомпоновкиДанных""));\r\n               ЭлементОтбора.ЛевоеЗначение  = Новый ПолеКомпоновкиДанных(""Объект.грУсловияОплатыТаблица.Редактирование"");  \r\n               ЭлементОтбора.ВидСравнения   = ВидСравненияКомпоновкиДанных.Равно;   \r\n               ЭлементОтбора.ПравоеЗначение = Ложь;      \r\n               ЭлементОтбора.Использование  = Истина;\r\n\r\n\r\n               ПолеОформления = ЭлементОформления.Поля.Элементы.Добавить();       \r\n               ПолеОформления.Поле = Новый ПолеКомпоновкиДанных(""грУсловияОплатыТаблица"");\r\n               ПолеОформления.Использование = Истина;\r\nКонецПроцедуры\r\nИсточник: https://career.i-neti.ru/1s-uf-programmnoe-dobavlenie-elementov-uslovnogo-oformleniya-formy"'
1329  102   RBRACE               '}'
1330  0     RBRACE               '}'
1331  0     RBRACE               '}'
1331  1     T__0                 ','
1332  0     LBRACE               '{'
1332  1     T__2                 '1'
1332  2     T__0                 ','
1333  0     LBRACE               '{'
1333  1     STRING               '"Картинки"'
1333  11    T__0                 ','
1333  12    T__2                 '1'
1333  13    T__0                 ','
1333  14    T__1                 '0'
1333  15    T__0                 ','
1333  16    STRING               '""'
1333  18    T__0                 ','
1333  19    STRING               '""'
1333  21    RBRACE               '}'
1333  22    T__0                 ','
1334  0     LBRACE               '{'
1334  1     T__1                 '0'
1334  2     T__0                 ','
1335  0     LBRACE               '{'
1335  1     STRING               '"Разместить картинку на форме пропорционально"'
1335  47    T__0                 ','
1335  48    T__1                 '0'
1335  49    T__0                 ','
1335  50    T__1                 '0'
1335  51    T__0                 ','
1335  52    STRING               '""'
1335  54    T__0                 ','
1335  55    STRING               '"Элементы.НазваниеРеквезитаКартинки.РазмерКартинки = РазмерКартинки.Пропорционально;"'
1335  140   RBRACE               '}'
1336  0     RBRACE               '}'
1337  0     RBRACE               '}'
1337  1     T__0                 ','
1338  0     LBRACE               '{'
1338  1     T__2                 '1'
1338  2     T__0                 ','
1339  0     LBRACE               '{'
1339  1     STRING               '"Выбор файлов из папок(каталогов) в компьютере"'
1339  48    T__0                 ','
1339  49    T__2                 '1'
1339  50    T__0                 ','
1339  51    T__1                 '0'
1339  52    T__0                 ','
1339  53    STRING               '""'
1339  55    T__0                 ','
1339  56    STRING               '""'
1339  58    RBRACE               '}'
1339  59    T__0                 ','
1340  0     LBRACE               '{'
1340  1     T__1                 '0'
1340  2     T__0                 ','
1341  0     LBRACE               '{'
1341  1     STRING               '" Открытие диалога выбора каталога для загрузки файлов(синхронный режим)"'
1341  74    T__0                 ','
1341  75    T__1                 '0'
1341  76    T__0                 ','
1341  77    T__1                 '0'
1341  78    T__0                 ','
1341  79    STRING               '""'
1341  81    T__0                 ','
1341  82    STRING               '"//прописывается в предопределенных собыниях на форме НачалоВыбора\r\nПроцедура КаталогЗагрузкиНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)\r\n	Фильтр=""Все файлы(*.*)|*.*"";	\r\n	ЗаголовокДиалога =""Выберите путь для отображения файлов"";\r\n	ТекКаталог = КаталогЗагрузки;\r\n	КаталогЗагрузки=ВыборФайловИКаталогов(""Каталог"",Фильтр,ЗаголовокДиалога);\r\n	\r\nКонецПроцедуры\r\n\r\nФункция ВыборФайловИКаталогов(Реж,Фильтр,Заголовок,Каталог=Неопределено) Экспорт\r\n	РеквизитВвода = """";\r\n	Если Реж=""Файл"" Тогда\r\n		Режим = РежимДиалогаВыбораФайла.Открытие;\r\n	Иначе\r\n		Режим = РежимДиалогаВыбораФайла.ВыборКаталога;\r\n	КонецЕсли; \r\n	ДиалогОткрытияФайла = Новый ДиалогВыбораФайла(Режим);\r\n	ДиалогОткрытияФайла.ПолноеИмяФайла = """";\r\n	//Фильтр = НСтр(""ru = 'Все файлы(*.*)'"");\r\n	ДиалогОткрытияФайла.Фильтр = Фильтр;\r\n	ДиалогОткрытияФайла.МножественныйВыбор = Ложь;\r\n	Если Реж=""Файл"" Тогда\r\n		Если Каталог<>Неопределено Тогда	\r\n			ДиалогОткрытияФайла.Каталог=Каталог;	\r\n		КонецЕсли; \r\n	КонецЕсли; \r\n	//ДиалогОткрытияФайла.Заголовок = НСтр(""ru = 'Выберите каталог'"");\r\n	Если ДиалогОткрытияФайла.Выбрать() Тогда\r\n			Если Реж=""Файл"" Тогда\r\n				РеквизитВвода = ДиалогОткрытияФайла.ПолноеИмяФайла;\r\n			Иначе\r\n				РеквизитВвода = ДиалогОткрытияФайла.Каталог;\r\n			КонецЕсли; \r\n	КонецЕсли;\r\n	СтандартнаяОбработка = Ложь;\r\n	Возврат РеквизитВвода;\r\nКонецФункции //ВыборФайловИКаталогов()\r\n"'
1378  1     RBRACE               '}'
1379  0     RBRACE               '}'
1380  0     RBRACE               '}'
1380  1     T__0                 ','
1381  0     LBRACE               '{'
1381  1     INT                  '5'
1381  2     T__0                 ','
1382  0     LBRACE               '{'
1382  1     STRING               '"Программное добавление элементов на управляемую форму"'
1382  56    T__0                 ','
1382  57    T__2                 '1'
1382  58    T__0                 ','
1382  59    T__1                 '0'
1382  60    T__0                 ','
1382  61    STRING               '""'
1382  63    T__0                 ','
1382  64    STRING               '""'
1382  66    RBRACE               '}'
1382  67    T__0                 ','
1383  0     LBRACE               '{'
1383  1     T__1                 '0'
1383  2     T__0                 ','
1384  0     LBRACE               '{'
1384  1     STRING               '"Добавление команды"'
1384  21    T__0                 ','
1384  22    T__1                 '0'
1384  23    T__0                 ','
1384  24    T__1                 '0'
1384  25    T__0                 ','
1384  26    STRING               '""'
1384  28    T__0                 ','
1384  29    STRING               '"&НаСервере\r\nПроцедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)\r\n	\r\n	\r\n	//Добавление команды формы\r\n	Команда = Команды.Добавить(\r\n		""ПоказатьПредупреждение""); //Имя команды\r\n	Команда.Заголовок = ""Показать предупреждение"";\r\n	Команда.Действие  = ""КомандаПоказатьПредупреждение""; //Имя связанной процедуры\r\n	\r\n	//Полный перечень свойств команды в синтакс-помощнике\r\n	//	Интерфейс (управляемый)->Форма клиентского приложения->КомандаФормы\r\n	\r\n	//Добавление кнопки формы\r\n	КнопкаФормы = Элементы.Добавить(\r\n		""КнопкаПоказатьПредупреждение"", //Имя кнопки\r\n		Тип(""КнопкаФормы""),             //Тип, всегда КнопкаФормы\r\n		ЭтаФорма);                      //Контейнер для кнопки (Форма, Группа, Командная панель)\r\n		\r\n	КнопкаФормы.ИмяКоманды = ""ПоказатьПредупреждение""; //Связь с командой по имени\r\n	\r\n	//Возможные варианты вида кнопки:\r\n	//	-Гиперссылка\r\n	//	-ГиперссылкаКоманднойПанели\r\n	//	-КнопкаКоманднойПанели\r\n	//	-ОбычнаяКнопка\r\n	//Если контейнер для формы - командная панель\r\n	//то вид кнопки должен быть КнопкаКоманднойПанели\r\n	КнопкаФормы.Вид = ВидКнопкиФормы.ОбычнаяКнопка; \r\n	\r\n	//Полный перечень свойств кнопки формы в синтакс-помощнике\r\n	//	Интерфейс (управляемый)->Кнопка формы\r\n		\r\nКонецПроцедуры\r\n\r\n//Процедура вызываемая командой ""ПоказатьПредупреждение""\r\n&НаКлиенте\r\nПроцедура КомандаПоказатьПредупреждение(Команда)\r\n	\r\n	ПоказатьПредупреждение(, ""ОК!"");\r\n	\r\nКонецПроцедуры"'
1425  15    RBRACE               '}'
1426  0     RBRACE               '}'
1426  1     T__0                 ','
1427  0     LBRACE               '{'
1427  1     T__1                 '0'
1427  2     T__0                 ','
1428  0     LBRACE               '{'
1428  1     STRING               '"Добавление поля ввода"'
1428  24    T__0                 ','
1428  25    T__1                 '0'
1428  26    T__0                 ','
1428  27    T__1                 '0'
1428  28    T__0                 ','
1428  29    STRING               '""'
1428  31    T__0                 ','
1428  32    STRING               '"//Пример:\r\n//Добавление поля ввода для реквизита объекта ""Комментарий""\r\n&НаСервере\r\nПроцедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)\r\n		\r\n	ПолеВвода = Элементы.Добавить(\r\n		""Комментарий"",    //Имя элемента формы\r\n		Тип(""ПолеФормы""), //Тип, всегда ПолеФормы\r\n		ЭтаФорма);	      //Контейнер для поля ввода (Форма,Группа,Страница)\r\n		\r\n	ПолеВвода.Заголовок = ""Комментарий"";\r\n	ПолеВвода.Вид = ВидПоляФормы.ПолеВвода;\r\n	\r\n	//Установка связи элемента с данными\r\n	ПолеВвода.ПутьКДанным = ""Объект.Комментарий"";\r\n	\r\n	//Можно добавить обработчик события\r\n	//См. синтакс-помощник чтобы узнать список событий\r\n	// Интерфейс (управляемый) -> Поле формы -> ПолеФормы -> События\r\n	// а так же остальные варианты расширения поля формы в зависимости от вида кнопки\r\n	// Интерфейс (управляемый) -> Поле формы -> Расширение поля ввода -> События\r\n	// и прочее\r\n	ПолеВвода.УстановитьДействие(\r\n		""ПриИзменении"", 		    //Имя события\r\n		""ПриИзмененииКомментария""); //Имя процедуры обработчика\r\n		\r\nКонецПроцедуры\r\n\r\n&НаКлиенте\r\nПроцедура ПриИзмененииКомментария(Элемент)\r\n	\r\n	Сообщить(""Поле """"Комментарий"""" изменено!"");\r\n	\r\nКонецПроцедуры"'
1461  15    RBRACE               '}'
1462  0     RBRACE               '}'
1462  1     T__0                 ','
1463  0     LBRACE               '{'
1463  1     T__1                 '0'
1463  2     T__0                 ','
1464  0     LBRACE               '{'
1464  1     STRING               '"Добавление реквезита формы"'
1464  29    T__0                 ','
1464  30    T__1                 '0'
1464  31    T__0                 ','
1464  32    T__1                 '0'
1464  33    T__0                 ','
1464  34    STRING               '""'
1464  36    T__0                 ','
1464  37    STRING               '"&НаСервере\r\nПроцедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)\r\n	\r\n	//Пример:\r\n	//Добавление реквизита с именем ""АдресДоставки"", тип Строка\r\n	\r\n	ДобавляемыеРеквизиты = Новый Массив;\r\n	\r\n	ТипРеквизита = Новый ОписаниеТипов(""Строка"");\r\n	\r\n	РеквизитФормы = Новый РеквизитФормы(\r\n		""АдресДоставки"",  //Имя реквизита формы\r\n		ТипРеквизита,     //Тип\r\n		"""",               //Путь  (Пусто, ""Объект"", ИмяТЧ)\r\n						  // например ""Объект.Товары""	\r\n		""Адрес доставки"");//Заголовок\r\n						  							 \r\n	ДобавляемыеРеквизиты.Добавить(РеквизитФормы);\r\n	\r\n	//Заставляем форму создать новые реквизиты\r\n	ИзменитьРеквизиты(ДобавляемыеРеквизиты);\r\n	\r\n	//Обращение к реквизиту формы из кода\r\n	ЭтаФорма.АдресДоставки = ""ул. Пушкина"";\r\n	\r\n	//Вывод реквизита на форму (при необходимости)\r\n	ПолеВвода = Элементы.Добавить(""ФормаАдресДоставки"", Тип(""ПолеФормы""), ЭтаФорма);\r\n	ПолеВвода.Вид = ВидПоляФормы.ПолеВвода;\r\n	ПолеВвода.ПутьКДанным = ""АдресДоставки"";\r\n	\r\nКонецПроцедуры"'
1494  15    RBRACE               '}'
1495  0     RBRACE               '}'
1495  1     T__0                 ','
1496  0     LBRACE               '{'
1496  1     T__1                 '0'
1496  2     T__0                 ','
1497  0     LBRACE               '{'
1497  1     STRING               '"Добавление группы формы"'
1497  26    T__0                 ','
1497  27    T__1                 '0'
1497  28    T__0                 ','
1497  29    T__1                 '0'
1497  30    T__0                 ','
1497  31    STRING               '""'
1497  33    T__0                 ','
1497  34    STRING               '"&НаСервере\r\nПроцедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)\r\n	\r\n	//Пример:\r\n	//Добавление группы формы\r\n	//Добавление элементов в группу формы\r\n	\r\n	Группа = Элементы.Добавить(\r\n		""ГруппаШапка"",\r\n		Тип(""ГруппаФормы""),\r\n		ЭтаФорма);\r\n		\r\n	Группа.Вид = ВидГруппыФормы.ОбычнаяГруппа;\r\n	\r\n	Группа.Заголовок = ""Реквизиты объекта:"";\r\n	\r\n	//Добавить поле ввода в группу\r\n	ПолеВвода = Элементы.Добавить(""ФормаКомментарий"", Тип(""ПолеФормы""), Группа);\r\n	ПолеВвода.Вид = ВидПоляФормы.ПолеВвода;\r\n	ПолеВвода.ПутьКДанным = ""Объект.Комментарий"";\r\n\r\n	\r\nКонецПроцедуры"'
1519  15    RBRACE               '}'
1520  0     RBRACE               '}'
1520  1     T__0                 ','
1521  0     LBRACE               '{'
1521  1     T__1                 '0'
1521  2     T__0                 ','
1522  0     LBRACE               '{'
1522  1     STRING               '"Добавление страниц формы"'
1522  27    T__0                 ','
1522  28    T__1                 '0'
1522  29    T__0                 ','
1522  30    T__1                 '0'
1522  31    T__0                 ','
1522  32    STRING               '""'
1522  34    T__0                 ','
1522  35    STRING               '"&НаСервере\r\nПроцедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)\r\n	\r\n	//Пример:\r\n	//Добавление группы страниц\r\n	//Добавление страниц\r\n	//Добавление элементов на страницы\r\n	\r\n	СтраницыФормы = Элементы.Добавить(\r\n		""СтраницыФормы"",\r\n		Тип(""ГруппаФормы""),\r\n		ЭтаФорма);\r\n		\r\n	СтраницыФормы.Вид = ВидГруппыФормы.Страницы;\r\n	\r\n	//Подключить обработчик при смене страницы\r\n	СтраницыФормы.УстановитьДействие(""ПриСменеСтраницы"", ""ДействиеПриСменеСтраницы"");\r\n	\r\n	//Добавление 1-й страницы\r\n	СтраницаФормы1 = Элементы.Добавить(\r\n		""Страница1"",\r\n		Тип(""ГруппаФормы""),\r\n		СтраницыФормы);\r\n		\r\n	СтраницаФормы1.Вид = ВидГруппыФормы.Страница;\r\n	СтраницаФормы1.Заголовок = ""Первая страница"";\r\n	\r\n	//Добавление 2-й страницы\r\n	СтраницаФормы2 = Элементы.Добавить(\r\n		""Страница2"",\r\n		Тип(""ГруппаФормы""),\r\n		СтраницыФормы);\r\n		\r\n	СтраницаФормы2.Вид = ВидГруппыФормы.Страница;\r\n	СтраницаФормы2.Заголовок = ""Вторая страница"";\r\n	\r\n	//Добавить поле ввода на страницу 1\r\n	ПолеВвода = Элементы.Добавить(""ФормаКомментарий"", Тип(""ПолеФормы""), СтраницаФормы1);\r\n	ПолеВвода.Вид = ВидПоляФормы.ПолеВвода;\r\n	ПолеВвода.ПутьКДанным = ""Объект.Комментарий"";\r\n	\r\n	//Добавить поле ввода на страницу 2\r\n	ПолеВвода = Элементы.Добавить(""ФормаКомментарий2"", Тип(""ПолеФормы""), СтраницаФормы2);\r\n	ПолеВвода.Вид = ВидПоляФормы.ПолеВвода;\r\n	ПолеВвода.ПутьКДанным = ""Объект.Комментарий"";\r\n	\r\nКонецПроцедуры\r\n\r\n&НаКлиенте\r\nПроцедура ДействиеПриСменеСтраницы(Элемент)\r\n	\r\n	Сообщить(""Изменена страница"");\r\n	\r\nКонецПроцедуры"'
1575  15    RBRACE               '}'
1576  0     RBRACE               '}'
1577  0     RBRACE               '}'
1577  1     T__0                 ','
1578  0     LBRACE               '{'
1578  1     T__2                 '1'
1578  2     T__0                 ','
1579  0     LBRACE               '{'
1579  1     STRING               '"Диалоги"'
1579  10    T__0                 ','
1579  11    T__2                 '1'
1579  12    T__0                 ','
1579  13    T__1                 '0'
1579  14    T__0                 ','
1579  15    STRING               '""'
1579  17    T__0                 ','
1579  18    STRING               '""'
1579  20    RBRACE               '}'
1579  21    T__0                 ','
1580  0     LBRACE               '{'
1580  1     T__1                 '0'
1580  2     T__0                 ','
1581  0     LBRACE               '{'
1581  1     STRING               '"Диалог выбора файла Управляемые формы (УФ)"'
1581  45    T__0                 ','
1581  46    T__1                 '0'
1581  47    T__0                 ','
1581  48    T__1                 '0'
1581  49    T__0                 ','
1581  50    STRING               '""'
1581  52    T__0                 ','
1581  53    STRING               '"//В синтакс – помощнике есть пример использования диалога выбора файлов, но этот пример уже давно устарел, ведь во всех современных конфигурациях давно нельзя использовать модально, вот пример работы с диалогом без модальности.  \r\n &НаКлиенте\r\nПроцедура ЗагрузитьФайл(Команда)\r\n	\r\n	Диалог = Новый ДиалогВыбораФайла(РежимДиалогаВыбораФайла.Открытие);\r\n	Диалог.Заголовок = ""Выберите файл"";\r\n	Диалог.ПолноеИмяФайла = """"; \r\n	Фильтр = ""xlsx (*.xlsx)|*.xlsx""; \r\n	Диалог.Фильтр = Фильтр; \r\n	Диалог.МножественныйВыбор = Ложь;	\r\n	Диалог.Показать(Новый ОписаниеОповещения(""ЗагрузитьФайлЗавершение"", ЭтаФорма, Новый Структура(""Диалог"", Диалог)));		\r\n	\r\nКонецПроцедуры\r\n\r\n&НаКлиенте\r\nПроцедура ЗагрузитьФайлЗавершение(ВыбранныеФайлы, ДополнительныеПараметры) Экспорт\r\n	\r\n	Диалог = ДополнительныеПараметры.Диалог; \r\n	\r\n	Если (ВыбранныеФайлы <> Неопределено) Тогда				\r\n		\r\n		АдресВХ = ПоместитьВоВременноеХранилище(Новый ДвоичныеДанные(Диалог.ПолноеИмяФайла));		\r\n		ОбработатьФайлНаСервере(АдресВХ);\r\n				\r\n	КонецЕсли;\r\n	\r\nКонецПроцедуры\r\n"'
1608  1     RBRACE               '}'
1609  0     RBRACE               '}'
1610  0     RBRACE               '}'
1610  1     T__0                 ','
1611  0     LBRACE               '{'
1611  1     INT                  '2'
1611  2     T__0                 ','
1612  0     LBRACE               '{'
1612  1     STRING               '"Передача данных между формами"'
1612  32    T__0                 ','
1612  33    T__2                 '1'
1612  34    T__0                 ','
1612  35    T__1                 '0'
1612  36    T__0                 ','
1612  37    STRING               '""'
1612  39    T__0                 ','
1612  40    STRING               '""'
1612  42    RBRACE               '}'
1612  43    T__0                 ','
1613  0     LBRACE               '{'
1613  1     T__1                 '0'
1613  2     T__0                 ','
1614  0     LBRACE               '{'
1614  1     STRING               '"Передать параметры уже открытой форме"'
1614  40    T__0                 ','
1614  41    T__1                 '0'
1614  42    T__0                 ','
1614  43    T__1                 '0'
1614  44    T__0                 ','
1614  45    STRING               '""'
1614  47    T__0                 ','
1614  48    STRING               '"//На открытой форме из которой нужно передать параметры ари закрытии формы (Произвольная форма)\r\n&НаКлиенте\r\nПроцедура ПриЗакрытии(ЗавершениеРаботы)\r\n	//Передать параметры уже открытой форме\r\n	ОткрытьФорму(""РегистрСведений.ВыбранныеВопросы.ФормаСписка"");\r\n	СтруктураВозврата = Новый Структура();\r\n	СтруктураВозврата.Вставить(""Глава"", Глава);\r\n	СтруктураВозврата.Вставить(""Счетчик"", Счетчик);\r\n	\r\n	Оповестить(""ДобавлениеСчетчика"",СтруктураВозврата,ЭтаФорма);\r\nКонецПроцедуры\r\n\r\n// На форме куда передать параметры на открытую форму ОбработкаОповещения() - это предопределенное событие  \r\n\r\n&НаКлиенте\r\nПроцедура ОбработкаОповещения(ИмяСобытия, Параметр, Источник)\r\n	   УвеличитьСчетчик(Параметр.Глава,Параметр.Счетчик)\r\nКонецПроцедуры\r\n\r\n\r\n"'
1634  1     RBRACE               '}'
1635  0     RBRACE               '}'
1635  1     T__0                 ','
1636  0     LBRACE               '{'
1636  1     T__1                 '0'
1636  2     T__0                 ','
1637  0     LBRACE               '{'
1637  1     STRING               '"Передать параметры форме при открытии"'
1637  40    T__0                 ','
1637  41    T__1                 '0'
1637  42    T__0                 ','
1637  43    T__1                 '0'
1637  44    T__0                 ','
1637  45    STRING               '""'
1637  47    T__0                 ','
1637  48    STRING               '"  // на форме от куда передаем\r\n  &НаКлиенте\r\n  Процедура Кнопка1(Кнопка)\r\n      //Передать параметры в форму\r\n	  ПараметрыФормы = Новый Структура(""Параметр1,Параметр2"", Истина,""Привет"");\r\n  КонецПроцедуры\r\n  \r\n  //На форме куда передать параметры\r\n  &НаСервере\r\n  Процедура ПриСозданииНаСервере(Отказ,СтандартнаяОбработка)\r\n      Сообщить(Параметры.Параметр1);\r\n	  Сообщить(Параметры.Параметр2);\r\n  КонецПроцедуры\r\n  "'
1650  3     RBRACE               '}'
1651  0     RBRACE               '}'
1652  0     RBRACE               '}'
1652  1     T__0                 ','
1653  0     LBRACE               '{'
1653  1     INT                  '6'
1653  2     T__0                 ','
1654  0     LBRACE               '{'
1654  1     STRING               '"Открывать форму выбора (подбора) в управляемых формах"'
1654  56    T__0                 ','
1654  57    T__2                 '1'
1654  58    T__0                 ','
1654  59    T__1                 '0'
1654  60    T__0                 ','
1654  61    STRING               '""'
1654  63    T__0                 ','
1654  64    STRING               '""'
1654  66    RBRACE               '}'
1654  67    T__0                 ','
1655  0     LBRACE               '{'
1655  1     T__1                 '0'
1655  2     T__0                 ','
1656  0     LBRACE               '{'
1656  1     STRING               '"Вызов формы выбора с одним возвращаемым результатом"'
1656  54    T__0                 ','
1656  55    T__1                 '0'
1656  56    T__0                 ','
1656  57    T__1                 '0'
1656  58    T__0                 ','
1656  59    STRING               '""'
1656  61    T__0                 ','
1656  62    STRING               '"   &НаКлиенте\r\nПроцедура КомандаОткрытьФормуВыбора(Команда)\r\n \r\n	ПараметрыФормы = Новый Структура(""РежимВыбора"",Истина);\r\n\r\n	ОткрытьФорму(""Документ.РеализацияТоваровУслуг.ФормаВыбора"",ПараметрыФормы,ЭтаФорма);\r\n\r\nКонецПроцедуры\r\n\r\n&НаКлиенте\r\nПроцедура ОбработкаВыбора(ВыбранноеЗначение, ИсточникВыбора) ///Событие формы\r\n	\r\n     РезультатСсылка =  ВыбранноеЗначение; ///Выбранное значение, вернет ссылку (документа в нашем примере)\r\n\r\nКонецПроцедуры"'
1670  15    RBRACE               '}'
1671  0     RBRACE               '}'
1671  1     T__0                 ','
1672  0     LBRACE               '{'
1672  1     T__1                 '0'
1672  2     T__0                 ','
1673  0     LBRACE               '{'
1673  1     STRING               '"Выбор нескольких значений (документов или справочников) "'
1673  59    T__0                 ','
1673  60    T__1                 '0'
1673  61    T__0                 ','
1673  62    T__1                 '0'
1673  63    T__0                 ','
1673  64    STRING               '""'
1673  66    T__0                 ','
1673  67    STRING               '"&НаКлиенте\r\nПроцедура КомандаОткрытьФормуВыбора(Команда)\r\n \r\n	ПараметрыФормы = Новый Структура;\r\n	ПараметрыФормы.Вставить(""РежимВыбора"",Истина);\r\n	ПараметрыФормы.Вставить(""МножественныйВыбор"",Истина);\r\n	ПараметрыФормы.Вставить(""ЗакрыватьПриВыборе"",ложь);\r\n\r\n	ОткрытьФорму(""Документ.РеализацияТоваровУслуг.ФормаВыбора"",ПараметрыФормы,ЭтаФорма);\r\n\r\nКонецПроцедуры\r\n\r\n\r\n&НаКлиенте\r\nПроцедура ОбработкаВыбора(ВыбранноеЗначение, ИсточникВыбора)\r\n	МассивСсылок =  ВыбранноеЗначение; ///Вернётся массив с выбранными значениями (Даже если значение только одно )\r\nКонецПроцедуры"'
1689  15    RBRACE               '}'
1690  0     RBRACE               '}'
1690  1     T__0                 ','
1691  0     LBRACE               '{'
1691  1     T__1                 '0'
1691  2     T__0                 ','
1692  0     LBRACE               '{'
1692  1     STRING               '"Выбор нескольких значений (документов или справочников) с использованием ""Обработки оповещения"" "'
1692  101   T__0                 ','
1692  102   T__1                 '0'
1692  103   T__0                 ','
1692  104   T__1                 '0'
1692  105   T__0                 ','
1692  106   STRING               '""'
1692  108   T__0                 ','
1692  109   STRING               '"&НаКлиенте\r\nПроцедура КомандаОткрытьФормуВыбора(Команда)\r\n \r\n	ПараметрыФормы = Новый Структура;\r\n	ПараметрыФормы.Вставить(""РежимВыбора"",Истина);\r\n	ПараметрыФормы.Вставить(""МножественныйВыбор"",Истина); ///Если хотим несколько значений\r\n\r\n	ОбработкаВыбора = Новый ОписаниеОповещения(""ПриЗакрытииФормыВыбора"", ЭтаФорма,""ПодборРеализации"");\r\n\r\n	ОткрытьФорму(""Документ.РеализацияТоваровУслуг.ФормаВыбора"",ПараметрыФормы,\r\n	        ЭтаФорма, , , , ОбработкаВыбора);\r\n\r\nКонецПроцедуры\r\n\r\n&НаКлиенте\r\nПроцедура ПриЗакрытииФормыВыбора(Значение, ДопПараметры) Экспорт\r\n\r\n   //Дополнительные условия если необходимо\r\n   //Если ДопПараметры = ""ПодборРеализации"" тогда\r\n\r\n    Если Значение = Неопределено Тогда  ///Если ничего не выбрать - вернется пустое значение (Неопределено)\r\n        Возврат;\r\n    КонецЕсли;\r\n     \r\n    МассивДокументов = Значение ///Если Множественный Выбор - то вернется массив \r\n    \r\n\r\n    //КонецЕсли;\r\nКонецПроцедуры"'
1720  15    RBRACE               '}'
1721  0     RBRACE               '}'
1721  1     T__0                 ','
1722  0     LBRACE               '{'
1722  1     T__1                 '0'
1722  2     T__0                 ','
1723  0     LBRACE               '{'
1723  1     STRING               '"Выбор нескольких значений (документов или справочников) с условием"'
1723  69    T__0                 ','
1723  70    T__1                 '0'
1723  71    T__0                 ','
1723  72    T__1                 '0'
1723  73    T__0                 ','
1723  74    STRING               '""'
1723  76    T__0                 ','
1723  77    STRING               '"//Допустим мы хотим выбрать из списка документы только с товаром, для этого установим отбор по ""Виду операции"".\r\n//Вид операции - это поле(реквизит) динамического списка, и отбор можно установить по всем доступным полям. \r\n&НаКлиенте\r\nПроцедура КомандаОткрытьФормуВыбора(Команда)\r\n\r\n    ///Создаем структуру с отбором и добавляем значения\r\n	ПараметрыОтбора = Новый Структура;\r\n	ПараметрыОтбора.Вставить(""ВидОперации"", ПредопределенноеЗначение(""Перечисление.ВидыОперацийРеализацияТоваров.Товары""));\r\n	//ПараметрыОтбора.Вставить(""Дата"", ТекущаяДата());   ///Дополнительный отбор\r\n \r\n	ПараметрыФормы = Новый Структура;\r\n	ПараметрыФормы.Вставить(""Отбор"", ПараметрыОтбора); ///Добавляем отбор в параметры формы\r\n\r\n	ПараметрыФормы.Вставить(""РежимВыбора"",Истина);\r\n	ПараметрыФормы.Вставить(""МножественныйВыбор"",Истина);\r\n\r\n	ОбработкаВыбора = Новый ОписаниеОповещения(""ПриЗакрытииФормыВыбора"", ЭтаФорма,""Подбор"");\r\n\r\n	ОткрытьФорму(""Документ.РеализацияТоваровУслуг.ФормаВыбора"",ПараметрыФормы,\r\n	        ЭтаФорма, , , , ОбработкаВыбора);\r\n\r\nКонецПроцедуры\r\n\r\n&НаКлиенте\r\nПроцедура ПриЗакрытииФормыВыбора(Значение, ДопПараметры) Экспорт\r\n    Если Значение = Неопределено Тогда\r\n        Возврат;\r\n    КонецЕсли;\r\n     \r\n    МассивДокументов = Значение; \r\n	\r\nКонецПроцедуры\r\n"'
1755  1     RBRACE               '}'
1756  0     RBRACE               '}'
1756  1     T__0                 ','
1757  0     LBRACE               '{'
1757  1     T__1                 '0'
1757  2     T__0                 ','
1758  0     LBRACE               '{'
1758  1     STRING               '"Выбор нескольких значений (документов или справочников) открыть форму выбора со списком за определенный период"'
1758  113   T__0                 ','
1758  114   T__1                 '0'
1758  115   T__0                 ','
1758  116   T__1                 '0'
1758  117   T__0                 ','
1758  118   STRING               '""'
1758  120   T__0                 ','
1758  121   STRING               '"&НаКлиенте\r\nПроцедура КомандаОткрытьФормуВыбора(Команда)\r\n	НастройкиКомпоновки = Новый НастройкиКомпоновкиДанных;\r\n\r\n    ///Если хотим несколько условий\r\n    ГруппаОтбора = НастройкиКомпоновки.Отбор.Элементы.Добавить(Тип(""ГруппаЭлементовОтбораКомпоновкиДанных""));\r\n    ГруппаОтбора.ТипГруппы = ТипГруппыЭлементовОтбораКомпоновкиДанных.ГруппаИ;\r\n	\r\n	ЭлементОтбора = ГруппаОтбора.Элементы.Добавить(Тип(""ЭлементОтбораКомпоновкиДанных"")); \r\n	ЭлементОтбора.ЛевоеЗначение  = Новый ПолеКомпоновкиДанных(""ВидОперации"");\r\n	ЭлементОтбора.ВидСравнения   = ВидСравненияКомпоновкиДанных.Равно;\r\n	ЭлементОтбора.Использование  = Истина;\r\n	ЭлементОтбора.ПравоеЗначение = ПредопределенноеЗначение(""Перечисление.ВидыОперацийРеализацияТоваров.Товары"");\r\n\r\n	ЭлементОтбора = ГруппаОтбора.Элементы.Добавить(Тип(""ЭлементОтбораКомпоновкиДанных"")); \r\n	ЭлементОтбора.ЛевоеЗначение  = Новый ПолеКомпоновкиДанных(""Дата"");\r\n	ЭлементОтбора.ВидСравнения   = ВидСравненияКомпоновкиДанных.больше;\r\n	ЭлементОтбора.Использование  = Истина;\r\n	ЭлементОтбора.ПравоеЗначение = НачалоГода(ТекущаяДата());\r\n\r\n	ПараметрыФормы = Новый Структура;\r\n	ПараметрыФормы.Вставить(""ФиксированныеНастройки"", НастройкиКомпоновки);\r\n	ПараметрыФормы.Вставить(""РежимВыбора"",Истина);\r\n	ПараметрыФормы.Вставить(""МножественныйВыбор"",Истина);\r\n\r\n	ОбработкаВыбора = Новый ОписаниеОповещения(""ПриЗакрытииФормыВыбора"", ЭтаФорма,""Подбор"");\r\n\r\n	ОткрытьФорму(""Документ.РеализацияТоваровУслуг.ФормаВыбора"",ПараметрыФормы,\r\n	        ЭтаФорма, , , , ОбработкаВыбора);\r\n\r\nКонецПроцедуры\r\n\r\n\r\n&НаКлиенте\r\nПроцедура ПриЗакрытииФормыВыбора(Значение, ДопПараметры) Экспорт\r\n    Если Значение = Неопределено Тогда\r\n        Возврат;\r\n    КонецЕсли;\r\n     \r\n    МассивДокументов = Значение \r\n	\r\nКонецПроцедуры"'
1799  15    RBRACE               '}'
1800  0     RBRACE               '}'
1800  1     T__0                 ','
1801  0     LBRACE               '{'
1801  1     T__1                 '0'
1801  2     T__0                 ','
1802  0     LBRACE               '{'
1802  1     STRING               '"открыть форму выбора с Позиционированием ранее выбранного значения"'
1802  69    T__0                 ','
1802  70    T__1                 '0'
1802  71    T__0                 ','
1802  72    T__1                 '0'
1802  73    T__0                 ','
1802  74    STRING               '""'
1802  76    T__0                 ','
1802  77    STRING               '"&НаКлиенте\r\nПроцедура КомандаОткрытьФормуВыбора(Команда)\r\n\r\n	ПараметрыФормы = Новый Структура;\r\n	ПараметрыФормы.Вставить(""РежимВыбора"",Истина);\r\n	ПараметрыФормы.Вставить(""МножественныйВыбор"",Ложь);\r\n	ПараметрыФормы.Вставить(""ЗакрыватьПриВыборе"",ложь);\r\n	\r\n	Если РанееВыбранныйДокумент <> Неопределено Тогда    ///Реквизит формы, ранее выбранное значение из открываемой формы	\r\n		//ПараметрыФормы.Вставить(""УстановитьПараметрыФункциональныхОпцийФормы"",Новый Структура(""ТекущаяСтрока"",РанееВыбранныйДокумент));  /// Можно и так\r\n	    ПараметрыВыбора.Вставить(""ТекущаяСтрока"", РанееВыбранныйДокумент); /// Подсказка от подписчика: user1502278 \r\n    КонецЕсли;\r\n	\r\n	ОбработкаВыбора = Новый ОписаниеОповещения(""ПриЗакрытииФормыВыбора"", ЭтотОбъект,""Подбор"");\r\n\r\n	ОткрытьФорму(""Документ.РеализацияТоваровУслуг.ФормаВыбора"",ПараметрыФормы,\r\n	        ЭтаФорма, , , , ОбработкаВыбора);\r\n\r\nКонецПроцедуры\r\n\r\n&НаКлиенте\r\nПроцедура ПриЗакрытииФормыВыбора(Значение, ДопПараметры) экспорт\r\n    Если Значение = Неопределено Тогда\r\n        Возврат;\r\n    КонецЕсли;\r\n     \r\n    МассивДокументов = Значение \r\n	\r\nКонецПроцедуры"'
1830  15    RBRACE               '}'
1831  0     RBRACE               '}'
1832  0     RBRACE               '}'
1833  0     RBRACE               '}'
1833  1     T__0                 ','
1834  0     LBRACE               '{'
1834  1     INT                  '6'
1834  2     T__0                 ','
1835  0     LBRACE               '{'
1835  1     STRING               '"Массивы и колекции"'
1835  21    T__0                 ','
1835  22    T__2                 '1'
1835  23    T__0                 ','
1835  24    T__1                 '0'
1835  25    T__0                 ','
1835  26    STRING               '""'
1835  28    T__0                 ','
1835  29    STRING               '""'
1835  31    RBRACE               '}'
1835  32    T__0                 ','
1836  0     LBRACE               '{'
1836  1     INT                  '15'
1836  3     T__0                 ','
1837  0     LBRACE               '{'
1837  1     STRING               '"Массивы"'
1837  10    T__0                 ','
1837  11    T__2                 '1'
1837  12    T__0                 ','
1837  13    T__1                 '0'
1837  14    T__0                 ','
1837  15    STRING               '""'
1837  17    T__0                 ','
1837  18    STRING               '""'
1837  20    RBRACE               '}'
1837  21    T__0                 ','
1838  0     LBRACE               '{'
1838  1     T__1                 '0'
1838  2     T__0                 ','
1839  0     LBRACE               '{'
1839  1     STRING               '"Получение уникальных значений"'
1839  32    T__0                 ','
1839  33    T__1                 '0'
1839  34    T__0                 ','
1839  35    T__1                 '0'
1839  36    T__0                 ','
1839  37    STRING               '""'
1839  39    T__0                 ','
1839  40    STRING               '"Числа1 = Новый Массив;\r\nЧисла1.Добавить(1);\r\nЧисла1.Добавить(3);\r\nЧисла1.Добавить(2);\r\nЧисла1.Добавить(1);\r\nЧисла1.Добавить(3);\r\n\r\n//Числа1 = [1, 3, 2, 1, 3]\r\nЧисла2 = Новый Массив;\r\n//первый вариант\r\nСоответствие = Новый Соответствие;\r\nДля каждого Число Из Числа1 Цикл\r\n    Соответствие.Вставить(Число);\r\nКонецЦикла;\r\nДля каждого Элемент Из Соответствие Цикл\r\n    Числа2.Добавить(Элемент.Ключ);\r\nКонецЦикла;\r\n//Числа2 = [1, 2, 3]\r\nЧисла2.Очистить();\r\n\r\n//второй вариант\r\nДля Каждого Число из Числа1 Цикл\r\n    Если (Числа2.Найти(Число) = Неопределено) Тогда\r\n        Числа2.Добавить(Число);\r\n    КонецЕсли;\r\nКонецЦикла;\r\n//Числа2 = [1, 3, 2]\r\n"'
1866  1     RBRACE               '}'
1867  0     RBRACE               '}'
1867  1     T__0                 ','
1868  0     LBRACE               '{'
1868  1     T__1                 '0'
1868  2     T__0                 ','
1869  0     LBRACE               '{'
1869  1     STRING               '"Объединение массива"'
1869  22    T__0                 ','
1869  23    T__1                 '0'
1869  24    T__0                 ','
1869  25    T__1                 '0'
1869  26    T__0                 ','
1869  27    STRING               '""'
1869  29    T__0                 ','
1869  30    STRING               '"Числа1 = Новый Массив(3);\r\nЧисла1[0] = 2;\r\nЧисла1[1] = 3;\r\nЧисла1[2] = 5;\r\n\r\nЧисла2 = Новый Массив(3);\r\nЧисла2[0] = 7;\r\nЧисла2[1] = 11;\r\nЧисла2[2] = 13;\r\n\r\n//вариант первый\r\nВсеЧисла = Новый Массив;\r\nДля Каждого Число Из Числа1 Цикл\r\n    ВсеЧисла.Добавить(Число);\r\nКонецЦикла;\r\n\r\nДля Каждого Число Из Числа2 Цикл\r\n    ВсеЧисла.Добавить(Число);\r\nКонецЦикла;\r\n//ВсеЧисла = [2, 3, 5, 7, 11, 13]\r\n\r\n//вариант второй\r\n\r\nСписок = Новый СписокЗначений;\r\nСписок.ЗагрузитьЗначения(Числа1);\r\nДля Каждого Число Из Числа2 Цикл\r\n    Список.Добавить(Число);\r\nКонецЦикла;\r\nВсеЧисла = Список.ВыгрузитьЗначения();\r\n//ВсеЧисла = [2, 3, 5, 7, 11, 13]"'
1898  34    RBRACE               '}'
1899  0     RBRACE               '}'
1899  1     T__0                 ','
1900  0     LBRACE               '{'
1900  1     T__1                 '0'
1900  2     T__0                 ','
1901  0     LBRACE               '{'
1901  1     STRING               '"Обход массива"'
1901  16    T__0                 ','
1901  17    T__1                 '0'
1901  18    T__0                 ','
1901  19    T__1                 '0'
1901  20    T__0                 ','
1901  21    STRING               '""'
1901  23    T__0                 ','
1901  24    STRING               '"Числа = Новый Массив(3);\r\nЧисла[0] = 2;\r\nЧисла[1] = 3;\r\nЧисла[2] = 5;\r\nСтр = """";\r\nДля Каждого Число из Числа Цикл\r\n    Стр = Стр + ?(Стр = """", """", ""; "") + Число;\r\nКонецЦикла;\r\n//Стр = ""2; 3; 5"""'
1909  20    RBRACE               '}'
1910  0     RBRACE               '}'
1910  1     T__0                 ','
1911  0     LBRACE               '{'
1911  1     T__1                 '0'
1911  2     T__0                 ','
1912  0     LBRACE               '{'
1912  1     STRING               '"Обход массивов по индексам"'
1912  29    T__0                 ','
1912  30    T__1                 '0'
1912  31    T__0                 ','
1912  32    T__1                 '0'
1912  33    T__0                 ','
1912  34    STRING               '""'
1912  36    T__0                 ','
1912  37    STRING               '"Числа = Новый Массив(3);\r\nЧисла[0] = 2;\r\nЧисла[1] = 3;\r\nЧисла[2] = 5;\r\nСтр = """";\r\nДля Н = 0 По Числа.Количество() - 1 Цикл\r\n    Стр = Стр + ?(Стр = """", """", ""; "") + Числа[Н];\r\nКонецЦикла;\r\n//Стр = ""2; 3; 5"""'
1920  20    RBRACE               '}'
1921  0     RBRACE               '}'
1921  1     T__0                 ','
1922  0     LBRACE               '{'
1922  1     T__1                 '0'
1922  2     T__0                 ','
1923  0     LBRACE               '{'
1923  1     STRING               '"Динамические массивы"'
1923  23    T__0                 ','
1923  24    T__1                 '0'
1923  25    T__0                 ','
1923  26    T__1                 '0'
1923  27    T__0                 ','
1923  28    STRING               '""'
1923  30    T__0                 ','
1923  31    STRING               '"Количество = 15;\r\nЧисла = Новый Массив(Количество);\r\nЧисла[0] = 1;"'
1925  14    RBRACE               '}'
1926  0     RBRACE               '}'
1926  1     T__0                 ','
1927  0     LBRACE               '{'
1927  1     T__1                 '0'
1927  2     T__0                 ','
1928  0     LBRACE               '{'
1928  1     STRING               '"Добавление и удаление элементов"'
1928  34    T__0                 ','
1928  35    T__1                 '0'
1928  36    T__0                 ','
1928  37    T__1                 '0'
1928  38    T__0                 ','
1928  39    STRING               '""'
1928  41    T__0                 ','
1928  42    STRING               '"Числа = Новый Массив(3);\r\nЧисла[0] = 2;\r\nЧисла[1] = 5;\r\nЧисла[2] = 7;\r\nЧисла.Добавить(11);\r\n//Числа = [2, 5, 7, 11]\r\nЧисла.Вставить(1, 3);\r\n//Числа = [2, 3, 5, 7, 11]\r\nЧисла.Удалить(2);\r\n//Числа = [2, 3, 7, 11]\r\nЧисла.Очистить();\r\n//Числа =  [] "'
1939  15    RBRACE               '}'
1940  0     RBRACE               '}'
1940  1     T__0                 ','
1941  0     LBRACE               '{'
1941  1     T__1                 '0'
1941  2     T__0                 ','
1942  0     LBRACE               '{'
1942  1     STRING               '"Индексация массивов"'
1942  22    T__0                 ','
1942  23    T__1                 '0'
1942  24    T__0                 ','
1942  25    T__1                 '0'
1942  26    T__0                 ','
1942  27    STRING               '""'
1942  29    T__0                 ','
1942  30    STRING               '"//пустой массив\r\n\r\nМассив1 = Новый Массив;\r\n\r\n//одномерный массив\r\n\r\nМассив2 = Новый Массив(3);\r\nМассив2[0] = 2;\r\nМассив2[1] = 3;\r\nМассив2[2] = 1;\r\n\r\n//двумерный массив\r\nМассив3 = Новый Массив(2);\r\nМассив3[0] = Новый Массив(2);\r\nМассив3[1] = Новый Массив(2);\r\nМассив3[0][1] = 5;\r\n"'
1958  1     RBRACE               '}'
1959  0     RBRACE               '}'
1959  1     T__0                 ','
1960  0     LBRACE               '{'
1960  1     T__1                 '0'
1960  2     T__0                 ','
1961  0     LBRACE               '{'
1961  1     STRING               '"Копирование массива"'
1961  22    T__0                 ','
1961  23    T__1                 '0'
1961  24    T__0                 ','
1961  25    T__1                 '0'
1961  26    T__0                 ','
1961  27    STRING               '""'
1961  29    T__0                 ','
1961  30    STRING               '"Числа1 = Новый Массив(3);\r\nЧисла1[0] = 1;\r\nЧисла1[1] = 2;\r\nЧисла1[2] = 3;\r\n\r\n//первый вариант\r\nЧисла2 = Новый Массив(\r\nНовый ФиксированныйМассив(Числа1));\r\n\r\n//второй вариант\r\n\r\nСписок = Новый СписокЗначений;\r\nСписок.ЗагрузитьЗначения(Числа1);\r\nЧисла3 = Список.ВыгрузитьЗначения();"'
1974  37    RBRACE               '}'
1975  0     RBRACE               '}'
1975  1     T__0                 ','
1976  0     LBRACE               '{'
1976  1     T__1                 '0'
1976  2     T__0                 ','
1977  0     LBRACE               '{'
1977  1     STRING               '"Массив с заданным значением"'
1977  30    T__0                 ','
1977  31    T__1                 '0'
1977  32    T__0                 ','
1977  33    T__1                 '0'
1977  34    T__0                 ','
1977  35    STRING               '""'
1977  37    T__0                 ','
1977  38    STRING               '"Количество = 3;\r\nЗначение = 5;\r\nЧисла = Новый Массив(Количество);\r\nДля н = 0 По Количество - 1 Цикл\r\n    Числа[н] = Значение;\r\nКонецЦикла;\r\n//Числа = [5, 5, 5]"'
1983  20    RBRACE               '}'
1984  0     RBRACE               '}'
1984  1     T__0                 ','
1985  0     LBRACE               '{'
1985  1     T__1                 '0'
1985  2     T__0                 ','
1986  0     LBRACE               '{'
1986  1     STRING               '"Фильтрация элементов"'
1986  23    T__0                 ','
1986  24    T__1                 '0'
1986  25    T__0                 ','
1986  26    T__1                 '0'
1986  27    T__0                 ','
1986  28    STRING               '""'
1986  30    T__0                 ','
1986  31    STRING               '"Числа = Новый Массив;\r\nЧисла.Добавить(1);\r\nЧисла.Добавить(2);\r\nЧисла.Добавить(3);\r\nЧисла.Добавить(4);\r\n//в 1С отсутствует функция фильтрации массива\r\n//поэтому использует обычный перебор значений\r\nЧетные = Новый Массив;\r\nДля Каждого Число Из Числа Цикл\r\n    Если (Число % 2 = 0) Тогда\r\n        Четные.Добавить(Число);\r\n    КонецЕсли;\r\nКонецЦикла;\r\n   "'
1999  4     RBRACE               '}'
2000  0     RBRACE               '}'
2000  1     T__0                 ','
2001  0     LBRACE               '{'
2001  1     T__1                 '0'
2001  2     T__0                 ','
2002  0     LBRACE               '{'
2002  1     STRING               '"Сортировка элементов"'
2002  23    T__0                 ','
2002  24    T__1                 '0'
2002  25    T__0                 ','
2002  26    T__1                 '0'
2002  27    T__0                 ','
2002  28    STRING               '""'
2002  30    T__0                 ','
2002  31    STRING               '"Числа = Новый Массив(3);\r\nЧисла[0] = 2;\r\nЧисла[1] = 3;\r\nЧисла[2] = 1;\r\n\r\nСписок = Новый СписокЗначений;\r\nСписок.ЗагрузитьЗначения(Числа);\r\n\r\nСписок.СортироватьПоЗначению(НаправлениеСортировки.Возр) ;\r\n\r\nЧисла = Список.ВыгрузитьЗначения();\r\n\r\n//Числа = [1, 2, 3]\r\n\r\nСписок.СортироватьПоЗначению(НаправлениеСортировки.Убыв) ;\r\nЧисла = Список.ВыгрузитьЗначения();\r\n\r\n//Числа = [3, 2, 1]\r\n"'
2020  1     RBRACE               '}'
2021  0     RBRACE               '}'
2021  1     T__0                 ','
2022  0     LBRACE               '{'
2022  1     T__1                 '0'
2022  2     T__0                 ','
2023  0     LBRACE               '{'
2023  1     STRING               '"Преобразование массива"'
2023  25    T__0                 ','
2023  26    T__1                 '0'
2023  27    T__0                 ','
2023  28    T__1                 '0'
2023  29    T__0                 ','
2023  30    STRING               '""'
2023  32    T__0                 ','
2023  33    STRING               '"Числа = Новый Массив(3);\r\nЧисла[0] = 2;\r\nЧисла[1] = 3;\r\nЧисла[2] = 5;\r\n\r\nДля Н = 0 По Числа.Количество() - 1 Цикл\r\n    Числа[Н] = Числа[Н] * 3;\r\nКонецЦикла;\r\n//Числа = [6, 9, 15]"'
2031  21    RBRACE               '}'
2032  0     RBRACE               '}'
2032  1     T__0                 ','
2033  0     LBRACE               '{'
2033  1     T__1                 '0'
2033  2     T__0                 ','
2034  0     LBRACE               '{'
2034  1     STRING               '"Проверка наличия элемента"'
2034  28    T__0                 ','
2034  29    T__1                 '0'
2034  30    T__0                 ','
2034  31    T__1                 '0'
2034  32    T__0                 ','
2034  33    STRING               '""'
2034  35    T__0                 ','
2034  36    STRING               '"Числа = Новый Массив(3);\r\nЧисла[0] = 2;\r\nЧисла[1] = 3;\r\nЧисла[2] = 5;\r\n\r\nСодержит3 = Числа.Найти(3) <> Неопределено;\r\n//Содержит3 = Истина\r\nИндекс3 = Числа.Найти(3);\r\n//Индекс3 = 1\r\nСодержит4 = Числа.Найти(4) <> Неопределено;\r\n\r\n//Содержит4 = Ложь\r\n\r\n"'
2047  1     RBRACE               '}'
2048  0     RBRACE               '}'
2048  1     T__0                 ','
2049  0     LBRACE               '{'
2049  1     T__1                 '0'
2049  2     T__0                 ','
2050  0     LBRACE               '{'
2050  1     STRING               '"Проверка равенства массивов"'
2050  30    T__0                 ','
2050  31    T__1                 '0'
2050  32    T__0                 ','
2050  33    T__1                 '0'
2050  34    T__0                 ','
2050  35    STRING               '""'
2050  37    T__0                 ','
2050  38    STRING               '"Числа1 = Новый Массив(3);\r\nЧисла1[0] = 1;\r\nЧисла1[1] = 2;\r\nЧисла1[2] = 3;\r\n\r\nЧисла2 = Новый Массив(3);\r\nЧисла2[0] = 1;\r\nЧисла2[1] = 2;\r\nЧисла2[2] = 3;\r\n\r\n//первый вариант\r\n\r\nМассивыРавны = СравнитьМассивы1(Числа1, Числа2);\r\n\r\n//МассивыРавны = Да\r\n\r\n//второй вариант\r\n\r\nМассивыРавны = СравнитьМассивы2(Числа1, Числа2);\r\n\r\n//МассивыРавны = Да\r\n\r\n\r\nФункция СравнитьМассивы1(Массив1, Массив2)\r\n    Если Массив1.Количество() <> Массив2.Количество() Тогда\r\n        Возврат Ложь;\r\n    КонецЕсли;\r\n    Для н = 0 По Массив1.Количество() - 1 Цикл\r\n        Если (Массив1.Получить(н) <> Массив2.Получить(н)) Тогда\r\n            Возврат Ложь;\r\n        КонецЕсли;\r\n    КонецЦикла;\r\n\r\n    Возврат Истина;\r\n\r\nКонецФункции\r\n\r\n&НаСервере\r\nФункция СравнитьМассивы2(Массив1, Массив2)\r\n    Возврат ЗначениеВСтрокуВнутр(Массив1) =\r\n        ЗначениеВСтрокуВнутр(Массив2);\r\nКонецФункции"'
2091  13    RBRACE               '}'
2092  0     RBRACE               '}'
2092  1     T__0                 ','
2093  0     LBRACE               '{'
2093  1     INT                  '9'
2093  2     T__0                 ','
2094  0     LBRACE               '{'
2094  1     STRING               '"Алгоритмы сортировки массивов"'
2094  32    T__0                 ','
2094  33    T__2                 '1'
2094  34    T__0                 ','
2094  35    T__1                 '0'
2094  36    T__0                 ','
2094  37    STRING               '""'
2094  39    T__0                 ','
2094  40    STRING               '""'
2094  42    RBRACE               '}'
2094  43    T__0                 ','
2095  0     LBRACE               '{'
2095  1     T__1                 '0'
2095  2     T__0                 ','
2096  0     LBRACE               '{'
2096  1     STRING               '"Сортировка выбором"'
2096  21    T__0                 ','
2096  22    T__1                 '0'
2096  23    T__0                 ','
2096  24    T__1                 '0'
2096  25    T__0                 ','
2096  26    STRING               '""'
2096  28    T__0                 ','
2096  29    STRING               '"  //Сортировка выбором {---\r\nФункция СортировкаВыбором(Знач Массив) \r\n    \r\n    Мин = 0;\r\n    Для i = 0 По Массив.ВГраница() Цикл        \r\n        Мин = i;                               \r\n        Для j = i + 1 ПО Массив.ВГраница() Цикл        //Ищем минимальный элемент в массиве    \r\n            Если Массив[j] < Массив[Мин] Тогда\r\n                Мин = j;\r\n            КонецЕсли; \r\n        КонецЦикла; \r\n        Если Массив [Мин] = Массив [i] Тогда           //Если мин. элемент массива = первому элементу неотс. части массива, то пропускаем.\r\n            Продолжить;\r\n        КонецЕсли;\r\n        \r\n        Смена = Массив[i];                            //Производим замену элементов массива.\r\n        Массив[i] = Массив[Мин];\r\n        Массив[Мин] = Смена;  \r\n        \r\n    КонецЦикла;\r\n    Возврат Массив;    \r\nКонецФункции"'
2117  13    RBRACE               '}'
2118  0     RBRACE               '}'
2118  1     T__0                 ','
2119  0     LBRACE               '{'
2119  1     T__1                 '0'
2119  2     T__0                 ','
2120  0     LBRACE               '{'
2120  1     STRING               '"Сортировка пузырьком"'
2120  23    T__0                 ','
2120  24    T__1                 '0'
2120  25    T__0                 ','
2120  26    T__1                 '0'
2120  27    T__0                 ','
2120  28    STRING               '""'
2120  30    T__0                 ','
2120  31    STRING               '"//Сортировка пузырьком {---\r\nФункция СортировкаПузырьком(Знач Массив)\r\n    \r\n    Для i = 0 По Массив.ВГраница() Цикл\r\n        Для j = 0 ПО Массив.Вграница() - i - 1 Цикл\r\n            Если Массив[j] > Массив[j + 1] Тогда\r\n                Замена = Массив[j];\r\n                Массив[j] = Массив[j + 1];\r\n                Массив[j + 1] = Замена;\r\n            КонецЕсли;            \r\n        КонецЦикла;        \r\n    КонецЦикла;    \r\n    Возврат Массив;    \r\nКонецФункции\r\n//---}"'
2134  7     RBRACE               '}'
2135  0     RBRACE               '}'
2135  1     T__0                 ','
2136  0     LBRACE               '{'
2136  1     T__1                 '0'
2136  2     T__0                 ','
2137  0     LBRACE               '{'
2137  1     STRING               '"Шейкерная сортировка(Сортировка перемешиванием,Двунаправленная пузырьковая сортировка)"'
2137  89    T__0                 ','
2137  90    T__1                 '0'
2137  91    T__0                 ','
2137  92    T__1                 '0'
2137  93    T__0                 ','
2137  94    STRING               '""'
2137  96    T__0                 ','
2137  97    STRING               '"//Сортировка перемешивание (Шейкер-Сортировка) {---\r\nФункция СортировкаПеремешиванием(Знач Массив)\r\n    \r\n    Для i = 0 ПО Массив.ВГраница()/2 Цикл\r\n        \r\n        нИтер = 0;\r\n        конИтер = Массив.ВГраница();          \r\n        Пока нИтер  Массив[нИтер+1] Тогда\r\n                Замена = Массив[нИтер];\r\n                Массив[нИтер] = Массив[нИтер + 1];\r\n                Массив[нИтер + 1] = Замена;                \r\n            КонецЕсли;\r\n            нИтер = нИтер + 1;//Двигаем позицию на шаг вперед\r\n            //Проходим с конца\r\n            Если Массив[конИтер - 1] > Массив[конИтер] Тогда\r\n                Замена = Массив[конИтер - 1];\r\n                Массив[конИтер-1] = Массив[конИтер];\r\n                Массив[конИтер] = Замена;                \r\n            КонецЕсли;\r\n            конИтер = конИтер - 1;//Двигаем позицию на шаг назад              \r\n        КонецЦикла;         \r\n    КонецЦикла;       \r\n    \r\n    Возврат Массив;    \r\n    \r\nКонецФункции\r\n//---}"'
2163  7     RBRACE               '}'
2164  0     RBRACE               '}'
2164  1     T__0                 ','
2165  0     LBRACE               '{'
2165  1     T__1                 '0'
2165  2     T__0                 ','
2166  0     LBRACE               '{'
2166  1     STRING               '"Гномья сортировка"'
2166  20    T__0                 ','
2166  21    T__1                 '0'
2166  22    T__0                 ','
2166  23    T__1                 '0'
2166  24    T__0                 ','
2166  25    STRING               '""'
2166  27    T__0                 ','
2166  28    STRING               '"//Гномья сортировка {---   \r\nФункция ГномьяСортировка(Знач Массив)\r\n    \r\n    i = 1;\r\n    j = 2;\r\n    \r\n    Пока i < Массив.Количество() Цикл // Сравнение < - Сортировка по возрастанию, > - по убыванию   \r\n        \r\n        Если Массив[i-1]  \r\n            i = j;\r\n            j = j + 1;\r\n        Иначе\r\n            Замена = Массив[i];\r\n            Массив[i] = Массив[i - 1];\r\n            Массив[i - 1] = Замена;            \r\n            i = i - 1;\r\n            Если i = 0 Тогда\r\n                i = j;\r\n                j = j + 1;\r\n            КонецЕсли;            \r\n        КонецЕсли;        \r\n    КонецЦикла;    \r\n    \r\n    Возврат Массив;    \r\nКонецФункции\r\n//---}"'
2191  7     RBRACE               '}'
2192  0     RBRACE               '}'
2192  1     T__0                 ','
2193  0     LBRACE               '{'
2193  1     T__1                 '0'
2193  2     T__0                 ','
2194  0     LBRACE               '{'
2194  1     STRING               '"Сортировка вставками"'
2194  23    T__0                 ','
2194  24    T__1                 '0'
2194  25    T__0                 ','
2194  26    T__1                 '0'
2194  27    T__0                 ','
2194  28    STRING               '""'
2194  30    T__0                 ','
2194  31    STRING               '"//Сортировка вставками {---\r\nФункция СортировкаВставками(Знач Массив)\r\n    \r\n    Для i = 0 По Массив.ВГраница()-1 Цикл            \r\n        Ключ = i + 1;\r\n        Замена = Массив[Ключ];\r\n        j = i + 1;\r\n        Пока j > 0 И Замена < Массив[j - 1] Цикл\r\n            Массив[j] = Массив[j - 1];\r\n            Замена = j - 1;\r\n            Ключ = j - 1; \r\n            j = j - 1;\r\n        КонецЦикла;    \r\n    \r\n        Массив[Ключ] = Замена;\r\n        \r\n    КонецЦикла;   \r\n    \r\n    Возврат Массив;    \r\n    \r\nКонецФункции\r\n//---}"'
2215  7     RBRACE               '}'
2216  0     RBRACE               '}'
2216  1     T__0                 ','
2217  0     LBRACE               '{'
2217  1     T__1                 '0'
2217  2     T__0                 ','
2218  0     LBRACE               '{'
2218  1     STRING               '"Сортировка слиянием"'
2218  22    T__0                 ','
2218  23    T__1                 '0'
2218  24    T__0                 ','
2218  25    T__1                 '0'
2218  26    T__0                 ','
2218  27    STRING               '""'
2218  29    T__0                 ','
2218  30    STRING               '"//Сортировка слиянием {---\r\n\r\nФункция СортировкаСлиянием(Знач Массив)\r\n    \r\n    Если Массив.Количество() = 1 Тогда\r\n        Возврат Массив;\r\n    КонецЕсли;\r\n    \r\n    ТочкаРазрыв = Массив.Количество() / 2;\r\n    \r\n    лМассив = Новый Массив;\r\n    прМассив = Новый Массив;\r\n    \r\n    Для Сч = 0 ПО Массив.ВГраница() Цикл\r\n        Если Сч < ТочкаРазрыв Тогда\r\n            лМассив.Добавить(Массив[Сч]);\r\n        Иначе\r\n            прМассив.Добавить(Массив[Сч]);\r\n        КонецЕсли;\r\n    КонецЦикла;\r\n    \r\n    Возврат Слияние(СортировкаСлиянием(лМассив),СортировкаСлиянием(прМассив));\r\n    \r\nКонецФункции\r\n\r\nФункция Слияние(массив1,массив2)\r\n    \r\n    a = 0;\r\n    b = 0;\r\n    слМассив = Новый Массив;\r\n    \r\n    Для Сч = 0 ПО (Массив1.Количество() + Массив2.Количество())-1 Цикл\r\n        слМассив.Добавить();\r\n    КонецЦикла;\r\n    \r\n    Для i = 0 ПО (массив1.Количество() + массив2.Количество())-1 Цикл            \r\n        Если b <  массив2.Количество() И a < массив1.Количество() Тогда            \r\n            Если (массив1[a] > массив2[b]) И (b < массив2.Количество()) Тогда\r\n                слМассив[i] =  массив2[b];\r\n                b = b + 1;\r\n            Иначе\r\n                слМассив[i] =  массив1[a];\r\n                a = a + 1;\r\n            КонецЕсли;             \r\n        Иначе\r\n            Если b < массив2.количество() Тогда\r\n                слМассив[i] = массив2[b];\r\n                b = b + 1;\r\n            Иначе\r\n                слМассив[i] = массив1[a];\r\n                a = a + 1;\r\n            КонецЕсли;            \r\n        КонецЕсли;\r\n                \r\n    КонецЦикла;    \r\n    \r\n    Возврат слМассив;\r\n    \r\nКонецФункции   \r\n//---}"'
2277  7     RBRACE               '}'
2278  0     RBRACE               '}'
2278  1     T__0                 ','
2279  0     LBRACE               '{'
2279  1     T__1                 '0'
2279  2     T__0                 ','
2280  0     LBRACE               '{'
2280  1     STRING               '"Сортировка Шелла"'
2280  19    T__0                 ','
2280  20    T__1                 '0'
2280  21    T__0                 ','
2280  22    T__1                 '0'
2280  23    T__0                 ','
2280  24    STRING               '""'
2280  26    T__0                 ','
2280  27    STRING               '"//Сортировка Шелла {---\r\nФункция СортировкаШелла(Знач Массив)\r\n    \r\n    Шаг = Цел(Массив.Количество()/2);\r\n    \r\n    Пока Шаг > 0 Цикл\r\n        i = 0;\r\n        Пока i < (Массив.Количество() - Шаг) Цикл\r\n            j = i;\r\n            Пока j >= 0 И Массив[j] > Массив[j + Шаг] Цикл\r\n                Замена = Массив[j];\r\n                Массив[j] = Массив[j + Шаг];\r\n                Массив[j + Шаг] = Замена;\r\n                j = j - 1;\r\n                \r\n                Если ПрименитьОтображениеСортировки Тогда    \r\n                    ОтобразитьДиаграммуСортировки(Массив);    \r\n                КонецЕсли;\r\n                \r\n            КонецЦикла;                \r\n            i = i + 1;    \r\n        КонецЦикла;\r\n        Шаг = Цел(Шаг/2);\r\n        \r\n        ОбработкаПрерыванияПользователя();\r\n    КонецЦикла;\r\n    \r\n    Возврат Массив;\r\n    \r\nКонецФункции   \r\n//---}"'
2310  7     RBRACE               '}'
2311  0     RBRACE               '}'
2311  1     T__0                 ','
2312  0     LBRACE               '{'
2312  1     T__1                 '0'
2312  2     T__0                 ','
2313  0     LBRACE               '{'
2313  1     STRING               '"Быстрая сортировка"'
2313  21    T__0                 ','
2313  22    T__1                 '0'
2313  23    T__0                 ','
2313  24    T__1                 '0'
2313  25    T__0                 ','
2313  26    STRING               '""'
2313  28    T__0                 ','
2313  29    STRING               '" //Алгоритм ""Быстрая сортировка"" { \r\nПроцедура б_Сортировка(Массив,НижнийПредел,ВерхнийПредел)\r\n      \r\n    \r\n    i    = НижнийПредел;\r\n    j    = ВерхнийПредел;\r\n    m    = Массив[Цел((i+j)/2)];\r\n    \r\n    Пока Истина Цикл        \r\n        Пока Массив[i] < m Цикл            \r\n            i    = i + 1;                   \r\n        КонецЦикла;\r\n        \r\n        Пока Массив[j] > m Цикл            \r\n            j    = j - 1;                   \r\n        КонецЦикла; \r\n        \r\n        Если i > j Тогда                       \r\n            Прервать;                        \r\n        КонецЕсли;\r\n        \r\n    КонецЦикла;\r\n    \r\n    Если НижнийПредел < j Тогда         \r\n        б_Сортировка(Массив,НижнийПредел,j);        \r\n    КонецЕсли; \r\n    \r\n    Если i < ВерхнийПредел Тогда                      \r\n        б_Сортировка(Массив,i,ВерхнийПредел);        \r\n    КонецЕсли;\r\n    \r\nКонецПроцедуры\r\n\r\nФункция БыстраяСортировка(Массив)\r\n    \r\n    НижняяГраница = 0;\r\n    ВерхняяГраница = Массив.ВГраница();    \r\n    б_Сортировка(Массив,НижняяГраница,ВерхняяГраница);\r\n    \r\n    Возврат Массив;\r\n    \r\nКонецФункции\r\n //---}"'
2355  8     RBRACE               '}'
2356  0     RBRACE               '}'
2356  1     T__0                 ','
2357  0     LBRACE               '{'
2357  1     T__1                 '0'
2357  2     T__0                 ','
2358  0     LBRACE               '{'
2358  1     STRING               '"Классическая сортировка массива в 1с."'
2358  40    T__0                 ','
2358  41    T__1                 '0'
2358  42    T__0                 ','
2358  43    T__1                 '0'
2358  44    T__0                 ','
2358  45    STRING               '""'
2358  47    T__0                 ','
2358  48    STRING               '"//Сортировка списком значений {---\r\nФункция СортировкаСпискомЗначений(Знач Массив)\r\n    \r\n        мСписокЗнч = Новый СписокЗначений;\r\n        мСписокЗнч.ЗагрузитьЗначения(Массив);\r\n    мСписокЗнч.СортироватьПоЗначению(НаправлениеСортировки.Возр);    \r\n    Возврат мСписокЗнч.ВыгрузитьЗначения();\r\nКонецФункции\r\n//---}"'
2366  7     RBRACE               '}'
2367  0     RBRACE               '}'
2368  0     RBRACE               '}'
2369  0     RBRACE               '}'
2369  1     T__0                 ','
2370  0     LBRACE               '{'
2370  1     INT                  '8'
2370  2     T__0                 ','
2371  0     LBRACE               '{'
2371  1     STRING               '"Словари(Соответствие)"'
2371  24    T__0                 ','
2371  25    T__2                 '1'
2371  26    T__0                 ','
2371  27    T__1                 '0'
2371  28    T__0                 ','
2371  29    STRING               '""'
2371  31    T__0                 ','
2371  32    STRING               '""'
2371  34    RBRACE               '}'
2371  35    T__0                 ','
2372  0     LBRACE               '{'
2372  1     T__1                 '0'
2372  2     T__0                 ','
2373  0     LBRACE               '{'
2373  1     STRING               '"Добавление и удаление элементов"'
2373  34    T__0                 ','
2373  35    T__1                 '0'
2373  36    T__0                 ','
2373  37    T__1                 '0'
2373  38    T__0                 ','
2373  39    STRING               '""'
2373  41    T__0                 ','
2373  42    STRING               '"Соотв = Новый Соответствие;\r\nСоотв.Вставить(1, ""один"");\r\nСоотв.Вставить(2, ""два"");\r\nСоотв.Вставить(3, """");\r\nСоотв[3] = ""три"";\r\n//Соотв = [1 : ""один"", 2 : ""два"", 3 : ""три""]\r\nСоотв.Удалить(3);\r\n//с = [1 : ""один"", 2 : ""два""]\r\nСоотв.Очистить();\r\n//с = []\r\n"'
2383  1     RBRACE               '}'
2384  0     RBRACE               '}'
2384  1     T__0                 ','
2385  0     LBRACE               '{'
2385  1     T__1                 '0'
2385  2     T__0                 ','
2386  0     LBRACE               '{'
2386  1     STRING               '"Индексация словарей"'
2386  22    T__0                 ','
2386  23    T__1                 '0'
2386  24    T__0                 ','
2386  25    T__1                 '0'
2386  26    T__0                 ','
2386  27    STRING               '""'
2386  29    T__0                 ','
2386  30    STRING               '"//пустой словарь\r\nСоответствие1 = Новый Соответствие;\r\n//словарь со значениями\r\nСоответствие2 = Новый Соответствие;\r\nСоответствие2.Вставить(1, ""один"");\r\nСоответствие2.Вставить(2, ""два"");\r\n"'
2392  1     RBRACE               '}'
2393  0     RBRACE               '}'
2393  1     T__0                 ','
2394  0     LBRACE               '{'
2394  1     T__1                 '0'
2394  2     T__0                 ','
2395  0     LBRACE               '{'
2395  1     STRING               '"Количество элементов"'
2395  23    T__0                 ','
2395  24    T__1                 '0'
2395  25    T__0                 ','
2395  26    T__1                 '0'
2395  27    T__0                 ','
2395  28    STRING               '""'
2395  30    T__0                 ','
2395  31    STRING               '"Соотв = Новый Соответствие;\r\nСоотв.Вставить(1, ""один"");\r\nСоотв.Вставить(2, ""два"");\r\nКоличество = Соотв.Количество();\r\n//Количество = 2"'
2399  17    RBRACE               '}'
2400  0     RBRACE               '}'
2400  1     T__0                 ','
2401  0     LBRACE               '{'
2401  1     T__1                 '0'
2401  2     T__0                 ','
2402  0     LBRACE               '{'
2402  1     STRING               '"Обход словаря"'
2402  16    T__0                 ','
2402  17    T__1                 '0'
2402  18    T__0                 ','
2402  19    T__1                 '0'
2402  20    T__0                 ','
2402  21    STRING               '""'
2402  23    T__0                 ','
2402  24    STRING               '"Соотв = Новый Соответствие;\r\nСоотв.Вставить(1, ""один"");\r\nСоотв.Вставить(2, ""два"");\r\nСтр = """";\r\nДля Каждого Элемент из Соотв Цикл\r\n    Стр = Стр + ?(Стр = """", """", "", "") +\r\n        (""{"" + Элемент.Ключ + "" : """""" +\r\n        Элемент.Значение + """"""}"");\r\nКонецЦикла;\r\n//Стр = ""{1 : ""один""}, {2 : ""два""}"'
2411  40    RBRACE               '}'
2412  0     RBRACE               '}'
2412  1     T__0                 ','
2413  0     LBRACE               '{'
2413  1     T__1                 '0'
2413  2     T__0                 ','
2414  0     LBRACE               '{'
2414  1     STRING               '"Получение списка значения"'
2414  28    T__0                 ','
2414  29    T__1                 '0'
2414  30    T__0                 ','
2414  31    T__1                 '0'
2414  32    T__0                 ','
2414  33    STRING               '""'
2414  35    T__0                 ','
2414  36    STRING               '"Соотв = Новый Соответствие;\r\nСоотв.Вставить(1, ""один"");\r\nСоотв.Вставить(2, ""два"");\r\nЗначения = Новый Массив;\r\nДля Каждого Элемент из Соотв Цикл\r\n    Значения.Добавить(Элемент.Значение);\r\nКонецЦикла;\r\n//Значения = [""один"", ""два""]"'
2421  33    RBRACE               '}'
2422  0     RBRACE               '}'
2422  1     T__0                 ','
2423  0     LBRACE               '{'
2423  1     T__1                 '0'
2423  2     T__0                 ','
2424  0     LBRACE               '{'
2424  1     STRING               '"Получение списка ключей"'
2424  26    T__0                 ','
2424  27    T__1                 '0'
2424  28    T__0                 ','
2424  29    T__1                 '0'
2424  30    T__0                 ','
2424  31    STRING               '""'
2424  33    T__0                 ','
2424  34    STRING               '"Соотв = Новый Соответствие;\r\nСоотв.Вставить(1, ""один"");\r\nСоотв.Вставить(2, ""два"");\r\nКлючи = Новый Массив;\r\nДля Каждого Элемент из Соотв Цикл\r\n    Ключи.Добавить(Элемент.Ключ);\r\nКонецЦикла;\r\n//Ключи = [1, 2]"'
2431  17    RBRACE               '}'
2432  0     RBRACE               '}'
2432  1     T__0                 ','
2433  0     LBRACE               '{'
2433  1     T__1                 '0'
2433  2     T__0                 ','
2434  0     LBRACE               '{'
2434  1     STRING               '"Получение значения по ключу"'
2434  30    T__0                 ','
2434  31    T__1                 '0'
2434  32    T__0                 ','
2434  33    T__1                 '0'
2434  34    T__0                 ','
2434  35    STRING               '""'
2434  37    T__0                 ','
2434  38    STRING               '"Соотв = Новый Соответствие;\r\nСоотв.Вставить(1, ""один"");\r\nСоотв.Вставить(2, ""два"");\r\n\r\nЗначение1 = Соотв[1];\r\n//Значение1 = ""один""\r\nЗначение2 = Соотв[2];\r\n//Значение2 = ""два""\r\nЗначение3 = Соотв[3];\r\n//Значение3 = Неопределено"'
2443  27    RBRACE               '}'
2444  0     RBRACE               '}'
2444  1     T__0                 ','
2445  0     LBRACE               '{'
2445  1     T__1                 '0'
2445  2     T__0                 ','
2446  0     LBRACE               '{'
2446  1     STRING               '"Проверка наличия ключа"'
2446  25    T__0                 ','
2446  26    T__1                 '0'
2446  27    T__0                 ','
2446  28    T__1                 '0'
2446  29    T__0                 ','
2446  30    STRING               '""'
2446  32    T__0                 ','
2446  33    STRING               '"Соотв = Новый Соответствие;\r\nСоотв.Вставить(1, ""один"");\r\nСоотв.Вставить(2, Неопределено);\r\nЕсть1 = Соотв.Получить(1) <> Неопределено;\r\n//Есть1 = Истина\r\nЕсть2 = Соотв.Получить(2) <> Неопределено;\r\n//Есть2 = Ложь\r\nЕсть3 = Соотв.Получить(3) <> Неопределено;\r\n//Есть3 = Ложь"'
2454  15    RBRACE               '}'
2455  0     RBRACE               '}'
2456  0     RBRACE               '}'
2456  1     T__0                 ','
2457  0     LBRACE               '{'
2457  1     INT                  '10'
2457  3     T__0                 ','
2458  0     LBRACE               '{'
2458  1     STRING               '"Дерево значений"'
2458  18    T__0                 ','
2458  19    T__2                 '1'
2458  20    T__0                 ','
2458  21    T__1                 '0'
2458  22    T__0                 ','
2458  23    STRING               '""'
2458  25    T__0                 ','
2458  26    STRING               '""'
2458  28    RBRACE               '}'
2458  29    T__0                 ','
2459  0     LBRACE               '{'
2459  1     T__1                 '0'
2459  2     T__0                 ','
2460  0     LBRACE               '{'
2460  1     STRING               '"Сортировка данных"'
2460  20    T__0                 ','
2460  21    T__1                 '0'
2460  22    T__0                 ','
2460  23    T__1                 '0'
2460  24    T__0                 ','
2460  25    STRING               '""'
2460  27    T__0                 ','
2460  28    STRING               '"Должности = Новый ДеревоЗначений;\r\nДолжности.Колонки.Добавить(""Должность"");\r\nДолжности.Колонки.Добавить(""Количество"");\r\n\r\nГлБух = Должности.Строки.Добавить();\r\nГлБух.Должность = ""Гл. бухгалтер"";\r\nГлБух.Количество = 1;\r\n\r\nЗамГлБух = ГлБух.Строки.Добавить();\r\nЗамГлБух.Должность = ""Зам. гл. бухгалтера"";\r\nЗамГлБух.Количество = 1;\r\n\r\nБухРасчет = ГлБух.Строки.Добавить();\r\nБухРасчет.Должность = ""Бух. расч. отдела"";\r\nБухРасчет.Количество = 3;\r\n\r\n//сортировка подчиненных строк строки глБух\r\nГлБух.Строки.Сортировать(""Должность Возр"");\r\n//сортировка всех строк дерева значений\r\nДолжности.Строки.Сортировать(""Количество Убыв, Должность Возр"", Истина);"'
2479  75    RBRACE               '}'
2480  0     RBRACE               '}'
2480  1     T__0                 ','
2481  0     LBRACE               '{'
2481  1     T__1                 '0'
2481  2     T__0                 ','
2482  0     LBRACE               '{'
2482  1     STRING               '"Создание копии дерева"'
2482  24    T__0                 ','
2482  25    T__1                 '0'
2482  26    T__0                 ','
2482  27    T__1                 '0'
2482  28    T__0                 ','
2482  29    STRING               '""'
2482  31    T__0                 ','
2482  32    STRING               '"Должности = Новый ДеревоЗначений;\r\nДолжности.Колонки.Добавить(""Должность"");\r\nГенДир = Должности.Строки.Добавить();\r\nГенДир.Должность = ""Ген. директор"";\r\nФинДир = ГенДир.Строки.Добавить();\r\nФинДир.Должность = ""Фин. директор"";\r\nКомДир = ГенДир.Строки.Добавить();\r\nКомДир.Должность = ""Ком. директор"";\r\n//полная копия дерева\r\nКопия = Должности.Скопировать();\r\n\r\n"'
2493  1     RBRACE               '}'
2494  0     RBRACE               '}'
2494  1     T__0                 ','
2495  0     LBRACE               '{'
2495  1     T__1                 '0'
2495  2     T__0                 ','
2496  0     LBRACE               '{'
2496  1     STRING               '"Получение индексов строки"'
2496  28    T__0                 ','
2496  29    T__1                 '0'
2496  30    T__0                 ','
2496  31    T__1                 '0'
2496  32    T__0                 ','
2496  33    STRING               '""'
2496  35    T__0                 ','
2496  36    STRING               '"Должности = Новый ДеревоЗначений;\r\nДолжности.Колонки.Добавить(""Должность"");\r\nГенДир = Должности.Строки.Добавить();\r\nГенДир.Должность = ""Ген. директор"";\r\nФинДир = ГенДир.Строки.Добавить();\r\nФинДир.Должность = ""Фин. директор"";\r\nКомДир = ГенДир.Строки.Добавить();\r\nКомДир.Должность = ""Ком. директор"";\r\nИндекс = Должности.Строки.Индекс(КомДир);\r\n//Индекс = -1\r\nИндекс = ГенДир.Строки.Индекс(КомДир);\r\n//Индекс = 1\r\n"'
2508  1     RBRACE               '}'
2509  0     RBRACE               '}'
2509  1     T__0                 ','
2510  0     LBRACE               '{'
2510  1     T__1                 '0'
2510  2     T__0                 ','
2511  0     LBRACE               '{'
2511  1     STRING               '" Поиск по дереву"'
2511  19    T__0                 ','
2511  20    T__1                 '0'
2511  21    T__0                 ','
2511  22    T__1                 '0'
2511  23    T__0                 ','
2511  24    STRING               '""'
2511  26    T__0                 ','
2511  27    STRING               '"Должности = Новый ДеревоЗначений;\r\nДолжности.Колонки.Добавить(""Должность"");\r\nДолжности.Колонки.Добавить(""Количество"");\r\n\r\nДиректор = Должности.Строки.Добавить();\r\nДиректор.Должность = ""Директор"";\r\nДиректор.Количество = 1;\r\n\r\nБухгалтер = Директор.Строки.Добавить();\r\nБухгалтер.Должность = ""Бухгалтер"";\r\nБухгалтер.Количество = 1;\r\n\r\nПродавец = Директор.Строки.Добавить();\r\nПродавец.Должность = ""Продавец"";\r\nПродавец.Количество = 3;\r\n//поиск по всем колонкам и подчиненным строкам\r\nСтрока1 = Должности.Строки.Найти(""Продавец"", Неопределено, Истина);\r\n//Строка = Продавец : 3\r\n//поиск по колонке ""Должность"", включая подчиненные строки\r\nСтрока2 = Должности.Строки.Найти(""Продавец"", ""Должность"", Истина);\r\n//Строка = Продавец : 3\r\n//поиск по колонке ""Количество"", включая подчиненные строки\r\nСтрока3 = Должности.Строки.Найти(""Продавец"", ""Количество"", Истина);\r\n//Строка = Неопределено\r\n//поиск по колонке ""Должность""\r\nСтрока4 = Должности.Строки.Найти(""Продавец"", ""Должность"");\r\n//Строка = Неопределено\r\n//поиск по всем колонкам в строке ""директор""\r\nстрока5 = директор.Строки.Найти(""Продавец"");\r\n//строка = Продавец : 3\r\nПараметрыОтбора = Новый Структура;\r\nПараметрыОтбора.Вставить(""Количество"", 1);\r\nстроки = должности.Строки.НайтиСтроки(ПараметрыОтбора, Истина);\r\n//массив из строк ""Директор"" и ""Бухгалтер"""'
2544  47    RBRACE               '}'
2545  0     RBRACE               '}'
2545  1     T__0                 ','
2546  0     LBRACE               '{'
2546  1     T__1                 '0'
2546  2     T__0                 ','
2547  0     LBRACE               '{'
2547  1     STRING               '"Перечисление колонок"'
2547  23    T__0                 ','
2547  24    T__1                 '0'
2547  25    T__0                 ','
2547  26    T__1                 '0'
2547  27    T__0                 ','
2547  28    STRING               '""'
2547  30    T__0                 ','
2547  31    STRING               '"Товары = Новый ДеревоЗначений;\r\nТовары.Колонки.Добавить(""Товар"");\r\nТовары.Колонки.Добавить(""Цена"");\r\nДля Каждого Колонка Из Товары.Колонки Цикл\r\n    Сообщить(Колонка.Имя);\r\nКонецЦикла;"'
2552  12    RBRACE               '}'
2553  0     RBRACE               '}'
2553  1     T__0                 ','
2554  0     LBRACE               '{'
2554  1     T__1                 '0'
2554  2     T__0                 ','
2555  0     LBRACE               '{'
2555  1     STRING               '"Перемещение строк"'
2555  20    T__0                 ','
2555  21    T__1                 '0'
2555  22    T__0                 ','
2555  23    T__1                 '0'
2555  24    T__0                 ','
2555  25    STRING               '""'
2555  27    T__0                 ','
2555  28    STRING               '"перемещение строк\r\nДолжности = Новый ДеревоЗначений;\r\nДолжности.Колонки.Добавить(""Должность"");\r\nГенДир = Должности.Строки.Добавить();\r\nГенДир.Должность = ""Ген. директор"";\r\nФинДир = ГенДир.Строки.Добавить();\r\nФинДир.Должность = ""Фин. директор"";\r\nКомДир = ГенДир.Строки.Добавить();\r\nКомДир.Должность = ""Ком. директор"";\r\n//сдвигаем фин. дир. на строчку ниже\r\nГенДир.Строки.Сдвинуть(0, 1);\r\n//возвращаем обратно\r\nГенДир.Строки.Сдвинуть(1, -1);"'
2567  31    RBRACE               '}'
2568  0     RBRACE               '}'
2568  1     T__0                 ','
2569  0     LBRACE               '{'
2569  1     T__1                 '0'
2569  2     T__0                 ','
2570  0     LBRACE               '{'
2570  1     STRING               '"Обход дерева значений"'
2570  24    T__0                 ','
2570  25    T__1                 '0'
2570  26    T__0                 ','
2570  27    T__1                 '0'
2570  28    T__0                 ','
2570  29    STRING               '""'
2570  31    T__0                 ','
2570  32    STRING               '"Должности = Новый ДеревоЗначений;\r\nДолжности.Колонки.Добавить(""Должность"");\r\nДолжности.Колонки.Добавить(""Количество"");\r\nГенДир = Должности.Строки.Добавить();\r\nГенДир.Должность = ""Ген. директор"";\r\nГенДир.Количество = 1;\r\nГлБух = ГенДир.Строки.Добавить();\r\nГлБух.Должность = ""Гл. бухгалтер"";\r\nГлБух.Количество = 1;\r\nЗамГлБух = ГлБух.Строки.Добавить();\r\nЗамГлБух.Должность = ""Зам. гл. бухгалтера"";\r\nЗамГлБух.Количество = 1;\r\nБухРасчет = ГлБух.Строки.Добавить();\r\nБухРасчет.Должность = ""Бух. расч. отдела"";\r\nБухРасчет.Количество = 3;\r\nПоказатьДЗ(Должности);\r\n\r\n\r\n&НаСервере\r\nПроцедура ПоказатьДЗ(Дерево, Уровень = 1)\r\n      Пробелы = ""          "";\r\n    Для Каждого Строка из Дерево.Строки Цикл\r\n        Стр = Строка.Должность + "": "" +\r\n        Строка.Количество + "" ед."";\r\n        //отступ для подчиненных строк\r\n        Стр = Лев(Пробелы, (Уровень - 1)*2) + Стр;\r\n        Сообщить(Стр);\r\n        ПоказатьДЗ(Строка, Уровень + 1);\r\n    КонецЦикла;\r\nКонецПроцедуры"'
2599  15    RBRACE               '}'
2600  0     RBRACE               '}'
2600  1     T__0                 ','
2601  0     LBRACE               '{'
2601  1     T__1                 '0'
2601  2     T__0                 ','
2602  0     LBRACE               '{'
2602  1     STRING               '"Инициализация"'
2602  16    T__0                 ','
2602  17    T__1                 '0'
2602  18    T__0                 ','
2602  19    T__1                 '0'
2602  20    T__0                 ','
2602  21    STRING               '""'
2602  23    T__0                 ','
2602  24    STRING               '"Должности = Новый ДеревоЗначений;\r\nДолжности.Колонки.Добавить(""Должность"");\r\nДолжности.Колонки.Добавить(""Количество"");\r\n\r\nГенДир = Должности.Строки.Добавить();\r\nГенДир.Должность = ""Ген. директор"";\r\nГенДир.Количество = 1;\r\n\r\nФинДир = ГенДир.Строки.Добавить();\r\nФинДир.Должность = ""Фин. директор"";\r\nФинДир.Количество = 1;\r\n\r\nКомДир = ГенДир.Строки.Добавить();\r\nКомДир.Должность = ""Ком. директор"";\r\nКомДир.Количество = 1;\r\n\r\nТорг = КомДир.Строки.Добавить();\r\nТорг.Должность = ""Торг. представитель"";\r\nТорг.Количество = 3;"'
2620  21    RBRACE               '}'
2621  0     RBRACE               '}'
2621  1     T__0                 ','
2622  0     LBRACE               '{'
2622  1     T__1                 '0'
2622  2     T__0                 ','
2623  0     LBRACE               '{'
2623  1     STRING               '"Загрузка и выгрузка колонок"'
2623  30    T__0                 ','
2623  31    T__1                 '0'
2623  32    T__0                 ','
2623  33    T__1                 '0'
2623  34    T__0                 ','
2623  35    STRING               '""'
2623  37    T__0                 ','
2623  38    STRING               '"Должности = Новый ДеревоЗначений;\r\nДолжности.Колонки.Добавить(""Должность"");\r\n\r\nГенДир = Должности.Строки.Добавить();\r\nГенДир.Должность = ""Ген. директор"";\r\n\r\nФинДир = ГенДир.Строки.Добавить();\r\nФинДир.Должность = ""Фин. директор"";\r\n\r\nКомДир = ГенДир.Строки.Добавить();\r\nКомДир.Должность = ""Ком. директор"";\r\n\r\nМассив = Должности.Строки.ВыгрузитьКолонку(0);\r\n//Массив = [""Ген. директор""]\r\nМассив = ГенДир.Строки.ВыгрузитьКолонку(0);\r\n//Массив = [""Фин. директор"", ""Ком. директор""]\r\n\r\nМассив[0] = ""Тех. директор"";\r\nГенДир.Строки.ЗагрузитьКолонку(Массив, 0);"'
2641  43    RBRACE               '}'
2642  0     RBRACE               '}'
2642  1     T__0                 ','
2643  0     LBRACE               '{'
2643  1     T__1                 '0'
2643  2     T__0                 ','
2644  0     LBRACE               '{'
2644  1     STRING               '"Добавление и удаление строк"'
2644  30    T__0                 ','
2644  31    T__1                 '0'
2644  32    T__0                 ','
2644  33    T__1                 '0'
2644  34    T__0                 ','
2644  35    STRING               '""'
2644  37    T__0                 ','
2644  38    STRING               '"Должности = Новый ДеревоЗначений;\r\nДолжности.Колонки.Добавить(""Должность"");\r\n\r\nГенДир = Должности.Строки.Добавить();\r\nГенДир.Должность = ""Ген. директор"";\r\n\r\nФинДир = ГенДир.Строки.Добавить();\r\nФинДир.Должность = ""Фин. директор"";\r\n\r\nКомДир = ГенДир.Строки.Добавить();\r\nКомДир.Должность = ""Ком. директор"";\r\n\r\n//удаляем строку ""Фин. директор""\r\nГенДир.Строки.Удалить(0);\r\n//удаляем все строки ветки ""Ген. директор""\r\nГенДир.Строки.Очистить();\r\n//удаляем все строки дерева\r\nДолжности.Строки.Очистить();"'
2661  29    RBRACE               '}'
2662  0     RBRACE               '}'
2663  0     RBRACE               '}'
2663  1     T__0                 ','
2664  0     LBRACE               '{'
2664  1     INT                  '12'
2664  3     T__0                 ','
2665  0     LBRACE               '{'
2665  1     STRING               '"Список значений"'
2665  18    T__0                 ','
2665  19    T__2                 '1'
2665  20    T__0                 ','
2665  21    T__1                 '0'
2665  22    T__0                 ','
2665  23    STRING               '""'
2665  25    T__0                 ','
2665  26    STRING               '""'
2665  28    RBRACE               '}'
2665  29    T__0                 ','
2666  0     LBRACE               '{'
2666  1     T__1                 '0'
2666  2     T__0                 ','
2667  0     LBRACE               '{'
2667  1     STRING               '"Добавление и удаление элементов"'
2667  34    T__0                 ','
2667  35    T__1                 '0'
2667  36    T__0                 ','
2667  37    T__1                 '0'
2667  38    T__0                 ','
2667  39    STRING               '""'
2667  41    T__0                 ','
2667  42    STRING               '"Числа = Новый СписокЗначений;\r\nЧисла.Добавить(1, ""один"");\r\nЧисла.Добавить(3, ""три"");\r\n//Числа = [1 : ""один"", 3 : ""три""]\r\nЧисла.Вставить(1, 2, ""два"");\r\n//Числа = [1 : ""один"", 2 : ""два"", 3 : ""три""]\r\nЧисла.Удалить(0);\r\n//Числа = [2 : ""два"", 3 : ""три""]\r\nТри = сз[1];\r\nЧисла.Удалить(Три);\r\n//Числа = [2 : ""два""]\r\nЧисла.Очистить();\r\n//Числа = [ ]"'
2679  14    RBRACE               '}'
2680  0     RBRACE               '}'
2680  1     T__0                 ','
2681  0     LBRACE               '{'
2681  1     T__1                 '0'
2681  2     T__0                 ','
2682  0     LBRACE               '{'
2682  1     STRING               '"Загрузка и  выгрузка значений"'
2682  32    T__0                 ','
2682  33    T__1                 '0'
2682  34    T__0                 ','
2682  35    T__1                 '0'
2682  36    T__0                 ','
2682  37    STRING               '""'
2682  39    T__0                 ','
2682  40    STRING               '"Числа = Новый СписокЗначений;\r\nЧисла.Добавить(1, ""один"");\r\nЧисла.Добавить(2, ""два"", Истина);\r\nЧисла.Добавить(3);\r\n//Числа = [1 : ""один"" : Нет, 2 : ""два"" : Да, 3 ]"'
2686  53    RBRACE               '}'
2687  0     RBRACE               '}'
2687  1     T__0                 ','
2688  0     LBRACE               '{'
2688  1     T__1                 '0'
2688  2     T__0                 ','
2689  0     LBRACE               '{'
2689  1     STRING               '"Инициализация"'
2689  16    T__0                 ','
2689  17    T__1                 '0'
2689  18    T__0                 ','
2689  19    T__1                 '0'
2689  20    T__0                 ','
2689  21    STRING               '""'
2689  23    T__0                 ','
2689  24    STRING               '"Числа = Новый СписокЗначений;\r\nЧисла.Добавить(1, ""один"");\r\nЧисла.Добавить(2, ""два"", Истина);\r\nЧисла.Добавить(3);\r\n//Числа = [1 : ""один"" : Нет, 2 : ""два"" : Да, 3 ]"'
2693  53    RBRACE               '}'
2694  0     RBRACE               '}'
2694  1     T__0                 ','
2695  0     LBRACE               '{'
2695  1     T__1                 '0'
2695  2     T__0                 ','
2696  0     LBRACE               '{'
2696  1     STRING               '"Обход списка значений"'
2696  24    T__0                 ','
2696  25    T__1                 '0'
2696  26    T__0                 ','
2696  27    T__1                 '0'
2696  28    T__0                 ','
2696  29    STRING               '""'
2696  31    T__0                 ','
2696  32    STRING               '"Числа = Новый СписокЗначений;\r\nЧисла.Добавить(1, ""один"", Истина);\r\nЧисла.Добавить(2, ""два"", Ложь);\r\nСтр = """";\r\nДля Каждого Элемент из Числа Цикл\r\n    Стр = Стр + ?(Стр = """", """", "", "") +\r\n        (""{"" + Элемент.Значение + "" : """""" +\r\n        Элемент.Представление + """""" : "" +\r\n        Элемент.Пометка + ""}"");\r\nКонецЦикла;\r\n\r\n//Стр = ""{1 : ""один"" : Да}, {2 : ""два"" : Нет}"" "'
2707  54    RBRACE               '}'
2708  0     RBRACE               '}'
2708  1     T__0                 ','
2709  0     LBRACE               '{'
2709  1     T__1                 '0'
2709  2     T__0                 ','
2710  0     LBRACE               '{'
2710  1     STRING               '"Обход списка с индексом"'
2710  26    T__0                 ','
2710  27    T__1                 '0'
2710  28    T__0                 ','
2710  29    T__1                 '0'
2710  30    T__0                 ','
2710  31    STRING               '""'
2710  33    T__0                 ','
2710  34    STRING               '"Числа = Новый СписокЗначений;\r\nЧисла.Добавить(1, ""один"");\r\nЧисла.Добавить(2, ""два"");\r\nСтр = """";\r\nДля Н = 0 По Числа.Количество() - 1 Цикл\r\n    Стр = Стр + ?(Стр = """", """", "", "") +\r\n        (""{"" + Числа[Н].Значение + "" : """""" +\r\n        Числа[Н].Представление + """"""}"");\r\nКонецЦикла;\r\n//Стр = ""{1 : ""один""}, {2 : ""два""}"""'
2719  42    RBRACE               '}'
2720  0     RBRACE               '}'
2720  1     T__0                 ','
2721  0     LBRACE               '{'
2721  1     T__1                 '0'
2721  2     T__0                 ','
2722  0     LBRACE               '{'
2722  1     STRING               '"Перемещение элемента"'
2722  23    T__0                 ','
2722  24    T__1                 '0'
2722  25    T__0                 ','
2722  26    T__1                 '0'
2722  27    T__0                 ','
2722  28    STRING               '""'
2722  30    T__0                 ','
2722  31    STRING               '"Числа = Новый СписокЗначений;\r\nЧисла.Добавить(1, ""один"");\r\nЧисла.Добавить(3, ""три"");\r\nЧисла.Добавить(2, ""два"");\r\nЧисла.Сдвинуть(сз[2], -1);\r\n//Числа = [1 : ""один"", 2 : ""два"", 3 : ""три""]"'
2727  51    RBRACE               '}'
2728  0     RBRACE               '}'
2728  1     T__0                 ','
2729  0     LBRACE               '{'
2729  1     T__1                 '0'
2729  2     T__0                 ','
2730  0     LBRACE               '{'
2730  1     STRING               '"Поиск индекса элемента"'
2730  25    T__0                 ','
2730  26    T__1                 '0'
2730  27    T__0                 ','
2730  28    T__1                 '0'
2730  29    T__0                 ','
2730  30    STRING               '""'
2730  32    T__0                 ','
2730  33    STRING               '"Числа = Новый СписокЗначений;\r\nЧисла.Добавить(1, ""один"");\r\nЧисла.Добавить(2, ""два"");\r\nЗначение2 = Числа.НайтиПоЗначению(2);\r\nИндекс = Числа.Индекс(Значение2);\r\n//Индекс = 1"'
2735  13    RBRACE               '}'
2736  0     RBRACE               '}'
2736  1     T__0                 ','
2737  0     LBRACE               '{'
2737  1     T__1                 '0'
2737  2     T__0                 ','
2738  0     LBRACE               '{'
2738  1     STRING               '"Показ выбора списка"'
2738  22    T__0                 ','
2738  23    T__1                 '0'
2738  24    T__0                 ','
2738  25    T__1                 '0'
2738  26    T__0                 ','
2738  27    STRING               '""'
2738  29    T__0                 ','
2738  30    STRING               '" Цвета = Новый СписокЗначений;\r\nЦвета.Добавить(""Красный"");\r\n\r\nЦвета.Добавить(""Зеленый"");\r\nЦвета.Добавить(""Синий"");\r\n//устанавливаем отметку у всех элементам\r\nЦвета.ЗаполнитьПометки(Истина);\r\n\r\nОповещение = Новый ОписаниеОповещения(""РезультатВыбораСписка"", ЭтотОбъект);\r\nЦвета.ПоказатьОтметкуЭлементов(Оповещение,""Выберите цвета"");\r\n\r\nПроцедура РезультатВыбораСписка(Элементы, Параметры) Экспорт\r\n    Если Элементы = Неопределено Тогда\r\n        Возврат;\r\n    КонецЕсли;\r\n    Для Каждого Цвет Из Элементы Цикл\r\n        Если Цвет.Пометка Тогда\r\n            Сообщить(Цвет.Значение);\r\n        КонецЕсли;\r\n    КонецЦикла;\r\nКонецПроцедуры"'
2758  15    RBRACE               '}'
2759  0     RBRACE               '}'
2759  1     T__0                 ','
2760  0     LBRACE               '{'
2760  1     T__1                 '0'
2760  2     T__0                 ','
2761  0     LBRACE               '{'
2761  1     STRING               '"Показ выбора элемента"'
2761  24    T__0                 ','
2761  25    T__1                 '0'
2761  26    T__0                 ','
2761  27    T__1                 '0'
2761  28    T__0                 ','
2761  29    STRING               '""'
2761  31    T__0                 ','
2761  32    STRING               '"Цвета = Новый СписокЗначений;\r\nЦвета.Добавить(""Красный"");\r\nЦвета.Добавить(""Зеленый"");\r\nЦвета.Добавить(""Синий"");\r\n//устанавливаем отметку у всех элементам\r\nЦвета.ЗаполнитьПометки(Истина);\r\nОповещение = Новый ОписаниеОповещения(""РезультатВыбораСписка"", ЭтотОбъект);\r\nЦвета.ПоказатьОтметкуЭлементов(Оповещение,""Выберите цвета"");\r\n\r\n\r\nПроцедура РезультатВыбораСписка(Элементы, Параметры) Экспорт\r\n    Если Элементы = Неопределено Тогда\r\n        Возврат;\r\n    КонецЕсли;\r\n\r\n    Для Каждого Цвет Из Элементы Цикл\r\n        Если Цвет.Пометка Тогда\r\n            Сообщить(Цвет.Значение);\r\n        КонецЕсли;\r\n    КонецЦикла;\r\n\r\nКонецПроцедуры\r\n"'
2783  1     RBRACE               '}'
2784  0     RBRACE               '}'
2784  1     T__0                 ','
2785  0     LBRACE               '{'
2785  1     T__1                 '0'
2785  2     T__0                 ','
2786  0     LBRACE               '{'
2786  1     STRING               '"Проверка наличия значения"'
2786  28    T__0                 ','
2786  29    T__1                 '0'
2786  30    T__0                 ','
2786  31    T__1                 '0'
2786  32    T__0                 ','
2786  33    STRING               '""'
2786  35    T__0                 ','
2786  36    STRING               '"Цвета = Новый СписокЗначений;\r\nЦвета.Добавить(""Красный"");\r\nЦвета.Добавить(""Зеленый"");\r\nЦвета.Добавить(""Синий"");\r\nОповещение = Новый ОписаниеОповещения(""РезультатВыбора"", ЭтотОбъект);\r\nЦвета.ПоказатьВыборЭлемента(Оповещение, ""Выберите цвет);\r\n\r\n\r\nПроцедура РезультатВыбора(Элемент, Параметры) Экспорт\r\n    Если Элемент <> Неопределено Тогда\r\n        Сообщить(Элемент.Значение);\r\n    КонецЕсли;\r\nКонецПроцедуры\r\n"'
2799  1     RBRACE               '}'
2800  0     RBRACE               '}'
2800  1     T__0                 ','
2801  0     LBRACE               '{'
2801  1     T__1                 '0'
2801  2     T__0                 ','
2802  0     LBRACE               '{'
2802  1     STRING               '"Создать копию списка"'
2802  23    T__0                 ','
2802  24    T__1                 '0'
2802  25    T__0                 ','
2802  26    T__1                 '0'
2802  27    T__0                 ','
2802  28    STRING               '""'
2802  30    T__0                 ','
2802  31    STRING               '"Числа = Новый СписокЗначений;\r\nЧисла.Добавить(1, ""один"");\r\nЧисла.Добавить(2, ""два"");\r\nКопияЧисла = Числа.Скопировать();\r\n//КопияЧисла = [1 : ""один"", 2 : ""два""]"'
2806  43    RBRACE               '}'
2807  0     RBRACE               '}'
2807  1     T__0                 ','
2808  0     LBRACE               '{'
2808  1     T__1                 '0'
2808  2     T__0                 ','
2809  0     LBRACE               '{'
2809  1     STRING               '"Сортировка элементов"'
2809  23    T__0                 ','
2809  24    T__1                 '0'
2809  25    T__0                 ','
2809  26    T__1                 '0'
2809  27    T__0                 ','
2809  28    STRING               '""'
2809  30    T__0                 ','
2809  31    STRING               '"Числа = Новый СписокЗначений;\r\nЧисла.Добавить(1, ""один"");\r\nЧисла.Добавить(3, ""три"");\r\nЧисла.Добавить(2, ""два"");\r\n\r\nЧисла.СортироватьПоЗначению(НаправлениеСортировки.Убыв);\r\n//Числа = [3 : ""три"", 2 : ""два"", 1 : ""один""]\r\nЧисла.СортироватьПоПредставлению(НаправлениеСортировки.Возр);\r\n//Числа = [2 : ""два"", 1 : ""один"", 3 : ""три""]\r\n"'
2818  1     RBRACE               '}'
2819  0     RBRACE               '}'
2820  0     RBRACE               '}'
2820  1     T__0                 ','
2821  0     LBRACE               '{'
2821  1     INT                  '8'
2821  2     T__0                 ','
2822  0     LBRACE               '{'
2822  1     STRING               '"Структура"'
2822  12    T__0                 ','
2822  13    T__2                 '1'
2822  14    T__0                 ','
2822  15    T__1                 '0'
2822  16    T__0                 ','
2822  17    STRING               '""'
2822  19    T__0                 ','
2822  20    STRING               '""'
2822  22    RBRACE               '}'
2822  23    T__0                 ','
2823  0     LBRACE               '{'
2823  1     T__1                 '0'
2823  2     T__0                 ','
2824  0     LBRACE               '{'
2824  1     STRING               '"Добавление и удаление элементов"'
2824  34    T__0                 ','
2824  35    T__1                 '0'
2824  36    T__0                 ','
2824  37    T__1                 '0'
2824  38    T__0                 ','
2824  39    STRING               '""'
2824  41    T__0                 ','
2824  42    STRING               '"Месяцы = Новый Структура;\r\nМесяцы.Вставить(""Январь"", 1);\r\nМесяцы.Вставить(""Февраль"", 2);\r\nМесяцы.Вставить(""Март"", 3);\r\nМесяцы.Удалить(""Февраль"");\r\n//Месяцы = [Январь : 1, Март : 3]\r\nМесяцы.Очистить();\r\n//Месяцы = [ ]"'
2831  15    RBRACE               '}'
2832  0     RBRACE               '}'
2832  1     T__0                 ','
2833  0     LBRACE               '{'
2833  1     T__1                 '0'
2833  2     T__0                 ','
2834  0     LBRACE               '{'
2834  1     STRING               '"Изменение значения"'
2834  21    T__0                 ','
2834  22    T__1                 '0'
2834  23    T__0                 ','
2834  24    T__1                 '0'
2834  25    T__0                 ','
2834  26    STRING               '""'
2834  28    T__0                 ','
2834  29    STRING               '"Месяцы = Новый Структура;\r\nМесяцы.Вставить(""Январь"", 5);\r\nМесяцы.Вставить(""Февраль"", 2);\r\nМесяцы[""Январь""] = 1;\r\n//или\r\nМесяцы.Январь = 1;\r\n"'
2840  1     RBRACE               '}'
2841  0     RBRACE               '}'
2841  1     T__0                 ','
2842  0     LBRACE               '{'
2842  1     T__1                 '0'
2842  2     T__0                 ','
2843  0     LBRACE               '{'
2843  1     STRING               '"Инициализация"'
2843  16    T__0                 ','
2843  17    T__1                 '0'
2843  18    T__0                 ','
2843  19    T__1                 '0'
2843  20    T__0                 ','
2843  21    STRING               '""'
2843  23    T__0                 ','
2843  24    STRING               '"//первый способ\r\nМонитор = Новый Структура;\r\nМонитор.Вставить(""Диагональ"", 23);\r\nМонитор.Вставить(""Контрастность"", ""1000:1"");\r\nМонитор.Вставить(""Матрица"", ""IPS"");\r\n//второй способ\r\nМонитор = Новый Структура( ""Диагональ,Контрастность,Матрица"",23, ""1000:1"", ""IPS"");\r\n\r\n//третий способ\r\n\r\nМонитор = Новый Структура(""Диагональ,Контрастность,Матрица"") ;\r\nМонитор.Диагональ = 23;\r\nМонитор.Контрастность = ""1000:1"";\r\nМонитор.Матрица = ""IPS"";\r\n\r\n"'
2858  1     RBRACE               '}'
2859  0     RBRACE               '}'
2859  1     T__0                 ','
2860  0     LBRACE               '{'
2860  1     T__1                 '0'
2860  2     T__0                 ','
2861  0     LBRACE               '{'
2861  1     STRING               '"Количество элементов"'
2861  23    T__0                 ','
2861  24    T__1                 '0'
2861  25    T__0                 ','
2861  26    T__1                 '0'
2861  27    T__0                 ','
2861  28    STRING               '""'
2861  30    T__0                 ','
2861  31    STRING               '"Паспорт = Новый Структура;\r\nПаспорт.Вставить(""Серия"", ""3004"");\r\nПаспорт.Вставить(""Номер"", ""321123"");\r\nКоличество = Паспорт.Количество();\r\n//Количество = 2\r\n"'
2866  1     RBRACE               '}'
2867  0     RBRACE               '}'
2867  1     T__0                 ','
2868  0     LBRACE               '{'
2868  1     T__1                 '0'
2868  2     T__0                 ','
2869  0     LBRACE               '{'
2869  1     STRING               '"Обход структуры"'
2869  18    T__0                 ','
2869  19    T__1                 '0'
2869  20    T__0                 ','
2869  21    T__1                 '0'
2869  22    T__0                 ','
2869  23    STRING               '""'
2869  25    T__0                 ','
2869  26    STRING               '"Телефон = Новый Структура;\r\nТелефон.Вставить(""Диагональ"", 5.5);\r\nТелефон.Вставить(""ОЗУ"", ""6 Гб"");\r\nТелефон.Вставить(""Камера"", ""23 Мп"");\r\nСтр = """";\r\nДля Каждого Элемент из Телефон Цикл\r\n    Стр = Стр + ?(Стр = """", """", "", "") +\r\n        ("""" + Элемент.Ключ + "" : "" + Элемент.Значение);\r\nКонецЦикла;\r\n//Стр = ""Диагональ : 5,5, ОЗУ : 6 Гб, Камера : 23 Мп""\r\n"'
2879  1     RBRACE               '}'
2880  0     RBRACE               '}'
2880  1     T__0                 ','
2881  0     LBRACE               '{'
2881  1     T__1                 '0'
2881  2     T__0                 ','
2882  0     LBRACE               '{'
2882  1     STRING               '"Получение списка значений"'
2882  28    T__0                 ','
2882  29    T__1                 '0'
2882  30    T__0                 ','
2882  31    T__1                 '0'
2882  32    T__0                 ','
2882  33    STRING               '""'
2882  35    T__0                 ','
2882  36    STRING               '"Телефон = Новый Структура;\r\nТелефон.Вставить(""Диагональ"", 5.5);\r\nТелефон.Вставить(""ОЗУ"", ""6 Гб"");\r\nТелефон.Вставить(""Камера"", ""23 Мп"");\r\nЗначения = Новый Массив;\r\nДля Каждого Элемент из Телефон Цикл\r\n    Значения.Добавить(Элемент.Значение);\r\nКонецЦикла;\r\n//Значения = [5.5, ""6 Гб"", ""23 Мп""]"'
2890  40    RBRACE               '}'
2891  0     RBRACE               '}'
2891  1     T__0                 ','
2892  0     LBRACE               '{'
2892  1     T__1                 '0'
2892  2     T__0                 ','
2893  0     LBRACE               '{'
2893  1     STRING               '"Получение списка ключей"'
2893  26    T__0                 ','
2893  27    T__1                 '0'
2893  28    T__0                 ','
2893  29    T__1                 '0'
2893  30    T__0                 ','
2893  31    STRING               '""'
2893  33    T__0                 ','
2893  34    STRING               '"Телефон = Новый Структура;\r\nТелефон.Вставить(""Диагональ"", 5.5);\r\nТелефон.Вставить(""ОЗУ"", ""6 Гб"");\r\nТелефон.Вставить(""Камера"", ""23 Мп"");\r\nКлючи = Новый Массив;\r\nДля Каждого Элемент из Телефон Цикл\r\n    Ключи.Добавить(Элемент.Ключ);\r\nКонецЦикла;\r\n//Ключи = [""Диагональ"", ""ОЗУ"", Камера""]\r\n\r\nПолучить значение по ключу\r\nПаспорт = Новый Структура;\r\nПаспорт.Вставить(""Серия"", ""3004"");\r\nПаспорт.Вставить(""Номер"", ""321123"");\r\nСерия = """";\r\nПаспорт.Свойство(""Серия"", Серия);\r\n//Серия = ""3004\r\nНомер = Паспорт.Номер;\r\n//Номер = ""321123"""'
2911  21    RBRACE               '}'
2912  0     RBRACE               '}'
2912  1     T__0                 ','
2913  0     LBRACE               '{'
2913  1     T__1                 '0'
2913  2     T__0                 ','
2914  0     LBRACE               '{'
2914  1     STRING               '"Проверка наличия ключа"'
2914  25    T__0                 ','
2914  26    T__1                 '0'
2914  27    T__0                 ','
2914  28    T__1                 '0'
2914  29    T__0                 ','
2914  30    STRING               '""'
2914  32    T__0                 ','
2914  33    STRING               '"Паспорт = Новый Структура;\r\nПаспорт.Вставить(""Серия"", ""3004"");\r\nПаспорт.Вставить(""Номер"", ""321123"");\r\nЕстьСерия = Паспорт.Свойство(""Серия"");\r\n//ЕстьСерия = Да\r\nЕстьДатаВыдачи = Паспорт.Свойство(""ДатаВыдачи"");\r\n//ЕстьДатаВыдачи = Нет"'
2920  23    RBRACE               '}'
2921  0     RBRACE               '}'
2922  0     RBRACE               '}'
2922  1     T__0                 ','
2923  0     LBRACE               '{'
2923  1     INT                  '18'
2923  3     T__0                 ','
2924  0     LBRACE               '{'
2924  1     STRING               '"Таблица значений"'
2924  19    T__0                 ','
2924  20    T__2                 '1'
2924  21    T__0                 ','
2924  22    T__1                 '0'
2924  23    T__0                 ','
2924  24    STRING               '""'
2924  26    T__0                 ','
2924  27    STRING               '""'
2924  29    RBRACE               '}'
2924  30    T__0                 ','
2925  0     LBRACE               '{'
2925  1     T__1                 '0'
2925  2     T__0                 ','
2926  0     LBRACE               '{'
2926  1     STRING               '"Группировка данных"'
2926  21    T__0                 ','
2926  22    T__1                 '0'
2926  23    T__0                 ','
2926  24    T__1                 '0'
2926  25    T__0                 ','
2926  26    STRING               '""'
2926  28    T__0                 ','
2926  29    STRING               '"Товары = Новый ТаблицаЗначений;\r\nТовары.Колонки.Добавить(""Товар"");\r\nТовары.Колонки.Добавить(""Материал"");\r\nТовары.Колонки.Добавить(""Цена"");\r\n\r\nТовар = Товары.Добавить();\r\nТовар.Товар = ""Чайник"";\r\nТовар.Материал = ""Пластик"";\r\nТовар.Цена = 2500.5;\r\nТовар = Товары.Добавить();\r\nТовар.Товар = ""Тостер"";\r\nТовар.Материал = ""Метал"";\r\nТовар.Цена = 1800;\r\nТовар = Товары.Добавить();\r\nТовар.Товар = ""Блендер"";\r\nТовар.Материал = ""Пластик"";\r\nТовар.Цена = 1500;\r\nТовары.Свернуть(""Материал"", ""Цена"");\r\n//Товары = [Пластик : 4000.5, Метал : 1800]"'
2944  44    RBRACE               '}'
2945  0     RBRACE               '}'
2945  1     T__0                 ','
2946  0     LBRACE               '{'
2946  1     T__1                 '0'
2946  2     T__0                 ','
2947  0     LBRACE               '{'
2947  1     STRING               '"Добавление и удаление строк"'
2947  30    T__0                 ','
2947  31    T__1                 '0'
2947  32    T__0                 ','
2947  33    T__1                 '0'
2947  34    T__0                 ','
2947  35    STRING               '""'
2947  37    T__0                 ','
2947  38    STRING               '"Товары = Новый ТаблицаЗначений;\r\nТовары.Колонки.Добавить(""Товар"");\r\nТовары.Колонки.Добавить(""Цена"");\r\nТовар = Товары.Добавить();\r\nТовар.Товар = ""Чайник"";\r\nТовар.Цена = 2500.5;\r\n//Товары = [Чайник : 2500.5]\r\nТовар = Товары.Добавить();\r\nТовар.Товар = ""Тостер"";\r\nТовар.Цена = 1800;\r\n//Товары = [Чайник : 2500.5, Тостер : 1800]\r\nТовары.Удалить(0);\r\n//Товары = [Тостер : 1800]\r\nТовары.Очистить();\r\n//Товары = [ ]"'
2961  15    RBRACE               '}'
2962  0     RBRACE               '}'
2962  1     T__0                 ','
2963  0     LBRACE               '{'
2963  1     T__1                 '0'
2963  2     T__0                 ','
2964  0     LBRACE               '{'
2964  1     STRING               '"Загрузка и выгрузка колонок"'
2964  30    T__0                 ','
2964  31    T__1                 '0'
2964  32    T__0                 ','
2964  33    T__1                 '0'
2964  34    T__0                 ','
2964  35    STRING               '""'
2964  37    T__0                 ','
2964  38    STRING               '"Товары = Новый ТаблицаЗначений;\r\nТовары.Колонки.Добавить(""Товар"");\r\nТовары.Колонки.Добавить(""Цена"");\r\nТовар = Товары.Добавить();\r\nТовар.Товар = ""Чайник"";\r\nТовар.Цена = 2500.5;\r\nТовар = Товары.Добавить();\r\nТовар.Товар = ""Тостер"";\r\nТовар.Цена = 1800;\r\nНазвания = Товары.ВыгрузитьКолонку(""Товар"");\r\n//Названия = [Чайник, Тостер]\r\nНазвания[0] = ""Духовка"";\r\nТовары.ЗагрузитьКолонку(Названия, ""Товар"");\r\n//Товары = [Духовка : 2500.5, Тостер : 1800]"'
2977  45    RBRACE               '}'
2978  0     RBRACE               '}'
2978  1     T__0                 ','
2979  0     LBRACE               '{'
2979  1     T__1                 '0'
2979  2     T__0                 ','
2980  0     LBRACE               '{'
2980  1     STRING               '"Заполнение значений колонки"'
2980  30    T__0                 ','
2980  31    T__1                 '0'
2980  32    T__0                 ','
2980  33    T__1                 '0'
2980  34    T__0                 ','
2980  35    STRING               '""'
2980  37    T__0                 ','
2980  38    STRING               '"Товары = Новый ТаблицаЗначений;\r\nТовары.Колонки.Добавить(""Товар"");\r\nТовары.Колонки.Добавить(""Цена"");\r\nТовар = Товары.Добавить();\r\nТовар.Товар = ""Чайник"";\r\nТовар = Товары.Добавить();\r\nТовар.Товар = ""Тостер"";\r\nТовары.ЗаполнитьЗначения(1000, ""Цена"");\r\n//Товары = [Чайник : 1000, Тостер : 1000]"'
2988  42    RBRACE               '}'
2989  0     RBRACE               '}'
2989  1     T__0                 ','
2990  0     LBRACE               '{'
2990  1     T__1                 '0'
2990  2     T__0                 ','
2991  0     LBRACE               '{'
2991  1     STRING               '"Инициализация"'
2991  16    T__0                 ','
2991  17    T__1                 '0'
2991  18    T__0                 ','
2991  19    T__1                 '0'
2991  20    T__0                 ','
2991  21    STRING               '""'
2991  23    T__0                 ','
2991  24    STRING               '"Товары = Новый ТаблицаЗначений;\r\nТовары.Колонки.Добавить(""Товар"");\r\nТовары.Колонки.Добавить(""Цена"",Новый ОписаниеТипов(""Число""));\r\nТовар = Товары.Добавить();\r\nТовар.Товар = ""Чайник"";\r\nТовар.Цена = 2500.5;\r\nТовар= Товары.Добавить();\r\nТовар.Товар = ""Тостер"";\r\nТовар.Цена = 1800;\r\n//Товары = [Чайник : 2500.5, Тостер : 1800]"'
3000  44    RBRACE               '}'
3001  0     RBRACE               '}'
3001  1     T__0                 ','
3002  0     LBRACE               '{'
3002  1     T__1                 '0'
3002  2     T__0                 ','
3003  0     LBRACE               '{'
3003  1     STRING               '"Обход  таблицы значений "'
3003  27    T__0                 ','
3003  28    T__1                 '0'
3003  29    T__0                 ','
3003  30    T__1                 '0'
3003  31    T__0                 ','
3003  32    STRING               '""'
3003  34    T__0                 ','
3003  35    STRING               '"Товары = Новый ТаблицаЗначений;\r\nТовары.Колонки.Добавить(""Товар"");\r\nТовары.Колонки.Добавить(""Цена"");\r\nТовар = Товары.Добавить();\r\nТовар.Товар = ""Чайник"";\r\nТовар.Цена = 2500.5;\r\nТовар= Товары.Добавить();\r\nТовар.Товар = ""Тостер"";\r\nТовар.Цена = 1800;\r\nСтр = """";\r\nКоличество = Товары.Колонки.Количество();\r\nДля Каждого Строка из Товары Цикл\r\n    Для Н = 0 По кол - 1 Цикл\r\n        Стр = Стр + Товары.Колонки[Н].Имя +\r\n        "": "" + Строка[Н];\r\n        Стр = Стр + ?(Н < Количество - 1, "", "", "";"");\r\n    КонецЦикла;\r\n    Стр = Стр + Символы.ПС;\r\nКонецЦикла;\r\n//Стр = Товар: Чайник, Цена: 2500,5;\r\n//      Товар: Тостер, Цена: 1800;\r\n"'
3024  1     RBRACE               '}'
3025  0     RBRACE               '}'
3025  1     T__0                 ','
3026  0     LBRACE               '{'
3026  1     T__1                 '0'
3026  2     T__0                 ','
3027  0     LBRACE               '{'
3027  1     STRING               '"Обход таблицы с индексом"'
3027  27    T__0                 ','
3027  28    T__1                 '0'
3027  29    T__0                 ','
3027  30    T__1                 '0'
3027  31    T__0                 ','
3027  32    STRING               '""'
3027  34    T__0                 ','
3027  35    STRING               '"Товары = Новый ТаблицаЗначений;\r\nТовары.Колонки.Добавить(""Товар"");\r\nТовары.Колонки.Добавить(""Цена"");\r\nТовар = Товары.Добавить();\r\nТовар.Товар = ""Чайник"";\r\nТовар.Цена = 2500.5;\r\nТовар = Товары.Добавить();\r\nТовар.Товар = ""Тостер"";\r\nТовар.Цена = 1800;\r\nСтр = """";\r\nКоличество = Товары.Колонки.Количество();\r\nДля Н1 = 0 По Товары.Количество() - 1 Цикл\r\n    Для Н2 = 0 По кол - 1 Цикл\r\n        Стр = Стр + Товары.Колонки[Н2].Имя +\r\n        "": "" + Товары[Н1][Н2];\r\n        Стр = Стр + ?(Н2 < Количество - 1, "", "", "";"");\r\n    КонецЦикла;\r\n    Стр = Стр + Символы.ПС;\r\nКонецЦикла;\r\n//Стр = Товар: Чайник, Цена: 2500,5;\r\n//      Товар: Тостер, Цена: 1800;"'
3047  35    RBRACE               '}'
3048  0     RBRACE               '}'
3048  1     T__0                 ','
3049  0     LBRACE               '{'
3049  1     T__1                 '0'
3049  2     T__0                 ','
3050  0     LBRACE               '{'
3050  1     STRING               '"Перемещение строк"'
3050  20    T__0                 ','
3050  21    T__1                 '0'
3050  22    T__0                 ','
3050  23    T__1                 '0'
3050  24    T__0                 ','
3050  25    STRING               '""'
3050  27    T__0                 ','
3050  28    STRING               '"Товары = Новый ТаблицаЗначений;\r\nТовары.Колонки.Добавить(""Товар"");\r\nТовары.Колонки.Добавить(""Цена"");\r\nТовар = Товары.Добавить();\r\nТовар.Товар = ""Чайник"";\r\nТовар.Цена = 2500.5;\r\nТовар= Товары.Добавить();\r\nТовар.Товар = ""Тостер"";\r\nТовар.Цена = 1800;\r\n//Товары = [Чайник : 2500.5, Тостер : 1800]\r\n//сдвигаем первую строку вниз\r\nТовары.Сдвинуть(0, 1);\r\n//Товары = [Тостер : 1800, Чайник : 2500.5]\r\n//сдвигаем вторую строку вверх\r\n\r\nТовары.Сдвинуть(1, -1);\r\n//Товары = [Чайник : 2500.5, Тостер : 1800]\r\n"'
3067  1     RBRACE               '}'
3068  0     RBRACE               '}'
3068  1     T__0                 ','
3069  0     LBRACE               '{'
3069  1     T__1                 '0'
3069  2     T__0                 ','
3070  0     LBRACE               '{'
3070  1     STRING               '"Перечисление колонок"'
3070  23    T__0                 ','
3070  24    T__1                 '0'
3070  25    T__0                 ','
3070  26    T__1                 '0'
3070  27    T__0                 ','
3070  28    STRING               '""'
3070  30    T__0                 ','
3070  31    STRING               '"Товары = Новый ТаблицаЗначений;\r\nТовары.Колонки.Добавить(""Товар"");\r\nТовары.Колонки.Добавить(""Цена"");\r\nДля Каждого Колонка Из Товары.Колонки Цикл\r\n    Сообщить(Колонка.Имя);\r\nКонецЦикла;"'
3075  12    RBRACE               '}'
3076  0     RBRACE               '}'
3076  1     T__0                 ','
3077  0     LBRACE               '{'
3077  1     T__1                 '0'
3077  2     T__0                 ','
3078  0     LBRACE               '{'
3078  1     STRING               '"Поиск по таблице"'
3078  19    T__0                 ','
3078  20    T__1                 '0'
3078  21    T__0                 ','
3078  22    T__1                 '0'
3078  23    T__0                 ','
3078  24    STRING               '""'
3078  26    T__0                 ','
3078  27    STRING               '"Товары = Новый ТаблицаЗначений;\r\nТовары.Колонки.Добавить(""Товар"");\r\nТовары.Колонки.Добавить(""Цена"");\r\nТовар = Товары.Добавить();\r\nТовар.Товар = ""Чайник"";\r\nТовар.Цена = 2500;\r\nТовар = Товары.Добавить();\r\nТовар.Товар = ""Тостер"";\r\nТовар.Цена = 1800;\r\nТовар = Товары.Добавить();\r\nТовар.Товар = ""Миксер"";\r\nТовар.Цена = 2500;\r\n\r\nСтрока = Товары.Найти(""Чайник"");\r\n//Строка = Чайник : 2500\r\nСтрока = Товары.Найти(""Яблоко"");\r\n//Строка = Неопределено\r\nСтрока = Товары.Найти(1800);\r\n//Строка = Тостер : 1800\r\n//поиск в заданных колонках:\r\nСтрока = Товары.Найти(""Тостер"", ""Товар, Цена"");\r\n//Строка = Тостер : 1800\r\nСтрока = Таб.Найти(""Тостер"", ""Цена"");\r\n//Строка = Неопределено\r\nСтрока = Товары.Найти(""Тостер"", ""Товар"");\r\n//Строка = Тостер : 1800\r\n\r\nЕсли (Строка <> Неопределено) Тогда\r\n         Сообщить(Строка.Товар);\r\nКонецЕсли;\r\nПараметрыОтбора = Новый Структура;\r\nПараметрыОтбора.Вставить(""Цена"", 2500);\r\nСтроки = Товары.НайтиСтроки(ПараметрыОтбора);\r\n//массив из двух строк ""Чайник"" и ""Миксер""\r\n"'
3112  1     RBRACE               '}'
3113  0     RBRACE               '}'
3113  1     T__0                 ','
3114  0     LBRACE               '{'
3114  1     T__1                 '0'
3114  2     T__0                 ','
3115  0     LBRACE               '{'
3115  1     STRING               '"Получение индекса строк"'
3115  26    T__0                 ','
3115  27    T__1                 '0'
3115  28    T__0                 ','
3115  29    T__1                 '0'
3115  30    T__0                 ','
3115  31    STRING               '""'
3115  33    T__0                 ','
3115  34    STRING               '" Товары = Новый ТаблицаЗначений;\r\nТовары.Колонки.Добавить(""Товар"");\r\nЧайник = Товары.Добавить();\r\nЧайник.Товар = ""Чайник"";\r\nБлендер = Товары.Добавить();\r\nБлендер.Товар = ""Блендер"";\r\nИндекс = Товары.Индекс(чайник);\r\n//Индекс = 0\r\nИндекс = Товары.Индекс(блендер);\r\n//Индекс = 1\r\n"'
3125  1     RBRACE               '}'
3126  0     RBRACE               '}'
3126  1     T__0                 ','
3127  0     LBRACE               '{'
3127  1     T__1                 '0'
3127  2     T__0                 ','
3128  0     LBRACE               '{'
3128  1     STRING               '"Создание копии таблицы"'
3128  25    T__0                 ','
3128  26    T__1                 '0'
3128  27    T__0                 ','
3128  28    T__1                 '0'
3128  29    T__0                 ','
3128  30    STRING               '""'
3128  32    T__0                 ','
3128  33    STRING               '"Товары = Новый ТаблицаЗначений;\r\nТовары.Колонки.Добавить(""Товар"");\r\nТовары.Колонки.Добавить(""Цена"");\r\nТовар = Товары.Добавить();\r\nТовар.Товар = ""Чайник"";\r\nТовар.Цена = 2500.5;\r\nТовар = Товары.Добавить();\r\nТовар.Товар = ""Тостер"";\r\nТовар.Цена = 1800;\r\nКопия1 = Товары.Скопировать();\r\n\r\n//Копия1 = [Чайник : 2500.5, Тостер : 1800]\r\nКопия2 = Товары.СкопироватьКолонки(""Товар, Цена"");\r\n//Копия2 - пустая таблица из двух колонок\r\nОтбор = Новый Структура;\r\nОтбор.Вставить(""Цена"", 1800);\r\nКопия3 = Товары.Скопировать(отбор);\r\n//Копия3 = [Тостер : 1800]\r\nКопия4 = Товары.Скопировать(отбор, ""Товар"");\r\n//Копия4 = [Тостер]"'
3147  20    RBRACE               '}'
3148  0     RBRACE               '}'
3148  1     T__0                 ','
3149  0     LBRACE               '{'
3149  1     T__1                 '0'
3149  2     T__0                 ','
3150  0     LBRACE               '{'
3150  1     STRING               '"Сортировка данных"'
3150  20    T__0                 ','
3150  21    T__1                 '0'
3150  22    T__0                 ','
3150  23    T__1                 '0'
3150  24    T__0                 ','
3150  25    STRING               '""'
3150  27    T__0                 ','
3150  28    STRING               '"Товары = Новый ТаблицаЗначений;\r\nТовары.Колонки.Добавить(""Товар"");\r\nТовары.Колонки.Добавить(""Цена"");\r\nТовар = Товары.Добавить();\r\nТовар.Товар = ""Чайник"";\r\nТовар.Цена = 2500.5;\r\nТовар = Товары.Добавить();\r\nТовар.Товар = ""Блендер"";\r\nТовар.Цена = 1500;\r\nТовар = Товары.Добавить();\r\nТовар.Товар = ""Чайник"";\r\nТовар.Цена = 1800;\r\nТовары.Сортировать(""Товар Убыв, Цена Возр"");\r\n//Товары = [Чайник : 1800, Чайник : 2500.5, Блендер : 1800]\r\n"'
3164  1     RBRACE               '}'
3165  0     RBRACE               '}'
3165  1     T__0                 ','
3166  0     LBRACE               '{'
3166  1     T__1                 '0'
3166  2     T__0                 ','
3167  0     LBRACE               '{'
3167  1     STRING               '"Фильтрация (отбор) строк"'
3167  27    T__0                 ','
3167  28    T__1                 '0'
3167  29    T__0                 ','
3167  30    T__1                 '0'
3167  31    T__0                 ','
3167  32    STRING               '""'
3167  34    T__0                 ','
3167  35    STRING               '"Товары = Новый ТаблицаЗначений;\r\nТовары.Колонки.Добавить(""Товар"");\r\nТовары.Колонки.Добавить(""Материал"");\r\nТовар = Товары.Добавить();\r\nТовар.Товар = ""Чайник"";\r\nТовар.Материал = ""Метал"";\r\nТовар = Товары.Добавить();\r\nТовар.Товар = ""Блендер"";\r\nТовар.Материал = ""Пластик"";\r\nТовар = Товары.Добавить();\r\nТовар.Товар = ""Тостер"";\r\nТовар.Материал = ""Метал"";\r\nОтбор = Новый Структура;\r\nОтбор.Вставить(""Материал"", ""Метал"");\r\nСтроки = Товары.НайтиСтроки(Отбор);\r\nДля Каждого Стр Из Строки Цикл\r\n    Сообщить(Стр.Товар); // Чайник Тостер\r\nКонецЦикла;\r\n"'
3185  1     RBRACE               '}'
3186  0     RBRACE               '}'
3186  1     T__0                 ','
3187  0     LBRACE               '{'
3187  1     T__1                 '0'
3187  2     T__0                 ','
3188  0     LBRACE               '{'
3188  1     STRING               '"Итог по колонке"'
3188  18    T__0                 ','
3188  19    T__1                 '0'
3188  20    T__0                 ','
3188  21    T__1                 '0'
3188  22    T__0                 ','
3188  23    STRING               '""'
3188  25    T__0                 ','
3188  26    STRING               '"ТЗ.Итог(""ИмяКолонки"")"'
3188  51    RBRACE               '}'
3189  0     RBRACE               '}'
3189  1     T__0                 ','
3190  0     LBRACE               '{'
3190  1     T__1                 '0'
3190  2     T__0                 ','
3191  0     LBRACE               '{'
3191  1     STRING               '"Выгрузить значение колонки в массив"'
3191  38    T__0                 ','
3191  39    T__1                 '0'
3191  40    T__0                 ','
3191  41    T__1                 '0'
3191  42    T__0                 ','
3191  43    STRING               '""'
3191  45    T__0                 ','
3191  46    STRING               '"      мЗначения = тз.ВыгрузитьКолонку(0);"'
3191  89    RBRACE               '}'
3192  0     RBRACE               '}'
3192  1     T__0                 ','
3193  0     LBRACE               '{'
3193  1     T__1                 '0'
3193  2     T__0                 ','
3194  0     LBRACE               '{'
3194  1     STRING               '"Найти колонку"'
3194  16    T__0                 ','
3194  17    T__1                 '0'
3194  18    T__0                 ','
3194  19    T__1                 '0'
3194  20    T__0                 ','
3194  21    STRING               '""'
3194  23    T__0                 ','
3194  24    STRING               '"      Колонка = тз.Колонки.Найти(""Комментарий"");"'
3194  76    RBRACE               '}'
3195  0     RBRACE               '}'
3195  1     T__0                 ','
3196  0     LBRACE               '{'
3196  1     T__1                 '0'
3196  2     T__0                 ','
3197  0     LBRACE               '{'
3197  1     STRING               '"ПолучитьИмя, Заголовок колонки"'
3197  33    T__0                 ','
3197  34    T__1                 '0'
3197  35    T__0                 ','
3197  36    T__1                 '0'
3197  37    T__0                 ','
3197  38    STRING               '""'
3197  40    T__0                 ','
3197  41    STRING               '"    Колонка = тз.Колонки.Найти(""Комментарий"");\r\n	Сообщить(Колонка.Имя); \r\n	Сообщить(Колонка.Заголовок);"'
3199  30    RBRACE               '}'
3200  0     RBRACE               '}'
3201  0     RBRACE               '}'
3202  0     RBRACE               '}'
3202  1     T__0                 ','
3203  0     LBRACE               '{'
3203  1     INT                  '2'
3203  2     T__0                 ','
3204  0     LBRACE               '{'
3204  1     STRING               '"Многопоточные операции"'
3204  25    T__0                 ','
3204  26    T__2                 '1'
3204  27    T__0                 ','
3204  28    T__1                 '0'
3204  29    T__0                 ','
3204  30    STRING               '""'
3204  32    T__0                 ','
3204  33    STRING               '""'
3204  35    RBRACE               '}'
3204  36    T__0                 ','
3205  0     LBRACE               '{'
3205  1     T__1                 '0'
3205  2     T__0                 ','
3206  0     LBRACE               '{'
3206  1     STRING               '"Запуск нового потока"'
3206  23    T__0                 ','
3206  24    T__1                 '0'
3206  25    T__0                 ','
3206  26    T__1                 '0'
3206  27    T__0                 ','
3206  28    STRING               '""'
3206  30    T__0                 ','
3206  31    STRING               '"Параметры = Новый Массив;\r\nПараметры.Добавить(""Значение"");\r\n// запуск фонового задания\r\nФоновыеЗадания.Выполнить(""РаботаСПотоками.Операция"", Параметры);\r\n\r\nПроцедура Операция(Параметр) Экспорт\r\n    //реализация фонового задания\r\nКонецПроцедуры\r\n"'
3214  1     RBRACE               '}'
3215  0     RBRACE               '}'
3215  1     T__0                 ','
3216  0     LBRACE               '{'
3216  1     T__1                 '0'
3216  2     T__0                 ','
3217  0     LBRACE               '{'
3217  1     STRING               '"Запуск нового потока и ожидание"'
3217  34    T__0                 ','
3217  35    T__1                 '0'
3217  36    T__0                 ','
3217  37    T__1                 '0'
3217  38    T__0                 ','
3217  39    STRING               '""'
3217  41    T__0                 ','
3217  42    STRING               '"Параметры = Новый Массив;\r\nПараметры.Добавить(""Значение"");\r\n// запуск фонового задания\r\nЗадание = ФоновыеЗадания.Выполнить(""РаботаСПотоками.Операция"", Параметры);\r\nМассивЗаданий = Новый Массив;\r\nМассивЗаданий.Добавить(Задание);\r\nФоновыеЗадания.ОжидатьЗавершения(МассивЗаданий);\r\nСообщить(""Фоновое задание выполнено"");\r\n\r\nПроцедура Операция(Параметр) Экспорт\r\n\r\n    //реализация фонового задания\r\n\r\nКонецПроцедуры\r\n"'
3231  1     RBRACE               '}'
3232  0     RBRACE               '}'
3233  0     RBRACE               '}'
3233  1     T__0                 ','
3234  0     LBRACE               '{'
3234  1     INT                  '3'
3234  2     T__0                 ','
3235  0     LBRACE               '{'
3235  1     STRING               '"Обработка исключений"'
3235  23    T__0                 ','
3235  24    T__2                 '1'
3235  25    T__0                 ','
3235  26    T__1                 '0'
3235  27    T__0                 ','
3235  28    STRING               '""'
3235  30    T__0                 ','
3235  31    STRING               '""'
3235  33    RBRACE               '}'
3235  34    T__0                 ','
3236  0     LBRACE               '{'
3236  1     T__1                 '0'
3236  2     T__0                 ','
3237  0     LBRACE               '{'
3237  1     STRING               '"Генерация исключения"'
3237  23    T__0                 ','
3237  24    T__1                 '0'
3237  25    T__0                 ','
3237  26    T__1                 '0'
3237  27    T__0                 ','
3237  28    STRING               '""'
3237  30    T__0                 ','
3237  31    STRING               '"Товары = Новый Массив;\r\nПродатьТовар(Товары);\r\nПроцедура ПродатьТовар(Товары) Экспорт\r\n    Если (товары.Количество() = 0) Тогда\r\n        ВызватьИсключение ""Отсутствует товар"";\r\n    КонецЕсли;\r\n    //Реализация продажи\r\nКонецПроцедуры"'
3244  15    RBRACE               '}'
3245  0     RBRACE               '}'
3245  1     T__0                 ','
3246  0     LBRACE               '{'
3246  1     T__1                 '0'
3246  2     T__0                 ','
3247  0     LBRACE               '{'
3247  1     STRING               '"Перехват всех исключений"'
3247  27    T__0                 ','
3247  28    T__1                 '0'
3247  29    T__0                 ','
3247  30    T__1                 '0'
3247  31    T__0                 ','
3247  32    STRING               '""'
3247  34    T__0                 ','
3247  35    STRING               '"Товары = ""сыр, колбаса"";\r\nПопытка\r\n    Продать(Товары);\r\nИсключение\r\n    Инфо = ИнформацияОбОшибке();\r\n    Сообщить(""Описание='"" + Инфо.Описание + ""'"");\r\n    Сообщить(""Модуль='"" + Инфо.ИмяМодуля + ""'"");\r\n    Сообщить(""НомерСтроки="" + Инфо.НомерСтроки);\r\n    Сообщить(""ИсходнаяСтрока='"" + Инфо.ИсходнаяСтрока + ""'"");\r\nКонецПопытки;\r\n\r\nПроцедура Продать(Товары) Экспорт\r\n    Если ТипЗнч(Товары) <> Тип(""Массив"") Тогда\r\n        ВызватьИсключение ""Неверный параметр"";\r\n    КонецЕсли;\r\n    Если (Товары.Количество() = 0) Тогда\r\n        ВызватьИсключение ""Отсутствует товар"";\r\n    КонецЕсли;\r\n    //Реализация продажи\r\nКонецПроцедуры"'
3266  15    RBRACE               '}'
3267  0     RBRACE               '}'
3267  1     T__0                 ','
3268  0     LBRACE               '{'
3268  1     T__1                 '0'
3268  2     T__0                 ','
3269  0     LBRACE               '{'
3269  1     STRING               '"Повторная генерация исключений"'
3269  33    T__0                 ','
3269  34    T__1                 '0'
3269  35    T__0                 ','
3269  36    T__1                 '0'
3269  37    T__0                 ','
3269  38    STRING               '""'
3269  40    T__0                 ','
3269  41    STRING               '"Попытка\r\n    ВызватьИсключение ""Неверный формат"";\r\nИсключение\r\n    //сообщаем об ошибке\r\n    Инфо = ИнформацияОбОшибке();\r\n    Сообщить(Инфо);\r\n    //здесь можно обработать ошибку\r\n    //повторно вызываем исключение\r\n    //с первоначальным описанием\r\n    ВызватьИсключение Инфо.Описание;\r\nКонецПопытки;\r\n\r\n"'
3281  1     RBRACE               '}'
3282  0     RBRACE               '}'
3283  0     RBRACE               '}'
3283  1     T__0                 ','
3284  0     LBRACE               '{'
3284  1     T__2                 '1'
3284  2     T__0                 ','
3285  0     LBRACE               '{'
3285  1     STRING               '"Общие Объекты"'
3285  16    T__0                 ','
3285  17    T__2                 '1'
3285  18    T__0                 ','
3285  19    T__1                 '0'
3285  20    T__0                 ','
3285  21    STRING               '""'
3285  23    T__0                 ','
3285  24    STRING               '""'
3285  26    RBRACE               '}'
3285  27    T__0                 ','
3286  0     LBRACE               '{'
3286  1     INT                  '2'
3286  2     T__0                 ','
3287  0     LBRACE               '{'
3287  1     STRING               '"Табличный документ"'
3287  21    T__0                 ','
3287  22    T__2                 '1'
3287  23    T__0                 ','
3287  24    T__1                 '0'
3287  25    T__0                 ','
3287  26    STRING               '""'
3287  28    T__0                 ','
3287  29    STRING               '""'
3287  31    RBRACE               '}'
3287  32    T__0                 ','
3288  0     LBRACE               '{'
3288  1     T__1                 '0'
3288  2     T__0                 ','
3289  0     LBRACE               '{'
3289  1     STRING               '"табличный документ: показать, заполнить, колонтитулы и шрифты, на принтер, масштаб, отступы"'
3289  94    T__0                 ','
3289  95    T__1                 '0'
3289  96    T__0                 ','
3289  97    T__1                 '0'
3289  98    T__0                 ','
3289  99    STRING               '""'
3289  101   T__0                 ','
3289  102   STRING               '"// получить табличный документ:\r\nТабДок = Новый ТабличныйДокумент;\r\nМакет = ПолучитьМакет(""Макет"");	\r\n\r\n// заполним параметры табличного документа:\r\nОбластьМакета = Макет.ПолучитьОбласть(""Область"");\r\nОбластьМакета.Параметры.ФИО = ""Семенов Семен Семенович"";\r\nОбластьМакета.Параметры.Возраст = ""25"";	\r\nТабДок.Вывести(ОбластьМакета);\r\n\r\n// масштаб по ширине страницы:\r\nТабДок.АвтоМасштаб = Истина;\r\n\r\n// покажем табличный документ, выведем на экран:\r\nТабДок.Показать();\r\n\r\n// настройки вывода колонтитулов:\r\nТабДок.НижнийКолонтитул.Выводить = Истина;\r\nТабДок.НижнийКолонтитул.ТекстСправа = ""Информация снизу справа"";\r\nТабДок.НижнийКолонтитул.ТекстСлева = ""Информация снизу слева""; \r\nТабДок.НижнийКолонтитул.ТекстВЦентре = ""Информация снизу по центру""; \r\nТабДок.НижнийКолонтитул.НачальнаяСтраница = 2; // вывод колонтитула со второй страницы\r\nНовыйШрифт = Новый Шрифт(""Times New Roman"",10,);\r\nТабДок.НижнийКолонтитул.Шрифт = НовыйШрифт;\r\nТабДок.РазмерКолонтитулаСнизу = 36; // высота колонтитула\r\nТабДок.ВерхнийКолонтитул.Выводить = Истина; // верхний колонтитул по аналогии с нижним \r\n\r\n// настройки отступов от краев документа:\r\nТабДок.ПолеСверху = 36; // отступ сверху\r\nТабДок.ПолеСнизу = 36; // отступ сверху\r\nТабДок.ПолеСлева = 20; // отступ слева\r\nТабДок.ПолеСправа = 10; // отступ справа \r\n\r\n// сразу отправим табличный документ на принтер:\r\nТабДок.Напечатать(РежимИспользованияДиалогаПечати.НеИспользовать);"'
3323  67    RBRACE               '}'
3324  0     RBRACE               '}'
3324  1     T__0                 ','
3325  0     LBRACE               '{'
3325  1     T__1                 '0'
3325  2     T__0                 ','
3326  0     LBRACE               '{'
3326  1     STRING               '"Изменить цвет текста области табличного документа"'
3326  52    T__0                 ','
3326  53    T__1                 '0'
3326  54    T__0                 ','
3326  55    T__1                 '0'
3326  56    T__0                 ','
3326  57    STRING               '""'
3326  59    T__0                 ','
3326  60    STRING               '"ТабДокумент.Области.<ИмяОбласти>.ЦветТекста= WebЦвета.Красный;"'
3326  124   RBRACE               '}'
3327  0     RBRACE               '}'
3328  0     RBRACE               '}'
3329  0     RBRACE               '}'
3329  1     T__0                 ','
3330  0     LBRACE               '{'
3330  1     INT                  '13'
3330  3     T__0                 ','
3331  0     LBRACE               '{'
3331  1     STRING               '"Объекты 1С"'
3331  13    T__0                 ','
3331  14    T__2                 '1'
3331  15    T__0                 ','
3331  16    T__1                 '0'
3331  17    T__0                 ','
3331  18    STRING               '""'
3331  20    T__0                 ','
3331  21    STRING               '""'
3331  23    RBRACE               '}'
3331  24    T__0                 ','
3332  0     LBRACE               '{'
3332  1     INT                  '17'
3332  3     T__0                 ','
3333  0     LBRACE               '{'
3333  1     STRING               '"Документы"'
3333  12    T__0                 ','
3333  13    T__2                 '1'
3333  14    T__0                 ','
3333  15    T__1                 '0'
3333  16    T__0                 ','
3333  17    STRING               '""'
3333  19    T__0                 ','
3333  20    STRING               '""'
3333  22    RBRACE               '}'
3333  23    T__0                 ','
3334  0     LBRACE               '{'
3334  1     T__1                 '0'
3334  2     T__0                 ','
3335  0     LBRACE               '{'
3335  1     STRING               '"Блокировка перед изменением"'
3335  30    T__0                 ','
3335  31    T__1                 '0'
3335  32    T__0                 ','
3335  33    T__1                 '0'
3335  34    T__0                 ','
3335  35    STRING               '""'
3335  37    T__0                 ','
3335  38    STRING               '"Док = Документы.ПриходнаяНакладная;\r\nНакл = Док.НайтиПоНомеру(6);\r\nОбъект = Накл.ПолучитьОбъект();\r\nЕсли Не Объект.Заблокирован() Тогда\r\n    Объект.Заблокировать();\r\n    //Вносим необходимые изменения\r\n    Объект.Склад = Справочники.Склады.Основной;\r\n    Объект.Записать();\r\n    Объект.Разблокировать();\r\nКонецЕсли;"'
3344  11    RBRACE               '}'
3345  0     RBRACE               '}'
3345  1     T__0                 ','
3346  0     LBRACE               '{'
3346  1     T__1                 '0'
3346  2     T__0                 ','
3347  0     LBRACE               '{'
3347  1     STRING               '"Изменение представления"'
3347  26    T__0                 ','
3347  27    T__1                 '0'
3347  28    T__0                 ','
3347  29    T__1                 '0'
3347  30    T__0                 ','
3347  31    STRING               '""'
3347  33    T__0                 ','
3347  34    STRING               '"Процедура ПодпискаНаСобытиеПолученияПредставления(\r\n    Источник, Данные, Представление, СтандартнаяОбработка) Экспорт\r\n    //Представление документа будет использоваться\r\n    //во всех отчетах и журналах, где фигурирует данный документ\r\n    СтандартнаяОбработка = Ложь;\r\n    Представление = СтрШаблон(""№ %1 от %2"",\r\n        Данные.Ссылка.ПолучитьОбъект().КаталожныйНомер,\r\n        Данные.Дата);\r\nКонецПроцедуры\r\n	"'
3356  2     RBRACE               '}'
3357  0     RBRACE               '}'
3357  1     T__0                 ','
3358  0     LBRACE               '{'
3358  1     T__1                 '0'
3358  2     T__0                 ','
3359  0     LBRACE               '{'
3359  1     STRING               '"Использование транзакции"'
3359  27    T__0                 ','
3359  28    T__1                 '0'
3359  29    T__0                 ','
3359  30    T__1                 '0'
3359  31    T__0                 ','
3359  32    STRING               '""'
3359  34    T__0                 ','
3359  35    STRING               '"Использование транзакции\r\n//выбрать документы созданные до 01.01.2017\r\nЗапрос = Новый Запрос;\r\nЗапрос.Текст =\r\n    ""ВЫБРАТЬ\r\n    |   ПриходнаяНакладная.Ссылка\r\n    |ИЗ\r\n    |   Документ.ПриходнаяНакладная КАК ПриходнаяНакладная\r\n    |ГДЕ\r\n    |   ПриходнаяНакладная.Дата < &Дата"";\r\nЗапрос.УстановитьПараметр(""Дата"", Дата(2017, 1, 1));\r\nЭлементы = Запрос.Выполнить().Выбрать();\r\n//устанавливаем ""Основной"" склад для найденных док-в\r\n//в случае любой ошибки, изменения\r\n//по всем документам будут отменены\r\nНачатьТранзакцию();\r\nПока Элементы.Следующий() Цикл\r\n    Объект = Элементы.Ссылка.ПолучитьОбъект();\r\n    Объект.Склад = Справочники.Склады.Основной;\r\n    Объект.Записать();\r\nКонецЦикла;\r\nЗафиксироватьТранзакцию();"'
3380  27    RBRACE               '}'
3381  0     RBRACE               '}'
3381  1     T__0                 ','
3382  0     LBRACE               '{'
3382  1     T__1                 '0'
3382  2     T__0                 ','
3383  0     LBRACE               '{'
3383  1     STRING               '"Копирование документа"'
3383  24    T__0                 ','
3383  25    T__1                 '0'
3383  26    T__0                 ','
3383  27    T__1                 '0'
3383  28    T__0                 ','
3383  29    STRING               '""'
3383  31    T__0                 ','
3383  32    STRING               '"Док = Документы.ПриходнаяНакладная;\r\n//находим нужный документ\r\nНакл = Док.НайтиПоНомеру(6);\r\n//создаем копию документа\r\nНовыйДокумент = Накл.Скопировать();\r\nНовыйДокумент.Склад = Справочники.Склады.Основной;\r\nНовыйДокумент.Дата = ТекущаяДата();\r\nНовыйДокумент.Записать();НовыйДокумент.Записать();"'
3390  51    RBRACE               '}'
3391  0     RBRACE               '}'
3391  1     T__0                 ','
3392  0     LBRACE               '{'
3392  1     T__1                 '0'
3392  2     T__0                 ','
3393  0     LBRACE               '{'
3393  1     STRING               '"Открыть форму выбора"'
3393  23    T__0                 ','
3393  24    T__1                 '0'
3393  25    T__0                 ','
3393  26    T__1                 '0'
3393  27    T__0                 ','
3393  28    STRING               '""'
3393  30    T__0                 ','
3393  31    STRING               '"&НаКлиенте\r\nПроцедура ОткрытьФормуВыбора() Экспорт\r\n //процедура ""ПослеВыбораДокумента""\r\n    //будет вызвана после выбора док-та\r\n   Оповещение = Новый ОписаниеОповещения(\r\n        ""ПослеВыбораДокумента"",\r\n        ЭтотОбъект);\r\n    ОткрытьФорму(\r\n        ""Документ.ПриходнаяНакладная.ФормаВыбора"",,,,,,\r\n        Оповещение);\r\nКонецПроцедуры            \r\n	\r\n\r\n&НаКлиенте\r\nПроцедура ПослеВыбораДокумента(Результат, Параметры) Экспорт\r\n    Если Результат <> Неопределено Тогда\r\n        Сообщить(""Выбрали документ: "" + Результат);\r\n    Иначе\r\n        Сообщить(""Ничего не выбрали"");\r\n    КонецЕсли;\r\nКонецПроцедуры\r\n"'
3414  1     RBRACE               '}'
3415  0     RBRACE               '}'
3415  1     T__0                 ','
3416  0     LBRACE               '{'
3416  1     T__1                 '0'
3416  2     T__0                 ','
3417  0     LBRACE               '{'
3417  1     STRING               '"Открыть форму документа"'
3417  26    T__0                 ','
3417  27    T__1                 '0'
3417  28    T__0                 ','
3417  29    T__1                 '0'
3417  30    T__0                 ','
3417  31    STRING               '""'
3417  33    T__0                 ','
3417  34    STRING               '"&НаКлиенте\r\nПроцедура ОткрытьФормуДокумента() Экспорт\r\n    Ссылка = НайтиДокумент(6);\r\n    Парам = Новый Структура(""Ключ"", Ссылка);\r\n    ОткрытьФорму(\r\n        ""Документ.ПриходнаяНакладная.ФормаОбъекта"",\r\n        Парам);\r\nКонецПроцедуры\r\n&НаСервере\r\nФункция НайтиДокумент(Номер) Экспорт\r\n    Док = Документы.ПриходнаяНакладная;\r\n    Накл = Док.НайтиПоНомеру(Номер);\r\n    Возврат Накл;\r\nКонецФункции"'
3430  13    RBRACE               '}'
3431  0     RBRACE               '}'
3431  1     T__0                 ','
3432  0     LBRACE               '{'
3432  1     T__1                 '0'
3432  2     T__0                 ','
3433  0     LBRACE               '{'
3433  1     STRING               '"Перебор документов"'
3433  21    T__0                 ','
3433  22    T__1                 '0'
3433  23    T__0                 ','
3433  24    T__1                 '0'
3433  25    T__0                 ','
3433  26    STRING               '""'
3433  28    T__0                 ','
3433  29    STRING               '"Перебор документов\r\n//выбрать документы созданные начиная с 01.01.2017\r\n//медленный, нерекомендуемый способ\r\nЭлементы = Документы.ПриходнаяНакладная.Выбрать();\r\nПока Элементы.Следующий() Цикл\r\n    Если (НачалоДня(Элементы.Дата) >= Дата(2017, 1, 1)) Тогда\r\n        Сообщить(Элементы);\r\n    КонецЕсли;\r\nКонецЦикла;\r\n//рекомендуемый способ с сортировкой по дате\r\nЗапрос = Новый Запрос;\r\nЗапрос.Текст =\r\n""ВЫБРАТЬ\r\n|   Ссылка\r\n|ИЗ\r\n|   Документ.ПриходнаяНакладная\r\n|ГДЕ\r\n|   Дата >= &Дата\r\n|\r\n|УПОРЯДОЧИТЬ ПО\r\n|   Дата"";\r\n\r\nЗапрос.УстановитьПараметр(""Дата"", Дата(2017, 1, 1));\r\nЭлементы = Запрос.Выполнить().Выбрать();\r\nПока Элементы.Следующий() Цикл\r\n    Сообщить(Элементы.Ссылка);\r\nКонецЦикла;"'
3459  12    RBRACE               '}'
3460  0     RBRACE               '}'
3460  1     T__0                 ','
3461  0     LBRACE               '{'
3461  1     T__1                 '0'
3461  2     T__0                 ','
3462  0     LBRACE               '{'
3462  1     STRING               '"Поиск документов"'
3462  19    T__0                 ','
3462  20    T__1                 '0'
3462  21    T__0                 ','
3462  22    T__1                 '0'
3462  23    T__0                 ','
3462  24    STRING               '""'
3462  26    T__0                 ','
3462  27    STRING               '"Док = Документы.ПриходнаяНакладная;\r\n//поиск по номеру документа\r\nНакл = Док.НайтиПоНомеру(1);\r\n //Если элемент найден\r\nЕсли (Накл <> Док.ПустаяСсылка()) Тогда\r\n    Сообщить(Накл);\r\nКонецЕсли;\r\n //поиск по реквизиту\r\nНакл = Док.НайтиПоРеквизиту(""Склад"", Справочники.Склады.Основной);\r\n //Если элемент найден\r\nЕсли (Не Накл.Пустая()) Тогда\r\n    Сообщить(Накл);\r\nКонецЕсли;\r\n\r\n //поиск запросом по дате и складу\r\nЗапрос = Новый Запрос;\r\nЗапрос.Текст =\r\n\r\n    ""ВЫБРАТЬ\r\n    |   Ссылка\r\n    |ИЗ\r\n    |   Документ.ПриходнаяНакладная\r\n    |ГДЕ\r\n    |   Дата МЕЖДУ &С И &По\r\n    |   И Склад = &Склад"";\r\n\r\nЗапрос.УстановитьПараметр(""С"", '20170401');\r\nЗапрос.УстановитьПараметр(""По"", '20170630');\r\nЗапрос.УстановитьПараметр(""Склад"", Справочники.Склады.Основной);\r\nВыборка = Запрос.Выполнить().Выбрать();\r\nПока Выборка.Следующий() Цикл\r\n    Сообщить(Выборка.Ссылка);\r\nКонецЦикла;"'
3494  12    RBRACE               '}'
3495  0     RBRACE               '}'
3495  1     T__0                 ','
3496  0     LBRACE               '{'
3496  1     T__1                 '0'
3496  2     T__0                 ','
3497  0     LBRACE               '{'
3497  1     STRING               '"Поиск по документу основанию"'
3497  31    T__0                 ','
3497  32    T__1                 '0'
3497  33    T__0                 ','
3497  34    T__1                 '0'
3497  35    T__0                 ','
3497  36    STRING               '""'
3497  38    T__0                 ','
3497  39    STRING               '"Запрос = Новый Запрос;\r\nЗапрос.Текст =\r\n    ""ВЫБРАТЬ\r\n    |   Ссылка\r\n    |ИЗ\r\n    |   Документ.СчетФактура\r\n    |ГДЕ\r\n    |   ДокументОснование = &Основание"";\r\n Запрос.УстановитьПараметр(""Основание"",\r\n Документы.ПриходнаяНакладная.НайтиПоНомеру(5));\r\n Выборка = Запрос.Выполнить().Выбрать();\r\nЕсли Выборка.Следующий() Тогда\r\n    Сообщить(Выборка.Ссылка);\r\nКонецЕсли;"'
3510  11    RBRACE               '}'
3511  0     RBRACE               '}'
3511  1     T__0                 ','
3512  0     LBRACE               '{'
3512  1     T__1                 '0'
3512  2     T__0                 ','
3513  0     LBRACE               '{'
3513  1     STRING               '"Проведение документов"'
3513  24    T__0                 ','
3513  25    T__1                 '0'
3513  26    T__0                 ','
3513  27    T__1                 '0'
3513  28    T__0                 ','
3513  29    STRING               '""'
3513  31    T__0                 ','
3513  32    STRING               '"Документ = Документы.ПриходнаяНакладная.СоздатьДокумент();\r\nДокумент.Дата = ТекущаяДата();\r\n//провести\r\nДокумент.Записать(РежимЗаписиДокумента.Проведение);\r\n//отменить проведение\r\nДокумент.Записать(РежимЗаписиДокумента.ОтменаПроведения);\r\nПроверка состояния\r\nДок = Документы.ПриходнаяНакладная;\r\n//находим нужный документ\r\nНакл = Док.НайтиПоНомеру(6);\r\nЕсли Накл.Проведен Тогда\r\n    Сообщить(""Документ проведен"");\r\nИначеЕсли Накл.ПометкаУдаления Тогда\r\n    Сообщить(""Документ удален"");\r\nИначе\r\n    Сообщить(""Документ записан"");\r\nКонецЕсли"'
3529  10    RBRACE               '}'
3530  0     RBRACE               '}'
3530  1     T__0                 ','
3531  0     LBRACE               '{'
3531  1     T__1                 '0'
3531  2     T__0                 ','
3532  0     LBRACE               '{'
3532  1     STRING               '"Создание документов"'
3532  22    T__0                 ','
3532  23    T__1                 '0'
3532  24    T__0                 ','
3532  25    T__1                 '0'
3532  26    T__0                 ','
3532  27    STRING               '""'
3532  29    T__0                 ','
3532  30    STRING               '"Документ = Документы.ПриходнаяНакладная.СоздатьДокумент();\r\nДокумент.Дата = ТекущаяДата();\r\nСтрока = Документ.Материалы.Добавить();\r\nСтрока.Материал = Справочники.Номенклатура.НайтиПоНаименованию(""Шланг"");\r\nСтрока.Количество = 2;\r\nСтрока.Цена = 230;\r\nДокумент.Записать();"'
3538  21    RBRACE               '}'
3539  0     RBRACE               '}'
3539  1     T__0                 ','
3540  0     LBRACE               '{'
3540  1     T__1                 '0'
3540  2     T__0                 ','
3541  0     LBRACE               '{'
3541  1     STRING               '"Удаление документа"'
3541  21    T__0                 ','
3541  22    T__1                 '0'
3541  23    T__0                 ','
3541  24    T__1                 '0'
3541  25    T__0                 ','
3541  26    STRING               '""'
3541  28    T__0                 ','
3541  29    STRING               '"Док = Документы.ПриходнаяНакладная;\r\nНакл = Док.НайтиПоНомеру(1);\r\nЕсли (Накл <> Док.ПустаяСсылка()) Тогда\r\n    //Документ помечается на удаление\r\n    Накл.ПолучитьОбъект().УстановитьПометкуУдаления(Истина);\r\n    //Документ полностью удаляется из БД\r\n    //без проверки ссылочной целостности\r\n    Накл.ПолучитьОбъект().Удалить();\r\nКонецЕсли;"'
3549  11    RBRACE               '}'
3550  0     RBRACE               '}'
3550  1     T__0                 ','
3551  0     LBRACE               '{'
3551  1     T__1                 '0'
3551  2     T__0                 ','
3552  0     LBRACE               '{'
3552  1     STRING               '"Форма выбора с отбором"'
3552  25    T__0                 ','
3552  26    T__1                 '0'
3552  27    T__0                 ','
3552  28    T__1                 '0'
3552  29    T__0                 ','
3552  30    STRING               '""'
3552  32    T__0                 ','
3552  33    STRING               '"&НаКлиенте\r\nПроцедура ОткрытьФормуВыбораСОтбором()\r\n    //Отображаем только документы\r\n    //со складом ""Основной""\r\n    Отбор = Новый Структура;\r\n    Отбор.Вставить(""Склад"",\r\n        ОсновнойСклад());\r\n    ПараметрыФормы = Новый Структура;\r\n    ПараметрыФормы.Вставить(""Отбор"", Отбор);\r\n    ОткрытьФорму(\r\n        ""Документ.ПриходнаяНакладная.ФормаВыбора"",\r\n        ПараметрыФормы);\r\nКонецПроцедуры\r\n\r\n&НаСервере\r\nФункция ОсновнойСклад()\r\n    Возврат Справочники.Склады.Основной;\r\nКонецФункции"'
3569  13    RBRACE               '}'
3570  0     RBRACE               '}'
3570  1     T__0                 ','
3571  0     LBRACE               '{'
3571  1     INT                  '4'
3571  2     T__0                 ','
3572  0     LBRACE               '{'
3572  1     STRING               '"Табличная часть"'
3572  18    T__0                 ','
3572  19    T__2                 '1'
3572  20    T__0                 ','
3572  21    T__1                 '0'
3572  22    T__0                 ','
3572  23    STRING               '""'
3572  25    T__0                 ','
3572  26    STRING               '""'
3572  28    RBRACE               '}'
3572  29    T__0                 ','
3573  0     LBRACE               '{'
3573  1     T__1                 '0'
3573  2     T__0                 ','
3574  0     LBRACE               '{'
3574  1     STRING               '"Добовление строки"'
3574  20    T__0                 ','
3574  21    T__1                 '0'
3574  22    T__0                 ','
3574  23    T__1                 '0'
3574  24    T__0                 ','
3574  25    STRING               '""'
3574  27    T__0                 ','
3574  28    STRING               '"Добовление строки\r\n//Находим нужный документ\r\nДок = Документы.ПриходнаяНакладная;\r\nНакл = Док.НайтиПоНомеру(Номер);\r\nЕсли (Накл <> Док.ПустаяСсылка()) Тогда\r\n    //Получаем объект для редактирования\r\n    Объект = Накл.ПолучитьОбъект();\r\n    //Заполняем табличную часть\r\n    Строка = Объект.Материалы.Добавить();\r\n    Материал = Справочники.Номенклатура.НайтиПоКоду(""000000007"");\r\n    Строка.Материал = Материал;\r\n    Строка.Количество = 5;\r\n    Строка.Цена = 450;\r\n    //Записываем изменения\r\n    Объект.Записать();\r\nКонецЕсли;"'
3589  11    RBRACE               '}'
3590  0     RBRACE               '}'
3590  1     T__0                 ','
3591  0     LBRACE               '{'
3591  1     T__1                 '0'
3591  2     T__0                 ','
3592  0     LBRACE               '{'
3592  1     STRING               '"Очистка таблицы"'
3592  18    T__0                 ','
3592  19    T__1                 '0'
3592  20    T__0                 ','
3592  21    T__1                 '0'
3592  22    T__0                 ','
3592  23    STRING               '""'
3592  25    T__0                 ','
3592  26    STRING               '"//Находим нужный документ\r\nДок = Документы.ПриходнаяНакладная;\r\nНакл = Док.НайтиПоНомеру(Номер);\r\n//Получаем объект для редактирования\r\nОбъект = Накл.ПолучитьОбъект();\r\n//Очищаем табличную часть\r\nОбъект.Материалы.Очистить();    \r\n//Записываем изменения\r\nОбъект.Записать();"'
3600  19    RBRACE               '}'
3601  0     RBRACE               '}'
3601  1     T__0                 ','
3602  0     LBRACE               '{'
3602  1     T__1                 '0'
3602  2     T__0                 ','
3603  0     LBRACE               '{'
3603  1     STRING               '"Перебор строк"'
3603  16    T__0                 ','
3603  17    T__1                 '0'
3603  18    T__0                 ','
3603  19    T__1                 '0'
3603  20    T__0                 ','
3603  21    STRING               '""'
3603  23    T__0                 ','
3603  24    STRING               '"Док = Документы.ПриходнаяНакладная;\r\nНакл = Док.НайтиПоНомеру(6);\r\nДля Каждого Строка Из Накл.Материалы Цикл\r\n    Сообщить(Строка.Материал);\r\nКонецЦикла;\r\nПоиск строки\r\n//Находим нужный документ\r\nДок = Документы.ПриходнаяНакладная;\r\nНакл = Док.НайтиПоНомеру(Номер);\r\nЕсли (Накл <> Док.ПустаяСсылка()) Тогда\r\n    Брус = Справочники.Номенклатура.НайтиПоКоду(""000000007"");\r\n    //Поиск строки с брусом в поле Материал\r\n    Строка = Накл.Материалы.Найти(Брус, ""Материал"");\r\n    //Если нашли, то выводим цену\r\n    Если ЗначениеЗаполнено(Строка) Тогда\r\n        Сообщить(Строка.Цена);\r\n    КонецЕсли;\r\nКонецЕсли;"'
3620  11    RBRACE               '}'
3621  0     RBRACE               '}'
3621  1     T__0                 ','
3622  0     LBRACE               '{'
3622  1     T__1                 '0'
3622  2     T__0                 ','
3623  0     LBRACE               '{'
3623  1     STRING               '"Удаление строки"'
3623  18    T__0                 ','
3623  19    T__1                 '0'
3623  20    T__0                 ','
3623  21    T__1                 '0'
3623  22    T__0                 ','
3623  23    STRING               '""'
3623  25    T__0                 ','
3623  26    STRING               '"//Находим нужный документ\r\nДок = Документы.ПриходнаяНакладная;\r\nНакл = Док.НайтиПоНомеру(Номер);\r\nЕсли (Накл <> Док.ПустаяСсылка()) Тогда\r\n    //Получаем объект для редактирования\r\n    Объект = Накл.ПолучитьОбъект();\r\n    Брус = Справочники.Номенклатура.НайтиПоКоду(""000000007"");\r\n    //Поиск строки с брусом в поле Материал\r\n    Строка = Объект.Материалы.Найти(Брус, ""Материал"");\r\n    Если ЗначениеЗаполнено(Строка) Тогда\r\n        //Если нашли, то удаляем\r\n        Сообщить(""Удаляем строку №"" + Строка.НомерСтроки);\r\n        Объект.Материалы.Удалить(Строка.НомерСтроки);\r\n        //Записываем изменения\r\n        Объект.Записать();\r\n    КонецЕсли;\r\nКонецЕсли;    "'
3639  15    RBRACE               '}'
3640  0     RBRACE               '}'
3641  0     RBRACE               '}'
3641  1     T__0                 ','
3642  0     LBRACE               '{'
3642  1     T__1                 '0'
3642  2     T__0                 ','
3643  0     LBRACE               '{'
3643  1     STRING               '"Провести документ"'
3643  20    T__0                 ','
3643  21    T__1                 '0'
3643  22    T__0                 ','
3643  23    T__1                 '0'
3643  24    T__0                 ','
3643  25    STRING               '""'
3643  27    T__0                 ','
3643  28    STRING               '"//1.\r\nЗапрос = Новый Запрос;\r\nЗапрос.Текст = ""\r\n	|ВЫБРАТЬ\r\n	|ПЕРВЫЕ 1\r\n	|	РеализацияТоваровУслуг.Ссылка КАК Ссылка\r\n	|ИЗ\r\n	|	Документ.РеализацияТоваровУслуг КАК РеализацияТоваровУслуг\r\n	|ГДЕ\r\n	|	РеализацияТоваровУслуг.Проведен = ложь\r\n	|	И (ВЫРАЗИТЬ(РеализацияТоваровУслуг.Комментарий КАК СТРОКА(10))) = """"Тест""""\r\n	|"";\r\n\r\nРезультат = Запрос.Выполнить().Выбрать();\r\n\r\nесли Результат.Следующий() тогда\r\n	сообщить(""Проводим реализацию №"" + Результат.Ссылка.Номер + "" от "" + Результат.Ссылка.Дата);\r\n	РеализацияТоваровУслугОбъект = Результат.Ссылка.ПолучитьОбъект();\r\n	попытка\r\n		РеализацияТоваровУслугОбъект.Записать(РежимЗаписиДокумента.Проведение);\r\n		сообщить(""Успешно проведена"");\r\n	исключение\r\n		сообщить(""Не хватает товаров"");\r\n	конецпопытки\r\nиначе\r\n	сообщить(""Не найден документ"");\r\nконецесли;\r\n\r\n//2.\r\nДок=Документы.ОприходованиеТоваров;\r\nДокСсылка=Док.НайтиПоНомеру(""00000000009"",Дата(""20120101""));\r\nЕсли НЕ(ДокСсылка=Док.ПустаяСсылка()) Тогда\r\n	ДокОб=ДокСсылка.ПолучитьОбъект();\r\n	ДокОб.Записать(РежимЗаписиДокумента.Проведение);\r\nКонецЕсли;\r\n"'
3678  1     RBRACE               '}'
3679  0     RBRACE               '}'
3679  1     T__0                 ','
3680  0     LBRACE               '{'
3680  1     T__1                 '0'
3680  2     T__0                 ','
3681  0     LBRACE               '{'
3681  1     STRING               '"Примеры использования объектов"'
3681  33    T__0                 ','
3681  34    T__1                 '0'
3681  35    T__0                 ','
3681  36    T__1                 '0'
3681  37    T__0                 ','
3681  38    STRING               '""'
3681  40    T__0                 ','
3681  41    STRING               '"1.  // Глобальный контекст\r\n  // Документы\r\n// Пример: вывести все типы ссылок на элементы справочников, существующие в конфигурации.\r\nМассив = Документы.ТипВсеСсылки().Типы();\r\nДля Каждого ОчереднойТип из Массив Цикл \r\n  Сообщить(ОчереднойТип);\r\nКонецЦикла;\r\n\r\n2.  //объект ДокументыМенеджер\r\n  // .<имя документа>\r\n  // [<имя документа>]\r\n  // Для Каждого … Из … Цикл … КонецЦикла;\r\n// Пример: получить макет для печати документа ""Оказание услуги"".\r\nМакет = Документы[""ОказаниеУслуги""].ПолучитьМакет(""Печать"");\r\n// Пример: получить ссылку на каждый из документов, существующих в конфигурации.\r\nДля Каждого ОчереднойДокумент Из Документы Цикл\r\n  Ссылка = ОчереднойДокумент.ПолучитьСсылку();\r\n …\r\nКонецЦикла;\r\n\r\n3.   // объект ДокументМенеджер.<Имя документа>\r\n  // НайтиПоНомеру()\r\n  // НайтиПоРеквизиту()\r\n  // ПустаяСсылка()\r\n// Пример: Проверить, проведен ли документ ПриходнаяНакладная с номером 3.\r\nЕсли Документы.ПриходнаяНакладная.НайтиПоНомеру(3).Проведен Тогда\r\n  Сообщить(""Документ с номером 3 проведен"");\r\nКонецЕсли;\r\n// Пример: Проверить, что во всех документах ПриходнаяНакладная заполнен реквизит Склад.\r\nПустаяСсылкаСклада = Справочники.Склады.ПустаяСсылка();\r\nЕсли Не Документы.ПриходнаяНакладная.НайтиПоРеквизиту(\r\n            ""Склад"", ПустаяСсылкаСклада).Пустая() Тогда \r\n  Сообщить(""Есть документы, у которых не заполнен реквизит Склад"");\r\nКонецЕсли;\r\n\r\n4.   // объект ДокументМенеджер.<Имя документа>\r\n   // Выбрать()\r\n// Пример: Выбрать все документы ПриходнаяНакладная за текущий месяц.\r\nВыборка = Документы.ПриходнаяНакладная.Выбрать(НачалоМесяца(\r\n            ТекущаяДата()), КонецМесяца(ТекущаяДата()));\r\nПока Выборка.Следующий() Цикл \r\n  Сообщить(Выборка);\r\nКонецЦикла;\r\n\r\n5.   // объект ДокументМенеджер.<Имя документа>\r\n   // СоздатьДокумент()\r\n// Пример: Создать новый документ ПриходнаяНакладная.\r\nНовыйДокумент = Документы.ПриходнаяНакладная.СоздатьДокумент();\r\nНовыйДокумент.Дата = ТекущаяДата();\r\nНовыйДокумент.Склад = Справочники.Склады.Основной;\r\n// Заполнить табличную часть Материалы\r\nНоваяСтрокаТабличнойЧасти = НовыйДокумент.Материалы.Добавить();\r\nНоваяСтрокаТабличнойЧасти.Материал = Справочники.Номенклатура.НайтиПоКоду(6);\r\nНоваяСтрокаТабличнойЧасти.Количество = 10;\r\nНоваяСтрокаТабличнойЧасти.Цена = 22.5;\r\nНоваяСтрокаТабличнойЧасти.Сумма = 225;\r\nНовыйДокумент.Записать();\r\n\r\n6.   // объект ДокументОбъект.<Имя документа>, объект ДокументСсылка.<Имя документа>\r\n    // Ссылка\r\n// Пример: в модуле объекта вызвать процедуру проверки заполнения реквизитов документа.\r\nЕсли Не ПроверитьЗаполнениеРеквизитов(ЭтотОбъект.Ссылка) Тогда\r\n  Сообщить(""Реквизиты документа не заполнены!"");\r\nКонецЕсли;\r\n\r\n7.   // объект ДокументСсылка.<Имя документа>, объект ДокументОбъект.<Имя документа>\r\n  // ПолучитьОбъект()\r\n  // Скопировать()\r\n// Пример: пометить документ на удаление.\r\nНенужныйДокумент = Документы.ОказаниеУслуги.НайтиПоНомеру(13).ПолучитьОбъект();\r\nНенужныйДокумент.УстановитьПометкуУдаления(Истина);\r\n\r\n8.   // объект ДокументВыборка.<Имя документа>\r\n  // Ссылка\r\n// Сформировать список ссылок на все документы ""ПриходнаяНакладная"" за текущий месяц.\r\nСписокНакладных = Новый СписокЗначений;\r\nВыборка = Документы.ПриходнаяНакладная.Выбрать(НачалоМесяца(ТекущаяДата()),\r\n КонецМесяца(ТекущаяДата()));\r\nПока Выборка.Следующий() Цикл \r\n  СписокНакладных.Добавить(Выборка.Ссылка);\r\nКонецЦикла;\r\n\r\n9.   // объект ДокументВыборка.<Имя документа>\r\n   // ПолучитьОбъект()\r\n// Пример: удалить все документы ""ПриходнаяНакладная"".\r\nВыборка = Документы.ПриходнаяНакладная.Выбрать();\r\nПока Выборка.Следующий() Цикл \r\n  Выборка.ПолучитьОбъект().Удалить();\r\nКонецЦикла;\r\n"'
3770  1     RBRACE               '}'
3771  0     RBRACE               '}'
3771  1     T__0                 ','
3772  0     LBRACE               '{'
3772  1     T__1                 '0'
3772  2     T__0                 ','
3773  0     LBRACE               '{'
3773  1     STRING               '"проверить проведен ли документ"'
3773  33    T__0                 ','
3773  34    T__1                 '0'
3773  35    T__0                 ','
3773  36    T__1                 '0'
3773  37    T__0                 ','
3773  38    STRING               '""'
3773  40    T__0                 ','
3773  41    STRING               '"Если Объект.Проведен Тогда\r\n    Сообщить(""Проведен"")\r\nИначе\r\n    Сообщить(""Не проведен"")\r\nКонецЕсли;"'
3777  11    RBRACE               '}'
3778  0     RBRACE               '}'
3779  0     RBRACE               '}'
3779  1     T__0                 ','
3780  0     LBRACE               '{'
3780  1     INT                  '3'
3780  2     T__0                 ','
3781  0     LBRACE               '{'
3781  1     STRING               '"Константы"'
3781  12    T__0                 ','
3781  13    T__2                 '1'
3781  14    T__0                 ','
3781  15    T__1                 '0'
3781  16    T__0                 ','
3781  17    STRING               '""'
3781  19    T__0                 ','
3781  20    STRING               '""'
3781  22    RBRACE               '}'
3781  23    T__0                 ','
3782  0     LBRACE               '{'
3782  1     T__1                 '0'
3782  2     T__0                 ','
3783  0     LBRACE               '{'
3783  1     STRING               '"Перебор всех констант"'
3783  24    T__0                 ','
3783  25    T__1                 '0'
3783  26    T__0                 ','
3783  27    T__1                 '0'
3783  28    T__0                 ','
3783  29    STRING               '""'
3783  31    T__0                 ','
3783  32    STRING               '"Для Каждого Константа Из Константы Цикл\r\n    Сообщить(Строка(Константа) + "" = "" + Константа.Получить());\r\nКонецЦикла;\r\nПолучение значения\r\n//первый способ\r\nПи = Константы.ЧислоПи.Получить();\r\nСообщить(Пи);\r\n\r\n//второй способ\r\nМенеджер = Константы.ЧислоПи.СоздатьМенеджерЗначения();\r\nМенеджер.Прочитать();\r\nПи = Менеджер.Значение;\r\nСообщить(Пи);\r\n\r\n//третий способ\r\nСписок = ""ЧислоПи, Экспонента"";\r\nНабор = Константы.СоздатьНабор(Список);\r\nНабор.Прочитать();\r\nСообщить(Набор.ЧислоПи);"'
3801  25    RBRACE               '}'
3802  0     RBRACE               '}'
3802  1     T__0                 ','
3803  0     LBRACE               '{'
3803  1     T__1                 '0'
3803  2     T__0                 ','
3804  0     LBRACE               '{'
3804  1     STRING               '"Установка значений"'
3804  21    T__0                 ','
3804  22    T__1                 '0'
3804  23    T__0                 ','
3804  24    T__1                 '0'
3804  25    T__0                 ','
3804  26    STRING               '""'
3804  28    T__0                 ','
3804  29    STRING               '"Пи = 3.145;\r\n\r\n//первый способ\r\nКонстанты.ЧислоПи.Установить(Пи);\r\n\r\n//второй способ\r\nМенеджер = Константы.ЧислоПи.СоздатьМенеджерЗначения();\r\nМенеджер.Значение = Пи;\r\nМенеджер.Записать();\r\n\r\n//третий способ\r\nСписок = ""ЧислоПи, Экспонента"";\r\nНабор = Константы.СоздатьНабор(Список);\r\nНабор.ЧислоПи = Пи;\r\nНабор.Записать();"'
3818  18    RBRACE               '}'
3819  0     RBRACE               '}'
3819  1     T__0                 ','
3820  0     LBRACE               '{'
3820  1     T__1                 '0'
3820  2     T__0                 ','
3821  0     LBRACE               '{'
3821  1     STRING               '"Примеры использования объектов"'
3821  33    T__0                 ','
3821  34    T__1                 '0'
3821  35    T__0                 ','
3821  36    T__1                 '0'
3821  37    T__0                 ','
3821  38    STRING               '""'
3821  40    T__0                 ','
3821  41    STRING               '"//1.   Глобальный контекст\r\n  // Константы\r\n// Пример: установить значение константы.\r\nКонстанты.Бухгалтер.Установить(""Сидоров Петр Иванович"");\r\n\r\n//2.   объект КонстантыМенеджер\r\n  // .<имя константы>\r\n  // [<имя константы>]\r\n  // Для Каждого … Из … Цикл … КонецЦикла;\r\n// Пример: прочитать значение константы.\r\nРезультат = Константы.ПрефиксНумерации.Получить();\r\nСообщить(""Значение константы ПрефиксНумерации = ""+ Результат);\r\n// Пример: установить значение константы ПрефиксНумерации равным ЦБ.\r\nКонстанты[""ПрефиксНумерации""].Установить(""ЦБ"");\r\nСообщить(""Новое значение = "" + Константы[""ПрефиксНумерации""].Получить());\r\n// Пример: очистить значения всех констант.\r\nДля Каждого ОчереднаяКонстанта Из Константы Цикл\r\n  ОчереднаяКонстанта.Установить(Неопределено);\r\nКонецЦикла;\r\n\r\n//3.   объект КонстантыМенеджер\r\n  // СоздатьНабор()\r\n// Пример: установить новые значения нескольких констант.\r\nНабор = Константы.СоздатьНабор(""Руководитель, Бухгалтер"");\r\nНабор.Руководитель = ""Николаев Денис Павлович"";\r\nНабор.Бухгалтер = ""Николаева Людмила Сергеевна"";\r\nНабор.Записать();\r\n\r\n//4.   объект КонстантаМенеджер.<имя>\r\n  // СоздатьМенеджерЗначения()\r\n// Пример: вывести значения всех констант, существующих в конфигурации.\r\nДля Каждого ОчереднаяКонстанта Из Константы Цикл\r\n  ИмяКонст = ОчереднаяКонстанта.СоздатьМенеджерЗначения().Метаданные().Имя;\r\n  ЗначениеКонст = ОчереднаяКонстанта.Получить();\r\n  Сообщить(""Константа ""+ ИмяКонст +"" = ""+ ЗначениеКонст);\r\nКонецЦикла;\r\n"'
3857  1     RBRACE               '}'
3858  0     RBRACE               '}'
3859  0     RBRACE               '}'
3859  1     T__0                 ','
3860  0     LBRACE               '{'
3860  1     INT                  '5'
3860  2     T__0                 ','
3861  0     LBRACE               '{'
3861  1     STRING               '"Перечисления"'
3861  15    T__0                 ','
3861  16    T__2                 '1'
3861  17    T__0                 ','
3861  18    T__1                 '0'
3861  19    T__0                 ','
3861  20    STRING               '""'
3861  22    T__0                 ','
3861  23    STRING               '""'
3861  25    RBRACE               '}'
3861  26    T__0                 ','
3862  0     LBRACE               '{'
3862  1     T__1                 '0'
3862  2     T__0                 ','
3863  0     LBRACE               '{'
3863  1     STRING               '"Отображение формы выбора"'
3863  27    T__0                 ','
3863  28    T__1                 '0'
3863  29    T__0                 ','
3863  30    T__1                 '0'
3863  31    T__0                 ','
3863  32    STRING               '""'
3863  34    T__0                 ','
3863  35    STRING               '"&НаКлиенте\r\nПроцедура ОтобразитьФормуВыбора() Экспорт\r\n    Оповещение = Новый ОписаниеОповещения(""ВыборЗавершен"",ЭтотОбъект);\r\n    ОткрытьФорму(""Перечисление.СтороныСвета.ФормаВыбора"",,,,,, Оповещение);\r\nКонецПроцедуры\r\n\r\n&НаКлиенте\r\nПроцедура ВыборЗавершен(Результат, Параметры) Экспорт\r\n\r\n    Если ЗначениеЗаполнено(Результат) Тогда\r\n        Сообщить(Результат);\r\n    Иначе\r\n        Сообщить(""Значение не выбрано"");\r\n    КонецЕсли;\r\nКонецПроцедуры"'
3877  15    RBRACE               '}'
3878  0     RBRACE               '}'
3878  1     T__0                 ','
3879  0     LBRACE               '{'
3879  1     T__1                 '0'
3879  2     T__0                 ','
3880  0     LBRACE               '{'
3880  1     STRING               '"Перебор элементов"'
3880  20    T__0                 ','
3880  21    T__1                 '0'
3880  22    T__0                 ','
3880  23    T__1                 '0'
3880  24    T__0                 ','
3880  25    STRING               '""'
3880  27    T__0                 ','
3880  28    STRING               '"&НаСервере\r\nСтороныСвета = Перечисления.СтороныСвета;\r\n\r\n//способ первый\r\nДля Каждого Элемент из СтороныСвета Цикл\r\n    Сообщить(Элемент);\r\nКонецЦикла;\r\n\r\n//способ второй\r\nДля Н = 0 По СтороныСвета.Количество() - 1 Цикл\r\n    Сообщить(СтороныСвета.Получить(Н));\r\nКонецЦикла;"'
3891  12    RBRACE               '}'
3892  0     RBRACE               '}'
3892  1     T__0                 ','
3893  0     LBRACE               '{'
3893  1     T__1                 '0'
3893  2     T__0                 ','
3894  0     LBRACE               '{'
3894  1     STRING               '"Получение элемента"'
3894  21    T__0                 ','
3894  22    T__1                 '0'
3894  23    T__0                 ','
3894  24    T__1                 '0'
3894  25    T__0                 ','
3894  26    STRING               '""'
3894  28    T__0                 ','
3894  29    STRING               '"СтороныСвета = Перечисления.СтороныСвета;\r\nСевер = СтороныСвета.Север;"'
3895  28    RBRACE               '}'
3896  0     RBRACE               '}'
3896  1     T__0                 ','
3897  0     LBRACE               '{'
3897  1     T__1                 '0'
3897  2     T__0                 ','
3898  0     LBRACE               '{'
3898  1     STRING               '"Примеры использования объектов"'
3898  33    T__0                 ','
3898  34    T__1                 '0'
3898  35    T__0                 ','
3898  36    T__1                 '0'
3898  37    T__0                 ','
3898  38    STRING               '""'
3898  40    T__0                 ','
3898  41    STRING               '"1.  // Глобальный контекст\r\n  // Перечисления\r\n// Пример: получить значение перечисления по индексу.\r\nПеречисления.ВидыНоменклатуры.Получить(0);\r\n2.  // объект ПеречисленияМенеджер\r\n  // .<имя перечисления>\r\n  // [<имя перечисления>]\r\n  // Для Каждого … Из … Цикл … КонецЦикла;\r\n// Пример: получить количество значений перечисления\r\nПеречисления.[""ВидыНоменклатуры""].Количество();\r\n3.   // объект ПеречислениеМенеджер.<Имя>\r\n  // .<имя значения перечисления>\r\n  // [<имя значения перечисления>]\r\n  // [<индекс элемента коллекции>]\r\n  // Для Каждого … Из … Цикл … КонецЦикла;\r\n  // ПустаяСсылка()\r\n// Пример: получить пустую ссылку на значение перечисления.\r\n…\r\nПустаяСсылкаПеречисления = Перечисления.ВидыНоменклатуры.ПустаяСсылка();\r\nЕсли ТекущаяНоменклатура.ВидНоменклатуры = ПустаяСсылкаПеречисления Тогда\r\n  // Предложить заполнение вида номенклатуры.\r\n …\r\nКонецЕсли;\r\n"'
3921  1     RBRACE               '}'
3922  0     RBRACE               '}'
3922  1     T__0                 ','
3923  0     LBRACE               '{'
3923  1     T__1                 '0'
3923  2     T__0                 ','
3924  0     LBRACE               '{'
3924  1     STRING               '"Обращение к перечислению на клиенте в управляемых формах"'
3924  59    T__0                 ','
3924  60    T__1                 '0'
3924  61    T__0                 ','
3924  62    T__1                 '0'
3924  63    T__0                 ','
3924  64    STRING               '""'
3924  66    T__0                 ','
3924  67    STRING               '"ПредопределенноеЗначение(""Справочник.СвойстваОбъектов.КассаООК"")\r\n&НаКлиенте\r\nПроцедура УстановитьВидимостьКредитныхУсловий()\r\n\r\n	Если Объект.ВариантДоговора = ПредопределенноеЗначение(""Перечисление.ВариантыДоговоров.Комплектация"") Тогда\r\n		//…\r\n	КонецЕсли;\r\n	\r\nКонецПроцедуры"'
3932  15    RBRACE               '}'
3933  0     RBRACE               '}'
3934  0     RBRACE               '}'
3934  1     T__0                 ','
3935  0     LBRACE               '{'
3935  1     INT                  '8'
3935  2     T__0                 ','
3936  0     LBRACE               '{'
3936  1     STRING               '"План счетов"'
3936  14    T__0                 ','
3936  15    T__2                 '1'
3936  16    T__0                 ','
3936  17    T__1                 '0'
3936  18    T__0                 ','
3936  19    STRING               '""'
3936  21    T__0                 ','
3936  22    STRING               '""'
3936  24    RBRACE               '}'
3936  25    T__0                 ','
3937  0     LBRACE               '{'
3937  1     T__1                 '0'
3937  2     T__0                 ','
3938  0     LBRACE               '{'
3938  1     STRING               '"Контекстный поиск счётов"'
3938  27    T__0                 ','
3938  28    T__1                 '0'
3938  29    T__0                 ','
3938  30    T__1                 '0'
3938  31    T__0                 ','
3938  32    STRING               '""'
3938  34    T__0                 ','
3938  35    STRING               '"Запрос = Новый Запрос;\r\nЗапрос.Текст =\r\n    ""ВЫБРАТЬ\r\n    |   Основной.Ссылка\r\n    |ИЗ\r\n    |   ПланСчетов.Основной КАК Основной\r\n    |ГДЕ\r\n    |   Основной.Наименование ПОДОБНО &Наименование"";\r\n\r\nЗапрос.УстановитьПараметр(""Наименование"", ""%Товар%"");\r\nВыборка = Запрос.Выполнить().Выбрать();\r\nПока Выборка.Следующий() Цикл\r\n    Сообщить(Выборка.Ссылка);\r\nКонецЦикла;"'
3951  12    RBRACE               '}'
3952  0     RBRACE               '}'
3952  1     T__0                 ','
3953  0     LBRACE               '{'
3953  1     T__1                 '0'
3953  2     T__0                 ','
3954  0     LBRACE               '{'
3954  1     STRING               '"Перебор всех счётов"'
3954  22    T__0                 ','
3954  23    T__1                 '0'
3954  24    T__0                 ','
3954  25    T__1                 '0'
3954  26    T__0                 ','
3954  27    STRING               '""'
3954  29    T__0                 ','
3954  30    STRING               '"Элементы = ПланыСчетов.Основной.Выбрать();\r\nПока Элементы.Следующий() Цикл\r\n    Сообщить(Элементы.Наименование);\r\nКонецЦикла;"'
3957  12    RBRACE               '}'
3958  0     RBRACE               '}'
3958  1     T__0                 ','
3959  0     LBRACE               '{'
3959  1     T__1                 '0'
3959  2     T__0                 ','
3960  0     LBRACE               '{'
3960  1     STRING               '"Перебор подчинённых счётов"'
3960  29    T__0                 ','
3960  30    T__1                 '0'
3960  31    T__0                 ','
3960  32    T__1                 '0'
3960  33    T__0                 ','
3960  34    STRING               '""'
3960  36    T__0                 ','
3960  37    STRING               '"Перебор подчинённых счётов\r\n//Перечисляем все подсчета счета Товары\r\nТовары = ПланыСчетов.Основной.Товары;\r\nЭлементы = ПланыСчетов.Основной.Выбрать(Товары);\r\nПока Элементы.Следующий() Цикл\r\n    Сообщить(Элементы.Наименование);\r\nКонецЦикла;"'
3966  12    RBRACE               '}'
3967  0     RBRACE               '}'
3967  1     T__0                 ','
3968  0     LBRACE               '{'
3968  1     T__1                 '0'
3968  2     T__0                 ','
3969  0     LBRACE               '{'
3969  1     STRING               '"Перебор субконто счётов"'
3969  26    T__0                 ','
3969  27    T__1                 '0'
3969  28    T__0                 ','
3969  29    T__1                 '0'
3969  30    T__0                 ','
3969  31    STRING               '""'
3969  33    T__0                 ','
3969  34    STRING               '"//Перечисляем все субконто счета Товары\r\nТовары = ПланыСчетов.Основной.Товары;\r\nДля Каждого Субконто из Товары.ВидыСубконто Цикл\r\n    Сообщить(Субконто.ВидСубконто.Наименование);\r\nКонецЦикла;"'
3973  12    RBRACE               '}'
3974  0     RBRACE               '}'
3974  1     T__0                 ','
3975  0     LBRACE               '{'
3975  1     T__1                 '0'
3975  2     T__0                 ','
3976  0     LBRACE               '{'
3976  1     STRING               '"Поиск счета"'
3976  14    T__0                 ','
3976  15    T__1                 '0'
3976  16    T__0                 ','
3976  17    T__1                 '0'
3976  18    T__0                 ','
3976  19    STRING               '""'
3976  21    T__0                 ','
3976  22    STRING               '"//поиск по коду\r\nСчет = ПланыСчетов.Основной.НайтиПоКоду(""41"");\r\n//Если счет найден\r\nЕсли (Счет <> ПланыСчетов.Основной.ПустаяСсылка()) Тогда\r\n    Сообщить(Счет.Наименование);\r\nКонецЕсли;\r\n//поиск по наименованию\r\nСчет = ПланыСчетов.Основной.НайтиПоНаименованию(""Капитал"");\r\nЕсли (Не Счет.Пустая()) Тогда\r\n    Сообщить(Счет.Код);\r\nКонецЕсли;"'
3986  11    RBRACE               '}'
3987  0     RBRACE               '}'
3987  1     T__0                 ','
3988  0     LBRACE               '{'
3988  1     T__1                 '0'
3988  2     T__0                 ','
3989  0     LBRACE               '{'
3989  1     STRING               '"Предопределенные счета"'
3989  25    T__0                 ','
3989  26    T__1                 '0'
3989  27    T__0                 ','
3989  28    T__1                 '0'
3989  29    T__0                 ','
3989  30    STRING               '""'
3989  32    T__0                 ','
3989  33    STRING               '"//Счет ""Товары"" задан в конфигурации\r\n//на форме предопределенных элементов\r\n//плана счетов Основной\r\nТовары =  ПланыСчетов.Основной.Товары;\r\nСообщить(Товары);"'
3993  18    RBRACE               '}'
3994  0     RBRACE               '}'
3994  1     T__0                 ','
3995  0     LBRACE               '{'
3995  1     T__1                 '0'
3995  2     T__0                 ','
3996  0     LBRACE               '{'
3996  1     STRING               '"Создание счета"'
3996  17    T__0                 ','
3996  18    T__1                 '0'
3996  19    T__0                 ','
3996  20    T__1                 '0'
3996  21    T__0                 ','
3996  22    STRING               '""'
3996  24    T__0                 ','
3996  25    STRING               '"\r\nСчет = ПланыСчетов.Основной.СоздатьСчет();\r\nСчет.Родитель = ПланыСчетов.Основной.Товары;\r\nСчет.Код = ""41.05"";\r\nСчет.Наименование = ""Товары (совместная деятельность)"";\r\nСчет.Вид = ВидСчета.Активный;\r\nСчет.Забалансовый = Истина;\r\nСубконто1 = Счет.ВидыСубконто.Добавить();\r\nСУбконто1.ВидСубконто =\r\nПланыВидовХарактеристик.ВидыСубконто.Материалы;\r\nСУбконто1.Количественный = Истина;\r\nСчет.Записать();"'
4007  17    RBRACE               '}'
4008  0     RBRACE               '}'
4008  1     T__0                 ','
4009  0     LBRACE               '{'
4009  1     T__1                 '0'
4009  2     T__0                 ','
4010  0     LBRACE               '{'
4010  1     STRING               '"Удаление счета"'
4010  17    T__0                 ','
4010  18    T__1                 '0'
4010  19    T__0                 ','
4010  20    T__1                 '0'
4010  21    T__0                 ','
4010  22    STRING               '""'
4010  24    T__0                 ','
4010  25    STRING               '"Счет = ПланыСчетов.Основной.НайтиПоКоду(""41.05"");\r\nЕсли (Не Счет.Пустая()) Тогда\r\n    //Счет помечается на удаление\r\n    Счет.ПолучитьОбъект().УстановитьПометкуУдаления(Истина);\r\n    //Счет полностью удаляется из БД\r\n    //без проверки ссылочной целостности   \r\n    Счет.ПолучитьОбъект().Удалить();\r\nКонецЕсли;"'
4017  11    RBRACE               '}'
4018  0     RBRACE               '}'
4019  0     RBRACE               '}'
4019  1     T__0                 ','
4020  0     LBRACE               '{'
4020  1     INT                  '8'
4020  2     T__0                 ','
4021  0     LBRACE               '{'
4021  1     STRING               '"Планы видов расчета"'
4021  22    T__0                 ','
4021  23    T__2                 '1'
4021  24    T__0                 ','
4021  25    T__1                 '0'
4021  26    T__0                 ','
4021  27    STRING               '""'
4021  29    T__0                 ','
4021  30    STRING               '""'
4021  32    RBRACE               '}'
4021  33    T__0                 ','
4022  0     LBRACE               '{'
4022  1     T__1                 '0'
4022  2     T__0                 ','
4023  0     LBRACE               '{'
4023  1     STRING               '"Добавление вида расчета"'
4023  26    T__0                 ','
4023  27    T__1                 '0'
4023  28    T__0                 ','
4023  29    T__1                 '0'
4023  30    T__0                 ','
4023  31    STRING               '""'
4023  33    T__0                 ','
4023  34    STRING               '"ВидРасчета = ПланыВидовРасчета.ОсновныеНачисления.СоздатьВидРасчета();\r\nВидРасчета.Код = ""Районный"";\r\nВидРасчета.Наименование = ""Районный коэффициент"";\r\nВидРасчета.Процент = 80;\r\n\r\nБазовый = ВидРасчета.БазовыеВидыРасчета.Добавить();\r\nБазовый.ВидРасчета = ПланыВидовРасчета.ОсновныеНачисления.Оклад;\r\n\r\nВедущий = ВидРасчета.ВедущиеВидыРасчета.Добавить();\r\nВедущий.ВидРасчета = ПланыВидовРасчета.ОсновныеНачисления.Оклад;\r\nВедущий = ВидРасчета.ВедущиеВидыРасчета.Добавить();\r\nВедущий.ВидРасчета = ПланыВидовРасчета.ОсновныеНачисления.Невыход;\r\n\r\nВидРасчета.Записать();"'
4036  23    RBRACE               '}'
4037  0     RBRACE               '}'
4037  1     T__0                 ','
4038  0     LBRACE               '{'
4038  1     T__1                 '0'
4038  2     T__0                 ','
4039  0     LBRACE               '{'
4039  1     STRING               '"Использование транзакции"'
4039  27    T__0                 ','
4039  28    T__1                 '0'
4039  29    T__0                 ','
4039  30    T__1                 '0'
4039  31    T__0                 ','
4039  32    STRING               '""'
4039  34    T__0                 ','
4039  35    STRING               '"\r\nЗапрос = Новый Запрос;\r\nЗапрос.Текст =\r\n""ВЫБРАТЬ\r\n|   ОсновныеНачисления.Ссылка\r\n|ИЗ\r\n|   ПланВидовРасчета.ОсновныеНачисления КАК ОсновныеНачисления\r\n|ГДЕ\r\n|   ОсновныеНачисления.Наименование ПОДОБНО &ЧастьНаименования"";\r\n\r\nЗапрос.УстановитьПараметр(""ЧастьНаименования"", ""%премия%"");\r\nВыборка = Запрос.Выполнить().Выбрать();\r\n\r\n//увеличиваем размер премий на 10%\r\n//в случае любой ошибки, изменения \r\n//по всех элементам будут отменены  \r\nНачатьТранзакцию();\r\nПока Выборка.Следующий() Цикл\r\nПремия = Выборка.Ссылка.ПолучитьОбъект();\r\nПремия.Процент = Премия.Процент * 1.1;\r\nПремия.Записать();\r\nКонецЦикла;\r\nЗафиксироватьТранзакцию();"'
4061  27    RBRACE               '}'
4062  0     RBRACE               '}'
4062  1     T__0                 ','
4063  0     LBRACE               '{'
4063  1     T__1                 '0'
4063  2     T__0                 ','
4064  0     LBRACE               '{'
4064  1     STRING               '"Контекстный поиск"'
4064  20    T__0                 ','
4064  21    T__1                 '0'
4064  22    T__0                 ','
4064  23    T__1                 '0'
4064  24    T__0                 ','
4064  25    STRING               '""'
4064  27    T__0                 ','
4064  28    STRING               '"Запрос = Новый Запрос;\r\nЗапрос.Текст =\r\n""ВЫБРАТЬ\r\n|   ОсновныеНачисления.Наименование\r\n|ИЗ\r\n|   ПланВидовРасчета.ОсновныеНачисления КАК ОсновныеНачисления\r\n|ГДЕ\r\n|   ОсновныеНачисления.Наименование ПОДОБНО &ЧастьНаименования"";\r\n\r\nЗапрос.УстановитьПараметр(""ЧастьНаименования"", ""%премия%"");\r\n\r\nВыборка = Запрос.Выполнить().Выбрать();\r\n\r\nПока Выборка.Следующий() Цикл\r\nСообщить(Выборка.Наименование);\r\nКонецЦикла;"'
4079  12    RBRACE               '}'
4080  0     RBRACE               '}'
4080  1     T__0                 ','
4081  0     LBRACE               '{'
4081  1     T__1                 '0'
4081  2     T__0                 ','
4082  0     LBRACE               '{'
4082  1     STRING               '"Перебор всех элементов"'
4082  25    T__0                 ','
4082  26    T__1                 '0'
4082  27    T__0                 ','
4082  28    T__1                 '0'
4082  29    T__0                 ','
4082  30    STRING               '""'
4082  32    T__0                 ','
4082  33    STRING               '"Процедура ПереборЭлементов() Экспорт\r\n    Элементы = ПланыВидовРасчета.ОсновныеНачисления.Выбрать();\r\n    Пока Элементы.Следующий() Цикл\r\n       Сообщить(Элементы.Наименование);\r\n    КонецЦикла;\r\nКонецПроцедуры"'
4087  15    RBRACE               '}'
4088  0     RBRACE               '}'
4088  1     T__0                 ','
4089  0     LBRACE               '{'
4089  1     T__1                 '0'
4089  2     T__0                 ','
4090  0     LBRACE               '{'
4090  1     STRING               '"Поиск вида расчёта"'
4090  21    T__0                 ','
4090  22    T__1                 '0'
4090  23    T__0                 ','
4090  24    T__1                 '0'
4090  25    T__0                 ','
4090  26    STRING               '""'
4090  28    T__0                 ','
4090  29    STRING               '"План = ПланыВидовРасчета.ОсновныеНачисления;\r\n//поиск по коду\r\nРайонный = План.НайтиПоКоду(""Районный"");\r\n//Если элемент найден\r\nЕсли (Районный <> План.ПустаяСсылка()) Тогда\r\nСообщить(Районный.Наименование);\r\nКонецЕсли;\r\n\r\n//поиск по наименованию\r\nРайонный = План.НайтиПоНаименованию(""Районный коэфф"", Ложь);\r\nЕсли (Не Районный.Пустая()) Тогда\r\nСообщить(Районный.Наименование);\r\nКонецЕсли;\r\n\r\n//поиск по реквизиту\r\nРайонный = План.НайтиПоРеквизиту(""Процент"", 80);\r\nЕсли (Не Районный.Пустая()) Тогда\r\nСообщить(Районный.Наименование);\r\nКонецЕсли;"'
4108  11    RBRACE               '}'
4109  0     RBRACE               '}'
4109  1     T__0                 ','
4110  0     LBRACE               '{'
4110  1     T__1                 '0'
4110  2     T__0                 ','
4111  0     LBRACE               '{'
4111  1     STRING               '"Поиск зависимых элементов"'
4111  28    T__0                 ','
4111  29    T__1                 '0'
4111  30    T__0                 ','
4111  31    T__1                 '0'
4111  32    T__0                 ','
4111  33    STRING               '""'
4111  35    T__0                 ','
4111  36    STRING               '"//Поиск видов расчетов, зависящих от элемента ""Невыход""\r\nЗапрос = Новый Запрос;\r\nЗапрос.Текст =\r\n""ВЫБРАТЬ\r\n|   ОсновныеНачисления.Наименование\r\n|ИЗ\r\n|   ПланВидовРасчета.ОсновныеНачисления КАК ОсновныеНачисления\r\n|ГДЕ\r\n|   ОсновныеНачисления.БазовыеВидыРасчета.ВидРасчета = &ВидРасчета\r\n|   ИЛИ ОсновныеНачисления.ВедущиеВидыРасчета.ВидРасчета = &ВидРасчета\r\n| ИЛИ ОсновныеНачисления.ВытесняющиеВидыРасчета.ВидРасчета = &ВидРасчета"";\r\n\r\nЗапрос.УстановитьПараметр(""ВидРасчета"",\r\nПланыВидовРасчета.ОсновныеНачисления.Невыход);\r\n\r\nВыборка = Запрос.Выполнить().Выбрать();\r\n\r\nПока Выборка.Следующий() Цикл\r\nСообщить(Выборка.Наименование);\r\nКонецЦикла;\r\n\r\n"'
4132  1     RBRACE               '}'
4133  0     RBRACE               '}'
4133  1     T__0                 ','
4134  0     LBRACE               '{'
4134  1     T__1                 '0'
4134  2     T__0                 ','
4135  0     LBRACE               '{'
4135  1     STRING               '"Предопределенные элементы"'
4135  28    T__0                 ','
4135  29    T__1                 '0'
4135  30    T__0                 ','
4135  31    T__1                 '0'
4135  32    T__0                 ','
4135  33    STRING               '""'
4135  35    T__0                 ','
4135  36    STRING               '" //вид расчета ""Оклад"" задан в конфигурации\r\n//на форме предопределенных элементов\r\n//плана видов расчетов ""ОсновныеНачисления""\r\nОклад = ПланыВидовРасчета.ОсновныеНачисления.Оклад;\r\nСообщить(Оклад);"'
4139  17    RBRACE               '}'
4140  0     RBRACE               '}'
4140  1     T__0                 ','
4141  0     LBRACE               '{'
4141  1     T__1                 '0'
4141  2     T__0                 ','
4142  0     LBRACE               '{'
4142  1     STRING               '"Удаление видов расчётов"'
4142  26    T__0                 ','
4142  27    T__1                 '0'
4142  28    T__0                 ','
4142  29    T__1                 '0'
4142  30    T__0                 ','
4142  31    STRING               '""'
4142  33    T__0                 ','
4142  34    STRING               '"План = ПланыВидовРасчета.ОсновныеНачисления;\r\nВидРасчета = План.НайтиПоКоду(""Районный"");\r\n\r\nЕсли (ВидРасчета <> План.ПустаяСсылка()) Тогда\r\n//помечается на удаление\r\nВидРасчета.ПолучитьОбъект().УстановитьПометкуУдаления(Истина);\r\n\r\n//полностью удаляется из БД\r\n//без проверки ссылочной целостности\r\nВидРасчета.ПолучитьОбъект().Удалить();\r\nКонецЕсли;\r\n\r\n"'
4154  1     RBRACE               '}'
4155  0     RBRACE               '}'
4156  0     RBRACE               '}'
4156  1     T__0                 ','
4157  0     LBRACE               '{'
4157  1     INT                  '7'
4157  2     T__0                 ','
4158  0     LBRACE               '{'
4158  1     STRING               '"Планы видов характеристик"'
4158  28    T__0                 ','
4158  29    T__2                 '1'
4158  30    T__0                 ','
4158  31    T__1                 '0'
4158  32    T__0                 ','
4158  33    STRING               '""'
4158  35    T__0                 ','
4158  36    STRING               '""'
4158  38    RBRACE               '}'
4158  39    T__0                 ','
4159  0     LBRACE               '{'
4159  1     T__1                 '0'
4159  2     T__0                 ','
4160  0     LBRACE               '{'
4160  1     STRING               '"Перенести элемент в группу"'
4160  29    T__0                 ','
4160  30    T__1                 '0'
4160  31    T__0                 ','
4160  32    T__1                 '0'
4160  33    T__0                 ','
4160  34    STRING               '""'
4160  36    T__0                 ','
4160  37    STRING               '"Характ = ПланыВидовХарактеристик.СвойстваНоменклатуры;\r\n\r\nЭлемент = Характ.НайтиПоНаименованию(""Вес"");\r\nГруппа = Характ.НайтиПоНаименованию(""Числовые"");\r\n\r\nЕсли (Не Элемент.Пустая()) И Группа.ЭтоГруппа Тогда\r\n    Объект = Элемент.ПолучитьОбъект();\r\n    Объект.Родитель = Группа.Ссылка;\r\n    Объект.Записать();\r\nКонецЕсли\r\n"'
4170  1     RBRACE               '}'
4171  0     RBRACE               '}'
4171  1     T__0                 ','
4172  0     LBRACE               '{'
4172  1     T__1                 '0'
4172  2     T__0                 ','
4173  0     LBRACE               '{'
4173  1     STRING               '"Поиск элементов"'
4173  18    T__0                 ','
4173  19    T__1                 '0'
4173  20    T__0                 ','
4173  21    T__1                 '0'
4173  22    T__0                 ','
4173  23    STRING               '""'
4173  25    T__0                 ','
4173  26    STRING               '"Характ = ПланыВидовХарактеристик.СвойстваНоменклатуры;\r\n//поиск по коду\r\nЭлемент = Характ.НайтиПоКоду(""000000002"");\r\n//Если элемент найден\r\nЕсли (Элемент <> Характ.ПустаяСсылка()) Тогда\r\n    //Получаем объект для изменения и\r\n    //меняем наименование\r\n    Объект = Элемент.ПолучитьОбъект();    \r\n    Объект.Наименование = Объект.Наименование + "" №1"";\r\n    Объект.Записать();\r\n    Сообщить(Элемент.Наименование);\r\nКонецЕсли;\r\n\r\n//поиск по наименованию\r\nЭлемент = Характ.НайтиПоНаименованию(""Вес"");\r\nЕсли (Не Элемент.Пустая()) Тогда\r\n    Сообщить(Элемент.Наименование);\r\nКонецЕсли;"'
4190  11    RBRACE               '}'
4191  0     RBRACE               '}'
4191  1     T__0                 ','
4192  0     LBRACE               '{'
4192  1     T__1                 '0'
4192  2     T__0                 ','
4193  0     LBRACE               '{'
4193  1     STRING               '"предопределенные элементы"'
4193  28    T__0                 ','
4193  29    T__1                 '0'
4193  30    T__0                 ','
4193  31    T__1                 '0'
4193  32    T__0                 ','
4193  33    STRING               '""'
4193  35    T__0                 ','
4193  36    STRING               '"//""Материал"" задан в конфигурации\r\n//на форме предопределенных элементов\r\n//плана вида характеристик СвойстваНоменклатуры\r\nМатериал = ПланыВидовХарактеристик.СвойстваНоменклатуры.Материал;\r\nСообщить(Материал);"'
4197  20    RBRACE               '}'
4198  0     RBRACE               '}'
4198  1     T__0                 ','
4199  0     LBRACE               '{'
4199  1     T__1                 '0'
4199  2     T__0                 ','
4200  0     LBRACE               '{'
4200  1     STRING               '"создание группы"'
4200  18    T__0                 ','
4200  19    T__1                 '0'
4200  20    T__0                 ','
4200  21    T__1                 '0'
4200  22    T__0                 ','
4200  23    STRING               '""'
4200  25    T__0                 ','
4200  26    STRING               '"Характ = ПланыВидовХарактеристик.СвойстваНоменклатуры.СоздатьГруппу();\r\nХаракт.Наименование = ""Числовые"";\r\nХаракт.Записать();"'
4202  19    RBRACE               '}'
4203  0     RBRACE               '}'
4203  1     T__0                 ','
4204  0     LBRACE               '{'
4204  1     T__1                 '0'
4204  2     T__0                 ','
4205  0     LBRACE               '{'
4205  1     STRING               '"создание элемента"'
4205  20    T__0                 ','
4205  21    T__1                 '0'
4205  22    T__0                 ','
4205  23    T__1                 '0'
4205  24    T__0                 ','
4205  25    STRING               '""'
4205  27    T__0                 ','
4205  28    STRING               '"Характ = ПланыВидовХарактеристик.СвойстваНоменклатуры.СоздатьЭлемент();\r\nХаракт.Наименование = ""Вес"";\r\nХаракт.ТипЗначения = Новый ОписаниеТипов(""Число"");\r\nХаракт.Записать();\r\n\r\nХаракт = ПланыВидовХарактеристик.СвойстваНоменклатуры.СоздатьЭлемент();\r\nХаракт.Наименование = ""Ответственный"";\r\nХаракт.ТипЗначения = Новый ОписаниеТипов(""СправочникСсылка.Сотрудники"");;\r\nХаракт.Записать();\r\n"'
4214  1     RBRACE               '}'
4215  0     RBRACE               '}'
4215  1     T__0                 ','
4216  0     LBRACE               '{'
4216  1     T__1                 '0'
4216  2     T__0                 ','
4217  0     LBRACE               '{'
4217  1     STRING               '"Удалить группу"'
4217  17    T__0                 ','
4217  18    T__1                 '0'
4217  19    T__0                 ','
4217  20    T__1                 '0'
4217  21    T__0                 ','
4217  22    STRING               '""'
4217  24    T__0                 ','
4217  25    STRING               '"Характ = ПланыВидовХарактеристик.СвойстваНоменклатуры;\r\nГруппа = Характ.НайтиПоНаименованию(""Числовые"");\r\n\r\nЕсли (Не Группа.Пустая()) Тогда\r\n    //Группа помечается на удаление\r\n    Группа.ПолучитьОбъект().УстановитьПометкуУдаления(Истина);\r\n\r\n    //Группа и вложенные в нее элементы полностью удаляются     \r\n    //из БД без проверки ссылочной целостности\r\n    Группа.ПолучитьОбъект().Удалить();\r\nКонецЕсли;"'
4227  11    RBRACE               '}'
4228  0     RBRACE               '}'
4228  1     T__0                 ','
4229  0     LBRACE               '{'
4229  1     T__1                 '0'
4229  2     T__0                 ','
4230  0     LBRACE               '{'
4230  1     STRING               '"Удаление элемента"'
4230  20    T__0                 ','
4230  21    T__1                 '0'
4230  22    T__0                 ','
4230  23    T__1                 '0'
4230  24    T__0                 ','
4230  25    STRING               '""'
4230  27    T__0                 ','
4230  28    STRING               '"Характ = ПланыВидовХарактеристик.СвойстваНоменклатуры;\r\nЭлемент = Характ.НайтиПоКоду(""000000001"");\r\n\r\nЕсли (Не Элемент.Пустая()) Тогда\r\n    //Объект помечается на удаление\r\n    Элемент.ПолучитьОбъект().УстановитьПометкуУдаления(Истина);\r\n\r\n    //Объект полностью удаляется из БД\r\n    //без проверки ссылочной целостности\r\n    Элемент.ПолучитьОбъект().Удалить();\r\nКонецЕсли;"'
4240  11    RBRACE               '}'
4241  0     RBRACE               '}'
4242  0     RBRACE               '}'
4242  1     T__0                 ','
4243  0     LBRACE               '{'
4243  1     INT                  '9'
4243  2     T__0                 ','
4244  0     LBRACE               '{'
4244  1     STRING               '"Регистры бухгалтерии"'
4244  23    T__0                 ','
4244  24    T__2                 '1'
4244  25    T__0                 ','
4244  26    T__1                 '0'
4244  27    T__0                 ','
4244  28    STRING               '""'
4244  30    T__0                 ','
4244  31    STRING               '""'
4244  33    RBRACE               '}'
4244  34    T__0                 ','
4245  0     LBRACE               '{'
4245  1     T__1                 '0'
4245  2     T__0                 ','
4246  0     LBRACE               '{'
4246  1     STRING               '"Выбор записей за период"'
4246  26    T__0                 ','
4246  27    T__1                 '0'
4246  28    T__0                 ','
4246  29    T__1                 '0'
4246  30    T__0                 ','
4246  31    STRING               '""'
4246  33    T__0                 ','
4246  34    STRING               '"//Выбор всех записей за первое полугодие 2017 г.\r\n//где счет дебета = Товары\r\nЗапрос = Новый Запрос;\r\nЗапрос.Текст =\r\n    ""ВЫБРАТЬ\r\n    |   Управленческий.СчетДт,\r\n    |   Управленческий.СчетКт,\r\n    |   Управленческий.Сумма\r\n    |ИЗ\r\n    |   РегистрБухгалтерии.Управленческий КАК Управленческий\r\n    |ГДЕ\r\n    |   Управленческий.Период МЕЖДУ &НачПериод И &КонПериод\r\n    |   И Управленческий.СчетДт = &СчетДт"";\r\n\r\nЗапрос.УстановитьПараметр(""НачПериод"", '20170101');\r\nЗапрос.УстановитьПараметр(""КонПериод"", '20170630235959');\r\nЗапрос.УстановитьПараметр(""СчетДт"", ПланыСчетов.Основной.Товары);\r\n\r\nВыборка = Запрос.Выполнить().Выбрать();\r\n\r\nПока Выборка.Следующий() Цикл\r\n    Сообщить("""" + Выборка.СчетДт + "" / "" +\r\n        Выборка.СчетКт + "" : "" + Выборка.Сумма);\r\nКонецЦикла;\r\n"'
4270  1     RBRACE               '}'
4271  0     RBRACE               '}'
4271  1     T__0                 ','
4272  0     LBRACE               '{'
4272  1     T__1                 '0'
4272  2     T__0                 ','
4273  0     LBRACE               '{'
4273  1     STRING               '"Выбор записей по документу"'
4273  29    T__0                 ','
4273  30    T__1                 '0'
4273  31    T__0                 ','
4273  32    T__1                 '0'
4273  33    T__0                 ','
4273  34    STRING               '""'
4273  36    T__0                 ','
4273  37    STRING               '"Номер = ""000000001"";\r\nДокумент = Документы.ПриходнаяНакладная.НайтиПоНомеру(Номер);\r\n\r\n//первый вариант\r\nНабор = РегистрыБухгалтерии.Управленческий.СоздатьНаборЗаписей();\r\nНабор.Отбор.Регистратор.Установить(Документ.Ссылка);\r\nНабор.Прочитать();\r\n\r\nДля н = 0 По Набор.Количество() - 1 Цикл\r\n    Сообщить("""" + Набор[н].СчетДт + "" / "" +\r\n    Набор[н].СчетКт + "" : "" + Набор[н].Сумма);\r\nКонецЦикла;\r\n\r\n//второй вариант\r\nОбъект = Документ.ПолучитьОбъект();\r\nНабор = Объект.Движения.Управленческий;\r\nНабор.Прочитать();\r\n\r\nДля н = 0 По Набор.Количество() - 1 Цикл\r\n    Сообщить("""" + Набор[н].СчетДт + "" / "" +\r\n        Набор[н].СчетКт + "" : "" + Набор[н].Сумма);\r\nКонецЦикла;\r\n\r\n//третий вариант\r\nЗапрос = Новый Запрос;\r\nЗапрос.Текст =\r\n    ""ВЫБРАТЬ\r\n    |   Управленческий.СчетДт,\r\n    |   Управленческий.СчетКт,\r\n    |   Управленческий.Сумма\r\n    |ИЗ\r\n    |   РегистрБухгалтерии.Управленческий КАК Управленческий\r\n    |ГДЕ\r\n    |   Управленческий.Регистратор = &Регистратор"";\r\n\r\nЗапрос.УстановитьПараметр(""Регистратор"", Документ);\r\nВыборка = Запрос.Выполнить().Выбрать();\r\n\r\nПока Выборка.Следующий() Цикл\r\n    Сообщить("""" + Выборка.СчетДт + "" / "" +\r\n        Выборка.СчетКт + "" : "" + Выборка.Сумма);\r\nКонецЦикла;"'
4314  12    RBRACE               '}'
4315  0     RBRACE               '}'
4315  1     T__0                 ','
4316  0     LBRACE               '{'
4316  1     T__1                 '0'
4316  2     T__0                 ','
4317  0     LBRACE               '{'
4317  1     STRING               '"Выбор остатков"'
4317  17    T__0                 ','
4317  18    T__1                 '0'
4317  19    T__0                 ','
4317  20    T__1                 '0'
4317  21    T__0                 ','
4317  22    STRING               '""'
4317  24    T__0                 ','
4317  25    STRING               '"//выбор остатков по счету Товары на 01.04.2017\r\n//с группировкой по первому субконто\r\nЗапрос = Новый Запрос;\r\nЗапрос.Текст =\r\n    ""ВЫБРАТЬ\r\n    |   УправленческийОстатки.Субконто1 Как Номенклатура,\r\n    |   УправленческийОстатки.СуммаОстаток Как Сумма\r\n    |ИЗ\r\n    |   РегистрБухгалтерии.Управленческий.Остатки(\r\n    |       &НаДату\r\n    |) КАК УправленческийОстатки\r\n    |ГДЕ\r\n    |   УправленческийОстатки.Счет = &Счет"";\r\n\r\nЗапрос.УстановитьПараметр(""НаДату"", '20170401');\r\nЗапрос.УстановитьПараметр(""Счет"", ПланыСчетов.Основной.Товары);\r\nВыборка = Запрос.Выполнить().Выбрать();\r\n\r\nПока Выборка.Следующий() Цикл\r\n    Сообщить("" "" + Выборка.Номенклатура + "": "" + Выборка.Сумма);\r\nКонецЦикла;"'
4337  12    RBRACE               '}'
4338  0     RBRACE               '}'
4338  1     T__0                 ','
4339  0     LBRACE               '{'
4339  1     T__1                 '0'
4339  2     T__0                 ','
4340  0     LBRACE               '{'
4340  1     STRING               '"Добавление записи"'
4340  20    T__0                 ','
4340  21    T__1                 '0'
4340  22    T__0                 ','
4340  23    T__1                 '0'
4340  24    T__0                 ','
4340  25    STRING               '""'
4340  27    T__0                 ','
4340  28    STRING               '"//Обновляем данные регистра Управленческий по\r\n//документу ПриходнаяНакладная №000000001\r\nДокумент = Документы.ПриходнаяНакладная.НайтиПоНомеру(""000000001"");\r\n\r\nНабор = РегистрыБухгалтерии.Управленческий.СоздатьНаборЗаписей();\r\nНабор.Отбор.Регистратор.Установить(Документ.Ссылка);\r\n\r\nДля Каждого Строка Из Документ.Материалы Цикл\r\n    Запись = Набор.Добавить();\r\n    Запись.СчетДт = ПланыСчетов.Основной.Товары;\r\n    Запись.СчетКт = ПланыСчетов.Основной.РасчетыСПоставщиками;\r\n    Запись.Период = Документ.Дата;\r\n    Запись.Сумма = Строка.Сумма;\r\n    Запись.КоличествоДт = Строка.Количество;\r\n    Запись.СубконтоДт[ПланыВидовХарактеристик.ВидыСубконто.Материалы] =\r\n        Строка.Материал;\r\nКонецЦикла;\r\n	\r\nНабор.Записать(Истина);	"'
4358  25    RBRACE               '}'
4359  0     RBRACE               '}'
4359  1     T__0                 ','
4360  0     LBRACE               '{'
4360  1     T__1                 '0'
4360  2     T__0                 ','
4361  0     LBRACE               '{'
4361  1     STRING               '"Заполнение в обработке проведения"'
4361  36    T__0                 ','
4361  37    T__1                 '0'
4361  38    T__0                 ','
4361  39    T__1                 '0'
4361  40    T__0                 ','
4361  41    STRING               '""'
4361  43    T__0                 ','
4361  44    STRING               '"//модуль документа ""Приходная накладная""\r\nПроцедура ОбработкаПроведения(Отказ, Режим)\r\n\r\n    Движения.Управленческий.Записывать = Истина;\r\n\r\n    Для Каждого ТекСтрокаМатериалы Из Материалы Цикл\r\n        Движение = Движения.Управленческий.Добавить();\r\n        Движение.СчетДт = ПланыСчетов.Основной.Товары;\r\n        Движение.СчетКт = ПланыСчетов.Основной.РасчетыСПоставщиками;\r\n        Движение.Период = Дата;\r\n        Движение.Сумма = ТекСтрокаМатериалы.Сумма;\r\n        Движение.КоличествоДт = ТекСтрокаМатериалы.Количество;\r\n        Движение.СубконтоДт[ПланыВидовХарактеристик.ВидыСубконто.Материалы] =\r\n        ТекСтрокаМатериалы.Материал;\r\n    КонецЦикла;\r\nКонецПроцедуры"'
4376  15    RBRACE               '}'
4377  0     RBRACE               '}'
4377  1     T__0                 ','
4378  0     LBRACE               '{'
4378  1     T__1                 '0'
4378  2     T__0                 ','
4379  0     LBRACE               '{'
4379  1     STRING               '"Изменение записи"'
4379  19    T__0                 ','
4379  20    T__1                 '0'
4379  21    T__0                 ','
4379  22    T__1                 '0'
4379  23    T__0                 ','
4379  24    STRING               '""'
4379  26    T__0                 ','
4379  27    STRING               '"Документ = Документы.ПриходнаяНакладная.НайтиПоНомеру(""000000001"");\r\nОбъект = Документ.ПолучитьОбъект();\r\nНабор = Объект.Движения.Управленческий;\r\nНабор.Прочитать();\r\n\r\nДля Каждого Запись Из Набор Цикл\r\n    //увеличим проводки сумму на 10%\r\n    Запись.Сумма = Запись.Сумма * 1.1;\r\nКонецЦикла;\r\n\r\nНабор.Записать(Истина);\r\n"'
4390  1     RBRACE               '}'
4391  0     RBRACE               '}'
4391  1     T__0                 ','
4392  0     LBRACE               '{'
4392  1     T__1                 '0'
4392  2     T__0                 ','
4393  0     LBRACE               '{'
4393  1     STRING               '"Очистка всего регистра"'
4393  25    T__0                 ','
4393  26    T__1                 '0'
4393  27    T__0                 ','
4393  28    T__1                 '0'
4393  29    T__0                 ','
4393  30    STRING               '""'
4393  32    T__0                 ','
4393  33    STRING               '"Запрос = Новый Запрос;\r\nЗапрос.Текст =\r\n    ""ВЫБРАТЬ РАЗЛИЧНЫЕ\r\n    |   Управленческий.Регистратор\r\n    |ИЗ\r\n    |   РегистрБухгалтерии.Управленческий КАК Управленческий"";\r\n\r\nРезультатЗапроса = Запрос.Выполнить();\r\nВыборка = РезультатЗапроса.Выбрать();\r\n\r\nНабор = РегистрыБухгалтерии.Управленческий.СоздатьНаборЗаписей();\r\n\r\n//удаляем записи по каждому регистратору\r\nПока Выборка.Следующий() Цикл\r\n    Набор.Отбор.Регистратор.Установить(Выборка.Регистратор);\r\n    Набор.Записать(Истина);\r\nКонецЦикла;\r\n"'
4410  1     RBRACE               '}'
4411  0     RBRACE               '}'
4411  1     T__0                 ','
4412  0     LBRACE               '{'
4412  1     T__1                 '0'
4412  2     T__0                 ','
4413  0     LBRACE               '{'
4413  1     STRING               '"получение оборотов"'
4413  21    T__0                 ','
4413  22    T__1                 '0'
4413  23    T__0                 ','
4413  24    T__1                 '0'
4413  25    T__0                 ','
4413  26    STRING               '""'
4413  28    T__0                 ','
4413  29    STRING               '"//обороты за первое полугодие 2017 года по счету Товары\r\nЗапрос = Новый Запрос;\r\nЗапрос.Текст =\r\n    ""ВЫБРАТЬ\r\n    |   УправленческийОборотыДтКт.СубконтоДт1 Как Номенклатура,\r\n    |   УправленческийОборотыДтКт.СуммаОборот Как Сумма\r\n    |ИЗ\r\n    |   РегистрБухгалтерии.Управленческий.ОборотыДтКт(\r\n    |       &НачПериод,\r\n    |       КОНЕЦПЕРИОДА(&КонПериод, ДЕНЬ)      \r\n    |   ) КАК УправленческийОборотыДтКт\r\n    |ГДЕ\r\n    |   УправленческийОборотыДтКт.СчетДт = &СчетДт"";\r\n\r\nЗапрос.УстановитьПараметр(""НачПериод"", '20170101');\r\nЗапрос.УстановитьПараметр(""КонПериод"", '20170630');\r\nЗапрос.УстановитьПараметр(""СчетДт"", ПланыСчетов.Основной.Товары);\r\n\r\nВыборка = Запрос.Выполнить().Выбрать();\r\n\r\nПока Выборка.Следующий() Цикл\r\n    Сообщить("" "" + Выборка.Номенклатура + "": "" + Выборка.Сумма);\r\nКонецЦикла;"'
4435  12    RBRACE               '}'
4436  0     RBRACE               '}'
4436  1     T__0                 ','
4437  0     LBRACE               '{'
4437  1     T__1                 '0'
4437  2     T__0                 ','
4438  0     LBRACE               '{'
4438  1     STRING               '"Удаление записи"'
4438  18    T__0                 ','
4438  19    T__1                 '0'
4438  20    T__0                 ','
4438  21    T__1                 '0'
4438  22    T__0                 ','
4438  23    STRING               '""'
4438  25    T__0                 ','
4438  26    STRING               '"//Удаляем записи регистра Управленческий по\r\n//документу ПриходнаяНакладная №000000001\r\nДокумент = Документы.ПриходнаяНакладная.НайтиПоНомеру(""000000001"");\r\n\r\nНабор = РегистрыБухгалтерии.Управленческий.СоздатьНаборЗаписей();\r\nНабор.Отбор.Регистратор.Установить(Документ.Ссылка);\r\nНабор.Прочитать();\r\n\r\nЕсли Набор.Количество() > 0 Тогда\r\n//Удаляем первую запись\r\nНабор.Удалить(0);\r\n//Удаляем все записи\r\nНабор.Очистить();\r\nКонецЕсли;\r\n\r\nНабор.Записать(Истина);\r\n"'
4454  1     RBRACE               '}'
4455  0     RBRACE               '}'
4456  0     RBRACE               '}'
4456  1     T__0                 ','
4457  0     LBRACE               '{'
4457  1     INT                  '8'
4457  2     T__0                 ','
4458  0     LBRACE               '{'
4458  1     STRING               '"Регистры накопления"'
4458  22    T__0                 ','
4458  23    T__2                 '1'
4458  24    T__0                 ','
4458  25    T__1                 '0'
4458  26    T__0                 ','
4458  27    STRING               '""'
4458  29    T__0                 ','
4458  30    STRING               '""'
4458  32    RBRACE               '}'
4458  33    T__0                 ','
4459  0     LBRACE               '{'
4459  1     T__1                 '0'
4459  2     T__0                 ','
4460  0     LBRACE               '{'
4460  1     STRING               '"Выбор записей за период"'
4460  26    T__0                 ','
4460  27    T__1                 '0'
4460  28    T__0                 ','
4460  29    T__1                 '0'
4460  30    T__0                 ','
4460  31    STRING               '""'
4460  33    T__0                 ','
4460  34    STRING               '"Запрос = Новый Запрос;\r\nЗапрос.Текст =\r\n""ВЫБРАТЬ\r\n|   Материал.Наименование КАК Наименование,\r\n|   Количество\r\n|ИЗ\r\n|   РегистрНакопления.ОстаткиМатериалов\r\n|ГДЕ\r\n|   Период МЕЖДУ &НачПериод И &КонПериод"";\r\n\r\nЗапрос.УстановитьПараметр(""НачПериод"", '20170101');\r\nЗапрос.УстановитьПараметр(""КонПериод"",\r\nКонецДня('20170630'));\r\nВыборка = Запрос.Выполнить().Выбрать();\r\n\r\nПока Выборка.Следующий() Цикл\r\nСообщить(Выборка.Наименование + "": "" +\r\nВыборка.Количество);\r\nКонецЦикла;"'
4478  12    RBRACE               '}'
4479  0     RBRACE               '}'
4479  1     T__0                 ','
4480  0     LBRACE               '{'
4480  1     T__1                 '0'
4480  2     T__0                 ','
4481  0     LBRACE               '{'
4481  1     STRING               '"Выбор записи по документу"'
4481  28    T__0                 ','
4481  29    T__1                 '0'
4481  30    T__0                 ','
4481  31    T__1                 '0'
4481  32    T__0                 ','
4481  33    STRING               '""'
4481  35    T__0                 ','
4481  36    STRING               '"Номер = ""000000001"";\r\nДокумент = Документы.ПриходнаяНакладная.НайтиПоНомеру(Номер);\r\n\r\n//первый вариант\r\nНабор = РегистрыНакопления.ОстаткиМатериалов.СоздатьНаборЗаписей();\r\nНабор.Отбор.Регистратор.Установить(Документ.Ссылка);\r\nНабор.Прочитать();\r\n\r\nДля н = 0 По Набор.Количество() - 1 Цикл\r\nСообщить(Набор[н].Материал.Наименование + "": "" + Набор[н].Количество);\r\nКонецЦикла;\r\n\r\n//второй вариант\r\nОбъект = Документ.ПолучитьОбъект();\r\nНабор = Объект.Движения.ОстаткиМатериалов;\r\nНабор.Прочитать();\r\n\r\nДля н = 0 По Набор.Количество() - 1 Цикл\r\nСообщить(Набор[н].Материал.Наименование + "": "" + Набор[н].Количество);\r\nКонецЦикла;\r\n\r\n//третий вариант\r\nЗапрос = Новый Запрос;\r\nЗапрос.Текст =\r\n""ВЫБРАТЬ\r\n|   ОстаткиМатериалов.Материал.Наименование КАК Наименование,       \r\n|   ОстаткиМатериалов.Количество\r\n|ИЗ\r\n|   РегистрНакопления.ОстаткиМатериалов КАК ОстаткиМатериалов\r\n|ГДЕ\r\n|   ОстаткиМатериалов.Регистратор.Номер = &Номер"";\r\n\r\nЗапрос.УстановитьПараметр(""Номер"", Номер);\r\nВыборка = Запрос.Выполнить().Выбрать();\r\n\r\nПока Выборка.Следующий() Цикл\r\nСообщить(Выборка.Наименование + "": "" + Выборка.Количество);\r\nКонецЦикла;"'
4518  12    RBRACE               '}'
4519  0     RBRACE               '}'
4519  1     T__0                 ','
4520  0     LBRACE               '{'
4520  1     T__1                 '0'
4520  2     T__0                 ','
4521  0     LBRACE               '{'
4521  1     STRING               '"Добавление записи"'
4521  20    T__0                 ','
4521  21    T__1                 '0'
4521  22    T__0                 ','
4521  23    T__1                 '0'
4521  24    T__0                 ','
4521  25    STRING               '""'
4521  27    T__0                 ','
4521  28    STRING               '"//Обновляем данные регистра ОстаткиМатериалов по\r\n//документу ОказаниеУслуг №000000001\r\nДокумент = Документы.ОказаниеУслуги.НайтиПоНомеру(""000000001"");\r\n\r\nНабор = РегистрыНакопления.ОстаткиМатериалов.СоздатьНаборЗаписей();\r\nНабор.Отбор.Регистратор.Установить(Документ.Ссылка);\r\n\r\nДля Каждого Строка Из Документ.ПереченьНоменклатуры Цикл\r\nДвижение = Набор.Добавить();\r\nДвижение.ВидДвижения = ВидДвиженияНакопления.Расход;\r\nДвижение.Материал = Строка.Номенклатура;\r\nДвижение.Количество = Строка.Количество;\r\nДвижение.Склад = Документ.Склад;\r\nДвижение.Период = Документ.Дата;\r\nКонецЦикла;\r\n\r\nНабор.Записать(Истина);\r\n\r\nЗаолнение и обработка проведения\r\n\r\n//заполняем приход материалов   \r\nДвижения.ОстаткиМатериалов.Записывать = Истина;\r\n\r\nДля Каждого ТекСтрокаМатериалы Из Материалы Цикл\r\nДвижение = Движения.ОстаткиМатериалов.Добавить();\r\nДвижение.ВидДвижения = ВидДвиженияНакопления.Приход;\r\nДвижение.Период = Дата;\r\nДвижение.Материал = ТекСтрокаМатериалы.Материал;\r\nДвижение.Склад = Склад;\r\nДвижение.Количество = ТекСтрокаМатериалы.Количество;\r\nКонецЦикла;\r\n"'
4552  1     RBRACE               '}'
4553  0     RBRACE               '}'
4553  1     T__0                 ','
4554  0     LBRACE               '{'
4554  1     T__1                 '0'
4554  2     T__0                 ','
4555  0     LBRACE               '{'
4555  1     STRING               '"Изменить запись"'
4555  18    T__0                 ','
4555  19    T__1                 '0'
4555  20    T__0                 ','
4555  21    T__1                 '0'
4555  22    T__0                 ','
4555  23    STRING               '""'
4555  25    T__0                 ','
4555  26    STRING               '"Документ = Документы.ПриходнаяНакладная.НайтиПоНомеру(""000000001"");\r\nОбъект = Документ.ПолучитьОбъект();\r\nНабор = Объект.Движения.ОстаткиМатериалов;\r\nНабор.Прочитать();\r\n\r\nДля Каждого Запись Из Набор Цикл\r\n//увеличим количество на 1\r\nЗапись.Количество = Запись.Количество + 1;\r\nКонецЦикла;\r\n\r\nНабор.Записать(Истина);\r\n\r\nОчиства всего регистра\r\n\r\nЗапрос = Новый Запрос;\r\nЗапрос.Текст =\r\n""ВЫБРАТЬ\r\n|   Различные ОстаткиМатериалов.Регистратор\r\n|ИЗ\r\n|   РегистрНакопления.ОстаткиМатериалов КАК ОстаткиМатериалов"";\r\n\r\nРезультатЗапроса = Запрос.Выполнить();\r\nВыборка = РезультатЗапроса.Выбрать();\r\n\r\nНабор = РегистрыНакопления.ОстаткиМатериалов.СоздатьНаборЗаписей();\r\n\r\nПока Выборка.Следующий() Цикл\r\nНабор.Отбор.Регистратор.Установить(Выборка.Регистратор);\r\nНабор.Записать(Истина);\r\nКонецЦикла;\r\n"'
4585  1     RBRACE               '}'
4586  0     RBRACE               '}'
4586  1     T__0                 ','
4587  0     LBRACE               '{'
4587  1     T__1                 '0'
4587  2     T__0                 ','
4588  0     LBRACE               '{'
4588  1     STRING               '"Получение оборотов"'
4588  21    T__0                 ','
4588  22    T__1                 '0'
4588  23    T__0                 ','
4588  24    T__1                 '0'
4588  25    T__0                 ','
4588  26    STRING               '""'
4588  28    T__0                 ','
4588  29    STRING               '"Запрос = Новый Запрос;\r\nЗапрос.Текст =\r\n""ВЫБРАТЬ\r\n|   Материал.Наименование КАК Наименование,\r\n|   КоличествоОборот КАК Количество\r\n|ИЗ\r\n|   РегистрНакопления.ОстаткиМатериалов.Обороты(\r\n|       &НачПериод,\r\n|       &КонПериод\r\n|   )"";\r\n\r\nЗапрос.УстановитьПараметр(""НачПериод"", '20170101');\r\nЗапрос.УстановитьПараметр(""КонПериод"",\r\nКонецДня('20170630'));\r\nВыборка = Запрос.Выполнить().Выбрать();\r\n\r\nПока Выборка.Следующий() Цикл\r\nСообщить(Выборка.Наименование +\r\n"": "" + Выборка.Количество);\r\nКонецЦикла;"'
4607  12    RBRACE               '}'
4608  0     RBRACE               '}'
4608  1     T__0                 ','
4609  0     LBRACE               '{'
4609  1     T__1                 '0'
4609  2     T__0                 ','
4610  0     LBRACE               '{'
4610  1     STRING               '"Получение остатков на дату"'
4610  29    T__0                 ','
4610  30    T__1                 '0'
4610  31    T__0                 ','
4610  32    T__1                 '0'
4610  33    T__0                 ','
4610  34    STRING               '""'
4610  36    T__0                 ','
4610  37    STRING               '"Запрос = Новый Запрос;\r\nЗапрос.Текст =\r\n    ""ВЫБРАТЬ\r\n    |   ОстаткиМатериаловОстатки.Материал,\r\n    |   ОстаткиМатериаловОстатки.КоличествоОстаток Как Количество\r\n    |ИЗ\r\n    |   РегистрНакопления.ОстаткиМатериалов.Остатки(\r\n    |       &НаДату\r\n    |) КАК ОстаткиМатериаловОстатки"";\r\n\r\nЗапрос.УстановитьПараметр(""НаДату"", '20170501');\r\nВыборка = Запрос.Выполнить().Выбрать();\r\n\r\nПока Выборка.Следующий() Цикл\r\n    Сообщить(Выборка.Материал.Наименование + "": "" + Выборка.Количество);\r\nКонецЦикла;"'
4625  12    RBRACE               '}'
4626  0     RBRACE               '}'
4626  1     T__0                 ','
4627  0     LBRACE               '{'
4627  1     T__1                 '0'
4627  2     T__0                 ','
4628  0     LBRACE               '{'
4628  1     STRING               '"Удаление записи"'
4628  18    T__0                 ','
4628  19    T__1                 '0'
4628  20    T__0                 ','
4628  21    T__1                 '0'
4628  22    T__0                 ','
4628  23    STRING               '""'
4628  25    T__0                 ','
4628  26    STRING               '"//Удаляем записи регистра ОстаткиМатериалов по\r\n//документу ПриходнаяНакладная №000000001\r\nДокумент = Документы.ПриходнаяНакладная.НайтиПоНомеру(""000000001"");\r\n\r\nНабор = РегистрыНакопления.ОстаткиМатериалов.СоздатьНаборЗаписей();\r\nНабор.Отбор.Регистратор.Установить(Документ.Ссылка);\r\nНабор.Прочитать();\r\n\r\nЕсли Набор.Количество() > 0 Тогда\r\n//Удаляем первую запись\r\nНабор.Удалить(0);\r\n//Удаляем все записи\r\nНабор.Очистить();\r\nКонецЕсли;\r\n\r\nНабор.Записать(Истина);\r\n"'
4644  1     RBRACE               '}'
4645  0     RBRACE               '}'
4645  1     T__0                 ','
4646  0     LBRACE               '{'
4646  1     T__1                 '0'
4646  2     T__0                 ','
4647  0     LBRACE               '{'
4647  1     STRING               '"Примеры использования объектов \r"'
4647  35    T__0                 ','
4647  36    T__1                 '0'
4647  37    T__0                 ','
4647  38    T__1                 '0'
4647  39    T__0                 ','
4647  40    STRING               '""'
4647  42    T__0                 ','
4647  43    STRING               '"1.  // Глобальный контекст\r\n  // РегистрыНакопления\r\n// Пример: выполнить полный пересчет итогов регистра ""ОстаткиМатериалов"".\r\nРегистрыНакопления.ОстаткиМатериалов.ПересчитатьИтоги();\r\n2.  // объект РегистрыНакопленияМенеджер\r\n   // .<имя регистра накопления>\r\n  // [<имя регистра накопления>]\r\n  // Для Каждого … Из … Цикл … КонецЦикла;\r\n// Пример: рассчитать итоги регистра ""ОстаткиМатериалов"" на указанную дату.\r\nИмяРегистра = ОстаткиМатериалов;\r\nРегистрыНакопления[ИмяРегистра].УстановитьПериодРассчитанныхИтогов(УказаннаяДата);\r\n3.  // объект РегистрНакопленияМенеджер.<имя>\r\n   // СоздатьКлючЗаписи()\r\n// Пример: активизировать требуемую строку списка регистра накопления.\r\nСтруктураКлючевыхПолей = Новый Структура;\r\nСтруктураКлючевыхПолей.Вставить(\r\n      ""Регистратор"", Документы.ПриходнаяНакладная.НайтиПоНомеру(""0000002""));\r\nСтруктураКлючевыхПолей.Вставить(""НомерСтроки"", 2);\r\nЭлементы.Материалы.ТекущаяСтрока = РегистрыНакопления.ОстаткиМатериалов\r\n      Со.здатьКлючЗаписи(СтруктураКлючевыхПолей);\r\n4.  // объект РегистрНакопленияМенеджер.<имя>\r\n   // СоздатьНаборЗаписей()\r\n// Пример: получить движения документа.\r\nНужныйДокумент = Документы.ПриходнаяНакладная.НайтиПоНомеру(4);\r\nДвижения = РегистрыНакопления.ОстаткиМатериалов.СоздатьНаборЗаписей();\r\nДвижения.Отбор.Регистратор.Значение = НужныйДокумент;\r\nДвижения.Прочитать();\r\n5.  // объект РегистрНакопленияМенеджер.<имя>\r\n  // Выбрать()\r\n  // ВыбратьПоРегистратору()\r\n// Пример: выбрать все записи регистра ""ОстаткиМатериалов"" за текущий месяц.\r\nВыборка = РегистрыНакопления.ОстаткиМатериалов.Выбрать(\r\n      НачалоМесяца(ТекущаяДата()), КонецМесяца(ТекущаяДата()));\r\n6.  // объект РегистрНакопленияНаборЗаписей.<имя>\r\n  // [<индекс элемента коллекции>]\r\n  // Для Каждого … Из … Цикл … КонецЦикла;\r\n// Пример: получить движения документа.\r\nНужныйДокумент = Документы.ПриходнаяНакладная.НайтиПоНомеру(4);\r\nДвижения = РегистрыНакопления.ОстаткиМатериалов.СоздатьНаборЗаписей();\r\nДвижения.Отбор.Регистратор.Значение = НужныйДокумент;\r\nДвижения.Прочитать();\r\nДля Каждого ОчередноеДвижение Из Движения Цикл\r\n  // Алгоритм обработки движений\r\n   …\r\nКонецЦикла;"'
4691  12    RBRACE               '}'
4692  0     RBRACE               '}'
4693  0     RBRACE               '}'
4693  1     T__0                 ','
4694  0     LBRACE               '{'
4694  1     INT                  '8'
4694  2     T__0                 ','
4695  0     LBRACE               '{'
4695  1     STRING               '"Регистры расчета"'
4695  19    T__0                 ','
4695  20    T__2                 '1'
4695  21    T__0                 ','
4695  22    T__1                 '0'
4695  23    T__0                 ','
4695  24    STRING               '""'
4695  26    T__0                 ','
4695  27    STRING               '""'
4695  29    RBRACE               '}'
4695  30    T__0                 ','
4696  0     LBRACE               '{'
4696  1     T__1                 '0'
4696  2     T__0                 ','
4697  0     LBRACE               '{'
4697  1     STRING               '"Добавление записи"'
4697  20    T__0                 ','
4697  21    T__1                 '0'
4697  22    T__0                 ','
4697  23    T__1                 '0'
4697  24    T__0                 ','
4697  25    STRING               '""'
4697  27    T__0                 ','
4697  28    STRING               '"//Обновляем данные регистра Начисления по\r\n//документу НачисленияСотрудникам №000000001\r\nДокумент = Документы.НачисленияСотрудникам.НайтиПоНомеру(""000000001"");\r\n\r\nНабор = РегистрыРасчета.Начисления.СоздатьНаборЗаписей();\r\nНабор.Отбор.Регистратор.Установить(Документ.Ссылка);\r\n\r\nДля Каждого Строка Из Документ.Начисления Цикл\r\nЗапись = Набор.Добавить();\r\nЗапись.Сторно = Ложь;\r\nЗапись.ВидРасчета = Строка.ВидРасчета;\r\nЗапись.ПериодДействияНачало = Строка.ДатаНачала;\r\nЗапись.ПериодДействияКонец = КонецДня(Строка.ДатаОкончания);\r\nЗапись.ПериодРегистрации = Документ.Дата;\r\nЗапись.БазовыйПериодНачало = Строка.ДатаНачала;\r\nЗапись.БазовыйПериодКонец = КонецДня(Строка.ДатаОкончания);\r\nЗапись.Сотрудник = Строка.Сотрудник;\r\nЗапись.ГрафиеРаботы = Строка.ГрафикРаботы;\r\nЗапись.ИсходныеДанные = Строка.Начислено;\r\nКонецЦикла;\r\n\r\nНабор.Записать(Истина);\r\n"'
4719  1     RBRACE               '}'
4720  0     RBRACE               '}'
4720  1     T__0                 ','
4721  0     LBRACE               '{'
4721  1     T__1                 '0'
4721  2     T__0                 ','
4722  0     LBRACE               '{'
4722  1     STRING               '"Заполнение в обработке проведения "'
4722  37    T__0                 ','
4722  38    T__1                 '0'
4722  39    T__0                 ','
4722  40    T__1                 '0'
4722  41    T__0                 ','
4722  42    STRING               '""'
4722  44    T__0                 ','
4722  45    STRING               '"Процедура ОбработкаПроведения(Отказ, Режим)\r\n//модуль документа ""Начисления сотрудникам""\r\nДвижения.Начисления.Записывать = Истина;\r\n\r\nДля Каждого ТекСтрокаНачисления Из Начисления Цикл\r\nДвижение = Движения.Начисления.Добавить();\r\nДвижение.Сторно = Ложь;\r\nДвижение.ВидРасчета = ТекСтрокаНачисления.ВидРасчета;\r\nДвижение.ПериодДействияНачало = ТекСтрокаНачисления.ДатаНачала;\r\nДвижение.ПериодДействияКонец = КонецДня(ТекСтрокаНачисления.ДатаОкончания);\r\nДвижение.ПериодРегистрации = Дата;\r\nДвижение.БазовыйПериодНачало = ТекСтрокаНачисления.ДатаНачала;\r\nДвижение.БазовыйПериодКонец = КонецДня(ТекСтрокаНачисления.ДатаОкончания);\r\nДвижение.Сотрудник = ТекСтрокаНачисления.Сотрудник;\r\nДвижение.ГрафиеРаботы = ТекСтрокаНачисления.ГрафикРаботы;\r\nДвижение.ИсходныеДанные = ТекСтрокаНачисления.Начислено;\r\nКонецЦикла;\r\n\r\nДвижения.Начисления.Записать();\r\nКонецПроцедуры\r\n"'
4742  1     RBRACE               '}'
4743  0     RBRACE               '}'
4743  1     T__0                 ','
4744  0     LBRACE               '{'
4744  1     T__1                 '0'
4744  2     T__0                 ','
4745  0     LBRACE               '{'
4745  1     STRING               '"Изменение записи"'
4745  19    T__0                 ','
4745  20    T__1                 '0'
4745  21    T__0                 ','
4745  22    T__1                 '0'
4745  23    T__0                 ','
4745  24    STRING               '""'
4745  26    T__0                 ','
4745  27    STRING               '"Документ = Документы.НачисленияСотрудникам.НайтиПоНомеру(""000000001"");\r\nОбъект = Документ.ПолучитьОбъект();\r\nНабор = Объект.Движения.Начисления;\r\nНабор.Прочитать();\r\n\r\nДля Каждого Запись Из Набор Цикл\r\n//увеличим результат расчета на 10%\r\nЗапись.Результат = Запись.Результат * 1.1;\r\nКонецЦикла;\r\n\r\nНабор.Записать(Истина);\r\n"'
4756  1     RBRACE               '}'
4757  0     RBRACE               '}'
4757  1     T__0                 ','
4758  0     LBRACE               '{'
4758  1     T__1                 '0'
4758  2     T__0                 ','
4759  0     LBRACE               '{'
4759  1     STRING               '"Очистка всего регистра"'
4759  25    T__0                 ','
4759  26    T__1                 '0'
4759  27    T__0                 ','
4759  28    T__1                 '0'
4759  29    T__0                 ','
4759  30    STRING               '""'
4759  32    T__0                 ','
4759  33    STRING               '"Запрос = Новый Запрос;\r\nЗапрос.Текст =\r\n""ВЫБРАТЬ РАЗЛИЧНЫЕ\r\n|   Начисления.Регистратор\r\n|ИЗ\r\n|   РегистрРасчета.Начисления КАК Начисления"";\r\n\r\nРезультатЗапроса = Запрос.Выполнить();\r\nВыборка = РезультатЗапроса.Выбрать();\r\n\r\nНабор = РегистрыРасчета.Начисления.СоздатьНаборЗаписей();\r\n\r\n//удаляем записи по каждому регистратору\r\nПока Выборка.Следующий() Цикл\r\nНабор.Отбор.Регистратор.Установить(Выборка.Регистратор);\r\nНабор.Записать(Истина);\r\nКонецЦикла;"'
4775  12    RBRACE               '}'
4776  0     RBRACE               '}'
4776  1     T__0                 ','
4777  0     LBRACE               '{'
4777  1     T__1                 '0'
4777  2     T__0                 ','
4778  0     LBRACE               '{'
4778  1     STRING               '"Получаем данные графика"'
4778  26    T__0                 ','
4778  27    T__1                 '0'
4778  28    T__0                 ','
4778  29    T__1                 '0'
4778  30    T__0                 ','
4778  31    STRING               '""'
4778  33    T__0                 ','
4778  34    STRING               '"//выбираем норму и фактическое время работы\r\n//для начисления оклада за май 2017 г.\r\nЗапрос = Новый Запрос;\r\nЗапрос.Текст =\r\n""ВЫБРАТЬ\r\n|   НачисленияДанныеГрафика.ЗначениеПериодДействия КАК Норма,\r\n|   НачисленияДанныеГрафика.ЗначениеФактическийПериодДействия КАК Факт,\r\n|   НачисленияДанныеГрафика.НомерСтроки КАК НомерСтроки,\r\n|   НачисленияДанныеГрафика.Регистратор,\r\n|   НачисленияДанныеГрафика.Сотрудник\r\n|ИЗ\r\n|   РегистрРасчета.Начисления.ДанныеГрафика(ВидРасчета = &ВидРасчета) КАК НачисленияДанныеГрафика\r\n|ГДЕ\r\n|   НачисленияДанныеГрафика.ПериодДействияНачало <= &Начало\r\n|   И НачисленияДанныеГрафика.ПериодДействияКонец >= &Конец"";\r\n\r\nЗапрос.УстановитьПараметр(""ВидРасчета"", ПланыВидовРасчета.ОсновныеНачисления.Оклад);\r\nЗапрос.УстановитьПараметр(""Начало"", '20170501');\r\nЗапрос.УстановитьПараметр(""Конец"", '20170531');\r\n\r\nВыборка = Запрос.Выполнить().Выбрать();\r\n\r\nНабор = РегистрыРасчета.Начисления.СоздатьНаборЗаписей();\r\nПока Выборка.Следующий() Цикл\r\n   //находим нужную строку регистра расчета\r\n   Набор.Отбор.Регистратор.Установить(Выборка.Регистратор);\r\n   Набор.Отбор.Сотрудник.Установить(Выборка.Сотрудник);\r\n  Набор.Прочитать();\r\nДля Н = 0 по Набор.Количество() - 1 Цикл\r\n   Если Набор[Н].НомерСтроки = Выборка.НомерСтроки Тогда\r\n      Если Выборка.Норма = 0 Тогда\r\n        Набор[Н].Результат = 0;\r\n      Иначе\r\n         //расчитываем оклад\r\n         Набор[Н].Результат = (Набор[Н].ИсходныеДанные / Выборка.Норма) * Выборка.Факт;\r\n      КонецЕсли;\r\n   КонецЕсли;\r\nКонецЦикла;\r\n\r\nНабор.Записать(Истина);\r\nКонецЦикла;"'
4818  12    RBRACE               '}'
4819  0     RBRACE               '}'
4819  1     T__0                 ','
4820  0     LBRACE               '{'
4820  1     T__1                 '0'
4820  2     T__0                 ','
4821  0     LBRACE               '{'
4821  1     STRING               '"Получение базы для начислений"'
4821  32    T__0                 ','
4821  33    T__1                 '0'
4821  34    T__0                 ','
4821  35    T__1                 '0'
4821  36    T__0                 ','
4821  37    STRING               '""'
4821  39    T__0                 ','
4821  40    STRING               '"//выбираем базу для начисления премии\r\n//за май 2017 г.\r\nЗапрос = Новый Запрос;\r\nЗапрос.Текст =\r\n""ВЫБРАТЬ\r\n|   НачисленияБазаНачисления.РезультатБаза КАК База,\r\n|   НачисленияБазаНачисления.НомерСтроки КАК НомерСтроки,\r\n|   НачисленияБазаНачисления.Регистратор,\r\n|   НачисленияБазаНачисления.Сотрудник\r\n|ИЗ\r\n|   РегистрРасчета.Начисления.БазаНачисления(&Измерения, &Измерения, , \r\n|       ВидРасчета = &ВидРасчета) КАК НачисленияБазаНачисления\r\n|ГДЕ\r\n|   НачисленияБазаНачисления.ПериодДействияНачало <= &Начало\r\n|   И НачисленияБазаНачисления.ПериодДействияКонец >= &Конец"";\r\n\r\nИзмер = Новый Массив(1);\r\nИзмер[0] = ""Сотрудник"";\r\n\r\nЗапрос.УстановитьПараметр(""Измерения"", Измер);\r\nЗапрос.УстановитьПараметр(""ВидРасчета"", ПланыВидовРасчета.ОсновныеНачисления.Премия);\r\nЗапрос.УстановитьПараметр(""Начало"", '20170501');\r\nЗапрос.УстановитьПараметр(""Конец"", '20170531');\r\n\r\nВыборка = Запрос.Выполнить().Выбрать();\r\n\r\nНабор = РегистрыРасчета.Начисления.СоздатьНаборЗаписей();\r\nПока Выборка.Следующий() Цикл\r\n//находим нужную строку регистра расчета\r\nНабор.Отбор.Регистратор.Установить(Выборка.Регистратор);\r\nНабор.Отбор.Сотрудник.Установить(Выборка.Сотрудник);\r\nНабор.Прочитать();\r\nДля Н = 0 по Набор.Количество() - 1 Цикл\r\nЕсли Набор[Н].НомерСтроки = Выборка.НомерСтроки Тогда\r\n//расчитываем премию\r\nНабор[Н].Результат = Выборка.База * 0.1;\r\nКонецЕсли;\r\nКонецЦикла;\r\n\r\nНабор.Записать(Истина);\r\nКонецЦикла;"'
4861  12    RBRACE               '}'
4862  0     RBRACE               '}'
4862  1     T__0                 ','
4863  0     LBRACE               '{'
4863  1     T__1                 '0'
4863  2     T__0                 ','
4864  0     LBRACE               '{'
4864  1     STRING               '"Получение записи по документу"'
4864  32    T__0                 ','
4864  33    T__1                 '0'
4864  34    T__0                 ','
4864  35    T__1                 '0'
4864  36    T__0                 ','
4864  37    STRING               '""'
4864  39    T__0                 ','
4864  40    STRING               '"Номер = ""000000001"";\r\n\r\n//первый вариант\r\nДокумент = Документы.НачисленияСотрудникам.НайтиПоНомеру(Номер);\r\n\r\nНабор = РегистрыРасчета.Начисления.СоздатьНаборЗаписей();\r\nНабор.Отбор.Регистратор.Установить(Документ.Ссылка);\r\nНабор.Прочитать();\r\n\r\nДля н = 0 По Набор.Количество() - 1 Цикл\r\nСообщить("""" + Набор[н].Сотрудник + "" / "" +\r\nНабор[н].ВидРасчета + "" : "" + Набор[н].Результат);\r\nКонецЦикла;\r\n\r\n//второй вариант\r\nОбъект = Документ.ПолучитьОбъект();\r\nНабор = Объект.Движения.Начисления;\r\nНабор.Прочитать();\r\n\r\nДля н = 0 По Набор.Количество() - 1 Цикл\r\nСообщить("""" + Набор[н].Сотрудник + "" / "" +\r\nНабор[н].ВидРасчета + "" : "" + Набор[н].Результат);\r\nКонецЦикла;\r\n\r\n//третий вариант\r\nЗапрос = Новый Запрос;\r\nЗапрос.Текст =\r\n""ВЫБРАТЬ\r\n|   Начисления.Сотрудник,\r\n|   Начисления.ВидРасчета,\r\n|   Начисления.Результат\r\n|ИЗ\r\n|   РегистрРасчета.Начисления КАК Начисления\r\n|ГДЕ\r\n|   Начисления.Регистратор = &Регистратор"";\r\n\r\nЗапрос.УстановитьПараметр(""Регистратор"", Документ);\r\nВыборка = Запрос.Выполнить().Выбрать();\r\n\r\nПока Выборка.Следующий() Цикл\r\nСообщить("""" + Выборка.Сотрудник + "" / "" +\r\nВыборка.ВидРасчета + "" : "" + Выборка.Результат);\r\nКонецЦикла;\r\n"'
4907  1     RBRACE               '}'
4908  0     RBRACE               '}'
4908  1     T__0                 ','
4909  0     LBRACE               '{'
4909  1     T__1                 '0'
4909  2     T__0                 ','
4910  0     LBRACE               '{'
4910  1     STRING               '"Удаление записи"'
4910  18    T__0                 ','
4910  19    T__1                 '0'
4910  20    T__0                 ','
4910  21    T__1                 '0'
4910  22    T__0                 ','
4910  23    STRING               '""'
4910  25    T__0                 ','
4910  26    STRING               '"//Удаляем записи регистра Начисления по\r\n//документу НачисленияСотрудникам №000000001\r\nДокумент = Документы.НачисленияСотрудникам.НайтиПоНомеру(""000000001"");\r\n\r\nНабор = РегистрыРасчета.Начисления.СоздатьНаборЗаписей();\r\nНабор.Отбор.Регистратор.Установить(Документ.Ссылка);\r\nНабор.Прочитать();\r\n\r\nЕсли Набор.Количество() > 0 Тогда\r\n//Удаляем первую запись\r\nНабор.Удалить(0);\r\n//Удаляем все записи\r\nНабор.Очистить();\r\nКонецЕсли;\r\n\r\nНабор.Записать(Истина);\r\n"'
4926  1     RBRACE               '}'
4927  0     RBRACE               '}'
4928  0     RBRACE               '}'
4928  1     T__0                 ','
4929  0     LBRACE               '{'
4929  1     INT                  '12'
4929  3     T__0                 ','
4930  0     LBRACE               '{'
4930  1     STRING               '"Регистры сведений"'
4930  20    T__0                 ','
4930  21    T__2                 '1'
4930  22    T__0                 ','
4930  23    T__1                 '0'
4930  24    T__0                 ','
4930  25    STRING               '""'
4930  27    T__0                 ','
4930  28    STRING               '""'
4930  30    RBRACE               '}'
4930  31    T__0                 ','
4931  0     LBRACE               '{'
4931  1     T__1                 '0'
4931  2     T__0                 ','
4932  0     LBRACE               '{'
4932  1     STRING               '"Выбор записей за период"'
4932  26    T__0                 ','
4932  27    T__1                 '0'
4932  28    T__0                 ','
4932  29    T__1                 '0'
4932  30    T__0                 ','
4932  31    STRING               '""'
4932  33    T__0                 ','
4932  34    STRING               '"Запрос = Новый Запрос;\r\nЗапрос.Текст =\r\n""ВЫБРАТЬ\r\n|   Цены.Цена,\r\n|   Цены.Номенклатура\r\n|ИЗ\r\n|   РегистрСведений.Цены КАК Цены\r\n|ГДЕ\r\n|   Цены.Период МЕЖДУ &СДаты И &ПоДату"";\r\n\r\nЗапрос.УстановитьПараметр(""СДаты"", '20170101');\r\nЗапрос.УстановитьПараметр(""ПоДату"", '20170331');\r\n\r\nВыборка = Запрос.Выполнить().Выбрать();\r\n\r\nПока Выборка.Следующий() Цикл\r\nСообщить(Выборка.Номенклатура.Наименование +\r\n"": "" + Выборка.Цена);\r\nКонецЦикла;\r\n"'
4951  1     RBRACE               '}'
4952  0     RBRACE               '}'
4952  1     T__0                 ','
4953  0     LBRACE               '{'
4953  1     T__1                 '0'
4953  2     T__0                 ','
4954  0     LBRACE               '{'
4954  1     STRING               '"Выбор записи"'
4954  15    T__0                 ','
4954  16    T__1                 '0'
4954  17    T__0                 ','
4954  18    T__1                 '0'
4954  19    T__0                 ','
4954  20    STRING               '""'
4954  22    T__0                 ','
4954  23    STRING               '"Номенклатура = Справочники.Номенклатура.НайтиПоКоду(""000000007"");\r\n\r\nНабор = РегистрыСведений.Цены.СоздатьНаборЗаписей();\r\n//отбираем все записи по конкретной номенклатуре\r\nНабор.Отбор.Номенклатура.Установить(Номенклатура);\r\n//из них выбираем запись на определенный момент времени\r\nНабор.Отбор.Период.Установить('20170101');\r\nНабор.Прочитать();\r\n\r\nЕсли Набор.Количество() > 0 Тогда\r\nСообщить(Набор[0].Цена);\r\nКонецЕсли;"'
4965  11    RBRACE               '}'
4966  0     RBRACE               '}'
4966  1     T__0                 ','
4967  0     LBRACE               '{'
4967  1     T__1                 '0'
4967  2     T__0                 ','
4968  0     LBRACE               '{'
4968  1     STRING               '"Выбор записи запросом"'
4968  24    T__0                 ','
4968  25    T__1                 '0'
4968  26    T__0                 ','
4968  27    T__1                 '0'
4968  28    T__0                 ','
4968  29    STRING               '""'
4968  31    T__0                 ','
4968  32    STRING               '"Номенклатура = Справочники.Номенклатура.НайтиПоКоду(""000000007"");\r\n\r\nЗапрос = Новый Запрос;\r\nЗапрос.Текст =\r\n""ВЫБРАТЬ\r\n|   Цены.Цена\r\n|ИЗ\r\n|   РегистрСведений.Цены КАК Цены\r\n|ГДЕ\r\n|   Цены.Номенклатура = &Номенклатура\r\n|   И Цены.Период = &Период"";\r\n\r\nЗапрос.УстановитьПараметр(""Номенклатура"", Номенклатура);\r\nЗапрос.УстановитьПараметр(""Период"", '20170101');\r\n\r\nВыгрузка = Запрос.Выполнить().Выгрузить();"'
4983  43    RBRACE               '}'
4984  0     RBRACE               '}'
4984  1     T__0                 ','
4985  0     LBRACE               '{'
4985  1     T__1                 '0'
4985  2     T__0                 ','
4986  0     LBRACE               '{'
4986  1     STRING               '"Добавление записи"'
4986  20    T__0                 ','
4986  21    T__1                 '0'
4986  22    T__0                 ','
4986  23    T__1                 '0'
4986  24    T__0                 ','
4986  25    STRING               '""'
4986  27    T__0                 ','
4986  28    STRING               '"Номенклатура = Справочники.Номенклатура.НайтиПоКоду(""000000001"");\r\n\r\n//первый способ\r\nЗапись = РегистрыСведений.Цены.СоздатьМенеджерЗаписи();\r\nЗапись.Период = '20160101';\r\nЗапись.Номенклатура = Номенклатура;\r\nЗапись.Цена = 100;\r\nЗапись.Записать(\r\nИстина // замещать запись с такими же измерениями и периодом\r\n);\r\n\r\n//второй способ\r\nНабор = РегистрыСведений.Цены.СоздатьНаборЗаписей();\r\nЗапись = Набор.Добавить();\r\nЗапись.Период = '20170101';\r\nЗапись.Номенклатура = Номенклатура;\r\nЗапись.Цена = 105;\r\nНабор.Записать(\r\nЛожь // не удаляем другие записи из регистра\r\n);\r\n\r\nЕсли Выгрузка.Количество() > 0 Тогда\r\nСообщить(Выгрузка[0].Цена);\r\nКонецЕсли;"'
5009  11    RBRACE               '}'
5010  0     RBRACE               '}'
5010  1     T__0                 ','
5011  0     LBRACE               '{'
5011  1     INT                  '8'
5011  2     T__0                 ','
5012  0     LBRACE               '{'
5012  1     STRING               '"Дополнительные сведения"'
5012  26    T__0                 ','
5012  27    T__2                 '1'
5012  28    T__0                 ','
5012  29    T__1                 '0'
5012  30    T__0                 ','
5012  31    STRING               '""'
5012  33    T__0                 ','
5012  34    STRING               '""'
5012  36    RBRACE               '}'
5012  37    T__0                 ','
5013  0     LBRACE               '{'
5013  1     T__1                 '0'
5013  2     T__0                 ','
5014  0     LBRACE               '{'
5014  1     STRING               '"Добавление записи"'
5014  20    T__0                 ','
5014  21    T__1                 '0'
5014  22    T__0                 ','
5014  23    T__1                 '0'
5014  24    T__0                 ','
5014  25    STRING               '""'
5014  27    T__0                 ','
5014  28    STRING               '"//Наименование дополнительного сведения\r\nНаименование = ""Номер складского документа"";\r\n//Находим вид дополнительного сведения\r\nДопСведение = ПланыВидовХарактеристик.ДополнительныеРеквизитыИСведения.НайтиПоНаименованию(\r\n    Наименование);\r\n//Объект, к которому относиться доп. сведение.\r\n//Например документ или элемент справочника\r\nСсылка = Объект.Ссылка;\r\n\r\n//создаем запись\r\nЗапись = РегистрыСведений.ДополнительныеСведения.СоздатьМенеджерЗаписи();\r\nЗапись.Свойство = ДопСведение;\r\nЗапись.Объект = Ссылка;\r\nЗапись.Значение = ""1/2"";\r\n//Сохраняем изменения\r\nЗапись.Записать(\r\n    Истина //Замещаем существующую запись\r\n);"'
5031  3     RBRACE               '}'
5032  0     RBRACE               '}'
5032  1     T__0                 ','
5033  0     LBRACE               '{'
5033  1     T__1                 '0'
5033  2     T__0                 ','
5034  0     LBRACE               '{'
5034  1     STRING               '"Изменение значения"'
5034  21    T__0                 ','
5034  22    T__1                 '0'
5034  23    T__0                 ','
5034  24    T__1                 '0'
5034  25    T__0                 ','
5034  26    STRING               '""'
5034  28    T__0                 ','
5034  29    STRING               '"//Наименование дополнительного сведения\r\nНаименование = ""Номер складского документа"";\r\n//Находим вид дополнительного сведения\r\nДопСведение = ПланыВидовХарактеристик.ДополнительныеРеквизитыИСведения.НайтиПоНаименованию(\r\nНаименование);\r\n//Объект, к которому относиться доп. сведение\r\nСсылка = Объект.Ссылка;\r\n\r\n//Находим строку доп. Сведения\r\nНабор = РегистрыСведений.ДополнительныеСведения.СоздатьНаборЗаписей();\r\nНабор.Отбор.Свойство.Установить(ДопСведение);\r\nНабор.Отбор.Объект.Установить(Ссылка);\r\nНабор.Прочитать();\r\n\r\n//Если строка доп. сведения найдена\r\nЕсли Набор.Количество() > 0 Тогда\r\n//Изменяем значение реквизита\r\nНабор[0].Значение = ""4321"";\r\n\r\n//подтверждаем изменения\r\nНабор.Записать();\r\nКонецЕсли;"'
5055  11    RBRACE               '}'
5056  0     RBRACE               '}'
5056  1     T__0                 ','
5057  0     LBRACE               '{'
5057  1     T__1                 '0'
5057  2     T__0                 ','
5058  0     LBRACE               '{'
5058  1     STRING               '"Получение значения"'
5058  21    T__0                 ','
5058  22    T__1                 '0'
5058  23    T__0                 ','
5058  24    T__1                 '0'
5058  25    T__0                 ','
5058  26    STRING               '""'
5058  28    T__0                 ','
5058  29    STRING               '"//Наименование дополнительного сведения\r\nНаименование = ""Номер складского документа"";\r\n//Находим вид дополнительного сведения\r\nДопСведение = ПланыВидовХарактеристик.ДополнительныеРеквизитыИСведения.НайтиПоНаименованию(\r\nНаименование);\r\n//Объект, к которому относиться доп. сведение\r\nСсылка = Объект.Ссылка;\r\n\r\n//Находим строку доп. сведения\r\nНабор = РегистрыСведений.ДополнительныеСведения.СоздатьНаборЗаписей();\r\nНабор.Отбор.Свойство.Установить(ДопСведение);\r\nНабор.Отбор.Объект.Установить(Ссылка);\r\nНабор.Прочитать();\r\n\r\n//Если строка доп. сведения найдена\r\nЕсли Набор.Количество() > 0 Тогда\r\nСообщить(Набор[0].Значение);\r\nКонецЕсли;"'
5075  11    RBRACE               '}'
5076  0     RBRACE               '}'
5076  1     T__0                 ','
5077  0     LBRACE               '{'
5077  1     T__1                 '0'
5077  2     T__0                 ','
5078  0     LBRACE               '{'
5078  1     STRING               '"Получение значение запросом"'
5078  30    T__0                 ','
5078  31    T__1                 '0'
5078  32    T__0                 ','
5078  33    T__1                 '0'
5078  34    T__0                 ','
5078  35    STRING               '""'
5078  37    T__0                 ','
5078  38    STRING               '"//Наименование дополнительного сведения\r\nНаименование = ""Номер складского документа"";\r\n//Находим вид дополнительного сведения\r\nСвойство = ПланыВидовХарактеристик.ДополнительныеРеквизитыИСведения.НайтиПоНаименованию(\r\n    Наименование);\r\n//Объект, к которому относиться доп. сведение\r\nСсылка = Объект.Ссылка;\r\n\r\n //Находим строку доп. Сведения\r\nЗапрос = Новый Запрос;\r\nЗапрос.Текст = ""ВЫБРАТЬ\r\n    |   ДополнительныеСведения.Значение\r\n    |ИЗ\r\n    |   РегистрСведений.ДополнительныеСведения КАК ДополнительныеСведения\r\n    |ГДЕ\r\n    |   ДополнительныеСведения.Объект = &Ссылка\r\n    |   И ДополнительныеСведения.Свойство = &Свойство"";\r\nЗапрос.УстановитьПараметр(""Ссылка"", Ссылка);\r\nЗапрос.УстановитьПараметр(""Свойство"", Свойство);\r\n\r\nВыбока = Запрос.Выполнить().Выбрать();\r\n\r\n//Если строка доп. сведения найдена\r\nЕсли Выбока.Количество() > 0 Тогда\r\n    Выбока.Следующий();\r\n    Результат = Выбока.Значение;\r\n    Сообщить(Результат);\r\nКонецЕсли;"'
5105  11    RBRACE               '}'
5106  0     RBRACE               '}'
5106  1     T__0                 ','
5107  0     LBRACE               '{'
5107  1     T__1                 '0'
5107  2     T__0                 ','
5108  0     LBRACE               '{'
5108  1     STRING               '"Удаление записи"'
5108  18    T__0                 ','
5108  19    T__1                 '0'
5108  20    T__0                 ','
5108  21    T__1                 '0'
5108  22    T__0                 ','
5108  23    STRING               '""'
5108  25    T__0                 ','
5108  26    STRING               '" //Наименование дополнительного сведения\r\nНаименование = ""Номер складского документа"";\r\n//Находим вид дополнительного сведения\r\nДопСведение = ПланыВидовХарактеристик.ДополнительныеРеквизитыИСведения.НайтиПоНаименованию(\r\n    Наименование);\r\n//Объект, к которому относиться доп. сведение\r\nСсылка = Объект.Ссылка;\r\n\r\n//Находим строку доп. Сведения\r\nНабор = РегистрыСведений.ДополнительныеСведения.СоздатьНаборЗаписей();\r\nНабор.Отбор.Свойство.Установить(ДопСведение);\r\nНабор.Отбор.Объект.Установить(Ссылка);\r\nНабор.Прочитать();\r\n\r\n//Если строка доп. сведения найдена\r\nЕсли Набор.Количество() > 0 Тогда\r\n    Сообщить(Набор[0].Значение);\r\n\r\n    //Удаляем найденную строчку\r\n    Набор.Очистить();\r\n    //Подтверждаем изменения\r\n    Набор.Записать();\r\nКонецЕсли;\r\n"'
5131  1     RBRACE               '}'
5132  0     RBRACE               '}'
5132  1     T__0                 ','
5133  0     LBRACE               '{'
5133  1     T__1                 '0'
5133  2     T__0                 ','
5134  0     LBRACE               '{'
5134  1     STRING               '"Получить текущую цену из периодического регистра сведений Цены"'
5134  65    T__0                 ','
5134  66    T__1                 '0'
5134  67    T__0                 ','
5134  68    T__1                 '0'
5134  69    T__0                 ','
5134  70    STRING               '""'
5134  72    T__0                 ','
5134  73    STRING               '"// Пример: Получить текущую цену из периодического регистра сведений Цены\r\nЭлемент = Справочники.Номенклатура.НайтиПоКоду(4);\r\nОтбор = Новый Структура(""Номенклатура"",Элемент);\r\nЗначенияРесурсов = РегистрыСведений.Цены.ПолучитьПоследнее(ТекущаяДата(), Отбор);"'
5137  82    RBRACE               '}'
5138  0     RBRACE               '}'
5138  1     T__0                 ','
5139  0     LBRACE               '{'
5139  1     T__1                 '0'
5139  2     T__0                 ','
5140  0     LBRACE               '{'
5140  1     STRING               '"Открыть форму списка регистра сведений"'
5140  41    T__0                 ','
5140  42    T__1                 '0'
5140  43    T__0                 ','
5140  44    T__1                 '0'
5140  45    T__0                 ','
5140  46    STRING               '""'
5140  48    T__0                 ','
5140  49    STRING               '"// Пример: Открыть форму списка регистра сведений Цены\r\nИмяРегистра = ""Цены"";\r\nФорма = РегистрыСведений[ИмяРегистра].ПолучитьФормуСписка();\r\nФорма.Открыть();"'
5143  17    RBRACE               '}'
5144  0     RBRACE               '}'
5144  1     T__0                 ','
5145  0     LBRACE               '{'
5145  1     T__1                 '0'
5145  2     T__0                 ','
5146  0     LBRACE               '{'
5146  1     STRING               '"Активизировать требуемую строку списка регистра сведений"'
5146  59    T__0                 ','
5146  60    T__1                 '0'
5146  61    T__0                 ','
5146  62    T__1                 '0'
5146  63    T__0                 ','
5146  64    STRING               '""'
5146  66    T__0                 ','
5146  67    STRING               '"// СоздатьКлючЗаписи()\r\n \r\n// Пример: Активизировать требуемую строку списка регистра сведений\r\nСтруктураКлючевыхПолей = Новый Структура;\r\nСтруктураКлючевыхПолей.Вставить(""Период"", Дата(""20040331000000""));\r\nСтруктураКлючевыхПолей.Вставить(""Номенклатура"", Справочники.Номенклатура.НайтиПоКоду(""0000006""));\r\nЭлементыФормы.ТабличноеПоле1.ТекущаяСтрока = РегистрыСведений.Цены.СоздатьКлючЗаписи(СтруктураКлючевыхПолей);"'
5152  110   RBRACE               '}'
5153  0     RBRACE               '}'
5154  0     RBRACE               '}'
5154  1     T__0                 ','
5155  0     LBRACE               '{'
5155  1     T__1                 '0'
5155  2     T__0                 ','
5156  0     LBRACE               '{'
5156  1     STRING               '"Заполнение в обработке проведения"'
5156  36    T__0                 ','
5156  37    T__1                 '0'
5156  38    T__0                 ','
5156  39    T__1                 '0'
5156  40    T__0                 ','
5156  41    STRING               '""'
5156  43    T__0                 ','
5156  44    STRING               '" //модуль документа\r\nПроцедура ОбработкаПроведения(Отказ, Режим)\r\n\r\nДвижения.Цены.Записывать = Истина;\r\n\r\nДля Каждого ТекСтрокаЦены Из Цены Цикл\r\nДвижение = Движения.Цены.Добавить();\r\nДвижение.Период = Дата;\r\nДвижение.Номенклатура = ТекСтрокаЦены.Номенклатура;\r\nДвижение.Цена = ТекСтрокаЦены.Цена;\r\nКонецЦикла;\r\n\r\nКонецПроцедуры\r\n"'
5169  1     RBRACE               '}'
5170  0     RBRACE               '}'
5170  1     T__0                 ','
5171  0     LBRACE               '{'
5171  1     T__1                 '0'
5171  2     T__0                 ','
5172  0     LBRACE               '{'
5172  1     STRING               '"Изменение записи"'
5172  19    T__0                 ','
5172  20    T__1                 '0'
5172  21    T__0                 ','
5172  22    T__1                 '0'
5172  23    T__0                 ','
5172  24    STRING               '""'
5172  26    T__0                 ','
5172  27    STRING               '"Номенклатура = Справочники.Номенклатура.НайтиПоКоду(""000000007"");\r\n\r\nНабор = РегистрыСведений.Цены.СоздатьНаборЗаписей( );\r\n//Отбираем все записи по конкретной номенклатуре.\r\n//Отбор по измерениям работает только для \r\n//независивых регистров сведений.\r\nНабор.Отбор.Номенклатура.Установить(Номенклатура);\r\nНабор.Прочитать();\r\n\r\nКоличество = Набор.Количество();\r\nЕсли Количество > 0 Тогда\r\n//увеличиваем последнюю цену на 10%\r\nНабор[Количество - 1].Цена = Набор[Количество - 1].Цена * 1.1;\r\n\r\nСообщить(Набор[Количество - 1].Цена);\r\nКонецЕсли;\r\n\r\nНабор.Записать(Истина);"'
5189  24    RBRACE               '}'
5190  0     RBRACE               '}'
5190  1     T__0                 ','
5191  0     LBRACE               '{'
5191  1     T__1                 '0'
5191  2     T__0                 ','
5192  0     LBRACE               '{'
5192  1     STRING               '"Очистка всего регистра"'
5192  25    T__0                 ','
5192  26    T__1                 '0'
5192  27    T__0                 ','
5192  28    T__1                 '0'
5192  29    T__0                 ','
5192  30    STRING               '""'
5192  32    T__0                 ','
5192  33    STRING               '"Набор = РегистрыСведений.Цены.СоздатьНаборЗаписей();\r\nНабор.Записать(Истина);\r\n\r\nПолучить записи регистратора\r\n\r\nРегистратор = Документы.ЦеныНаУслуги.НайтиПоНомеру(""000000001"");\r\n\r\n//получить записи регистра Цена\r\n//добавленные документом ЦеныНаУслуги № ""000000001""\r\nЗапрос = Новый Запрос;\r\nЗапрос.Текст =\r\n""ВЫБРАТЬ\r\n|   Цена,\r\n|   Номенклатура.Наименование КАК Наименование\r\n|ИЗ\r\n|   РегистрСведений.Цены\r\n|ГДЕ\r\n|   Регистратор = &Регистратор"";\r\n\r\nЗапрос.УстановитьПараметр(""Регистратор"", Регистратор);\r\n\r\nВыборка = Запрос.Выполнить().Выбрать();\r\n\r\nПока Выборка.Следующий() Цикл\r\nСообщить(Выборка.Наименование +\r\n"": "" + Выборка.Цена);\r\nКонецЦикла;\r\n"'
5219  1     RBRACE               '}'
5220  0     RBRACE               '}'
5220  1     T__0                 ','
5221  0     LBRACE               '{'
5221  1     T__1                 '0'
5221  2     T__0                 ','
5222  0     LBRACE               '{'
5222  1     STRING               '"Получить первые записи"'
5222  25    T__0                 ','
5222  26    T__1                 '0'
5222  27    T__0                 ','
5222  28    T__1                 '0'
5222  29    T__0                 ','
5222  30    STRING               '""'
5222  32    T__0                 ','
5222  33    STRING               '"Номенклатура = Справочники.Номенклатура.НайтиПоКоду(""000000007"");\r\n\r\n//получить первую цену по заданной номенклатуре\r\n//начиная с 01.01.2016 г. (включительно)\r\nЗапрос = Новый Запрос;\r\nЗапрос.Текст =\r\n""ВЫБРАТЬ\r\n|   ЦеныСрезПервых.Цена\r\n|ИЗ\r\n|   РегистрСведений.Цены.СрезПервых(\r\n|       &СДаты,\r\n|       Номенклатура = &Номенклатура\r\n|   ) КАК ЦеныСрезПервых"";\r\n\r\nЗапрос.УстановитьПараметр(""СДаты"", '20160101');\r\nЗапрос.УстановитьПараметр(""Номенклатура"", Номенклатура);\r\n\r\nВыборка = Запрос.Выполнить().Выбрать();\r\n\r\nЕсли Выборка.Следующий() Тогда\r\nСообщить(Выборка.Цена);\r\nКонецЕсли;\r\n\r\n"'
5245  1     RBRACE               '}'
5246  0     RBRACE               '}'
5246  1     T__0                 ','
5247  0     LBRACE               '{'
5247  1     T__1                 '0'
5247  2     T__0                 ','
5248  0     LBRACE               '{'
5248  1     STRING               '"Получить последние записи"'
5248  28    T__0                 ','
5248  29    T__1                 '0'
5248  30    T__0                 ','
5248  31    T__1                 '0'
5248  32    T__0                 ','
5248  33    STRING               '""'
5248  35    T__0                 ','
5248  36    STRING               '"Номенклатура = Справочники.Номенклатура.НайтиПоКоду(""000000007"");\r\n\r\n//получить последнюю цену по заданной номенклатуре\r\n//назначенную до 31.03.2017 г. (включительно)\r\nЗапрос = Новый Запрос;\r\nЗапрос.Текст =\r\n""ВЫБРАТЬ\r\n|   ЦеныСрезПоследних.Цена\r\n|ИЗ\r\n|   РегистрСведений.Цены.СрезПоследних(\r\n|       &ПоДату,\r\n|       Номенклатура = &Номенклатура\r\n|   ) КАК ЦеныСрезПоследних"";\r\n\r\nЗапрос.УстановитьПараметр(""ПоДату"", '20170331');\r\nЗапрос.УстановитьПараметр(""Номенклатура"", Номенклатура);\r\n\r\nВыборка = Запрос.Выполнить().Выбрать();\r\n\r\nЕсли Выборка.Следующий() Тогда\r\nСообщить(Выборка.Цена);\r\nКонецЕсли;"'
5269  11    RBRACE               '}'
5270  0     RBRACE               '}'
5270  1     T__0                 ','
5271  0     LBRACE               '{'
5271  1     T__1                 '0'
5271  2     T__0                 ','
5272  0     LBRACE               '{'
5272  1     STRING               '"Удаление записи"'
5272  18    T__0                 ','
5272  19    T__1                 '0'
5272  20    T__0                 ','
5272  21    T__1                 '0'
5272  22    T__0                 ','
5272  23    STRING               '""'
5272  25    T__0                 ','
5272  26    STRING               '" Номенклатура = Справочники.Номенклатура.НайтиПоКоду(""000000007"");\r\n\r\nНабор = РегистрыСведений.Цены.СоздатьНаборЗаписей();\r\n//отбираем все записи по конкретной номенклатуре\r\nНабор.Отбор.Номенклатура.Установить(Номенклатура);\r\nНабор.Прочитать();\r\n\r\n//удаляем первую запись\r\nЕсли Набор.Количество() > 0 Тогда\r\nНабор.Удалить(0);\r\nКонецЕсли;\r\n//Удаляем все записи соответствующие отбору\r\n//Если отбор не задан, то удалятся все записи регистра\r\nНабор.Очистить();\r\n\r\n//подтверждаем изменения\r\nНабор.Записать(Истина);"'
5288  24    RBRACE               '}'
5289  0     RBRACE               '}'
5289  1     T__0                 ','
5290  0     LBRACE               '{'
5290  1     T__1                 '0'
5290  2     T__0                 ','
5291  0     LBRACE               '{'
5291  1     STRING               '"Примеры использования объектов "'
5291  34    T__0                 ','
5291  35    T__1                 '0'
5291  36    T__0                 ','
5291  37    T__1                 '0'
5291  38    T__0                 ','
5291  39    STRING               '""'
5291  41    T__0                 ','
5291  42    STRING               '"1.  // Глобальный контекст\r\n  // РегистрыСведений\r\n// Пример: получить текущую цену из периодического регистра сведений ""Цены"".\r\nЭлемент = Справочники.Номенклатура.НайтиПоКоду(4);\r\nОтбор = Новый Структура(""Номенклатура"", Элемент);\r\nЗначенияРесурсов = РегистрыСведений.Цены.ПолучитьПоследнее(ТекущаяДата(), Отбор);\r\nЦена = ЗначенияРесурсов.Цена;\r\n2.  // объект РегистрыСведенийМенеджер\r\n   // .<имя регистра сведений>\r\n  // [<имя регистра сведений>]\r\n  // Для Каждого … Из … Цикл … КонецЦикла;\r\n// Пример: Получить начальную цену из периодического регистра сведений Цены.\r\nИмяРегистра = ""Цены"";\r\nУслуга = Справочники.Номенклатура.НайтиПоНаименованию(""Диагностика"");\r\nОтбор = Новый Структура;\r\nОтбор.Вставить(""Номенклатура"", Услуга );\r\nЦена = РегистрыСведений[ИмяРегистра].ПолучитьПервое(ТекущаяДата(), Отбор).Цена;\r\n3.  // объект РегистрСведенийМенеджер.<имя>\r\n   // СоздатьКлючЗаписи()\r\n// Пример: активизировать требуемую строку списка регистра сведений.\r\nСтруктураКлючевыхПолей = Новый Структура;\r\nСтруктураКлючевыхПолей.Вставить(""Период"", Дата(""20040331000000""));\r\nСтруктураКлючевыхПолей.Вставить(""Номенклатура""\r\n        , Справочники.Номенклатура.НайтиПоКоду(""0000006""));\r\nЭлементы.Материалы.ТекущаяСтрока = РегистрыСведений.Цены.СоздатьКлючЗаписи(\r\n        СтруктураКлючевыхПолей);\r\n4.  // объект РегистрСведенийМенеджер.<имя>\r\n  // СоздатьНаборЗаписей()\r\n// Пример: показать номенклатуру, цена на которую была установлена в заданную дату и время.\r\nНабор = РегистрыСведений.Цены.СоздатьНаборЗаписей();\r\nНабор.Отбор.Период.Установить(ЗаданнаяДата, Истина);\r\nНабор.Прочитать();\r\nДля Каждого ОчереднаяЗапись Из Набор Цикл\r\n  Сообщить(""Номенклатура = ""+ ОчереднаяЗапись.Номенклатура +"", цена = \r\n                ""+ ОчереднаяЗапись.Цена);\r\nКонецЦикла;\r\n5.  // объект РегистрСведенийМенеджер.<имя>\r\n  // СоздатьМенеджерЗаписи()\r\n// Пример: добавить новое значение цены в регистр ""Цены"".\r\nЗапись = РегистрыСведений.Цены.СоздатьМенеджерЗаписи();\r\nЗапись.Период = ТекущаяДата();\r\nЗапись.Номенклатура = Справочники.Номенклатура.НайтиПоКоду(""0000005"");\r\nЗапись.Цена = 568;\r\nЗапись.Записать();\r\n6.  // объект РегистрСведенийНаборЗаписей.<имя>\r\n  // [<индекс элемента коллекции>]\r\n  // Для Каждого … Из … Цикл … КонецЦикла;\r\n// Пример: показать номенклатуру, цена на которую была установлена в заданную дату и время.\r\nНабор = РегистрыСведений.Цены.СоздатьНаборЗаписей();\r\nНабор.Отбор.Период.Установить(ЗаданнаяДата, Истина);\r\nНабор.Прочитать();\r\nДля Каждого ОчереднаяЗапись Из Набор Цикл\r\n  Сообщить(""Номенклатура = ""+ ОчереднаяЗапись.Номенклатура + "", цена = \r\n            "" + ОчереднаяЗапись.Цена);\r\nКонецЦикла;\r\n7.  // объект РегистрСведенийВыборка.<имя>\r\n   // ПолучитьМенеджерЗаписи()\r\n// Пример: удалить все записи регистра сведений за текущий месяц.\r\nВыборка = РегистрыСведений.Цены.Выбрать(НачалоМесяца(ТекущаяДата())\r\n              , КонецМесяца(ТекущаяДата()));\r\nПока Выборка.Следующий() цикл Выборка.\r\n  ПолучитьМенеджерЗаписи().Удалить();\r\nКонецЦикла;\r\n8.  // объект РегистрСведенийМенеджер.<имя>\r\n  // Выбрать()\r\n  // ВыбратьПоРегистратору()\r\n// Пример: показать изменение цен на элемент номенклатуры в течение года.\r\nОтбор = Новый Структура(""Номенклатура"", Справочники.Номенклатура\r\n            .НайтиПоКоду(""0000005""));\r\nВыборка = РегистрыСведений.Цены.Выбрать(НачалоГода(ТекущаяДата()), ТекущаяДата(), Отбор);\r\nПока Выборка.Следующий() цикл \r\n  Сообщить(""Дата = "" + Выборка.Период + "", цена = "" + Выборка.Цена);\r\nКонецЦикла;\r\n"'
5364  1     RBRACE               '}'
5365  0     RBRACE               '}'
5366  0     RBRACE               '}'
5366  1     T__0                 ','
5367  0     LBRACE               '{'
5367  1     INT                  '16'
5367  3     T__0                 ','
5368  0     LBRACE               '{'
5368  1     STRING               '"Справочники"'
5368  14    T__0                 ','
5368  15    T__2                 '1'
5368  16    T__0                 ','
5368  17    T__1                 '0'
5368  18    T__0                 ','
5368  19    STRING               '""'
5368  21    T__0                 ','
5368  22    STRING               '""'
5368  24    RBRACE               '}'
5368  25    T__0                 ','
5369  0     LBRACE               '{'
5369  1     T__1                 '0'
5369  2     T__0                 ','
5370  0     LBRACE               '{'
5370  1     STRING               '"добавление элемента"'
5370  22    T__0                 ','
5370  23    T__1                 '0'
5370  24    T__0                 ','
5370  25    T__1                 '0'
5370  26    T__0                 ','
5370  27    STRING               '""'
5370  29    T__0                 ','
5370  30    STRING               '"Сотр = Справочники.Сотрудники.СоздатьЭлемент();\r\nСотр.Наименование = ""Некрасов Н.А."";\r\nСотр.Должность = ""писатель"";\r\nСотр.Записать();"'
5373  17    RBRACE               '}'
5374  0     RBRACE               '}'
5374  1     T__0                 ','
5375  0     LBRACE               '{'
5375  1     T__1                 '0'
5375  2     T__0                 ','
5376  0     LBRACE               '{'
5376  1     STRING               '"Изменение элемента"'
5376  21    T__0                 ','
5376  22    T__1                 '0'
5376  23    T__0                 ','
5376  24    T__1                 '0'
5376  25    T__0                 ','
5376  26    STRING               '""'
5376  28    T__0                 ','
5376  29    STRING               '"Спр = Справочники.Сотрудники;\r\n\r\n//поиск по коду\r\nСотр = Спр.НайтиПоКоду(""000000001"");\r\n//Если элемент найден\r\nЕсли (Сотр <> Спр.ПустаяСсылка()) Тогда\r\n//Получаем объект для изменения и \r\n//меняем наименование\r\nОбъект = Сотр.ПолучитьОбъект(); \r\nОбъект.Наименование = ""Иванов И.И."";\r\nОбъект.Записать();\r\nКонецЕсли;\r\n"'
5388  1     RBRACE               '}'
5389  0     RBRACE               '}'
5389  1     T__0                 ','
5390  0     LBRACE               '{'
5390  1     T__1                 '0'
5390  2     T__0                 ','
5391  0     LBRACE               '{'
5391  1     STRING               '"Использование транзакции"'
5391  27    T__0                 ','
5391  28    T__1                 '0'
5391  29    T__0                 ','
5391  30    T__1                 '0'
5391  31    T__0                 ','
5391  32    STRING               '""'
5391  34    T__0                 ','
5391  35    STRING               '"Спр = Справочники.Сотрудники;\r\nМатросы = Спр.НайтиПоНаименованию(""Матросы"");\r\n\r\nЗапрос = Новый Запрос;\r\nЗапрос.Текст =\r\n""ВЫБРАТЬ\r\n|   Сотрудники.Ссылка\r\n|ИЗ\r\n|   Справочник.Сотрудники КАК Сотрудники\r\n|ГДЕ\r\n|   Сотрудники.Должность ПОДОБНО &Должность"";\r\n\r\nЗапрос.УстановитьПараметр(""Должность"", ""%Матрос%"");\r\nРезультатЗапроса = Запрос.Выполнить();\r\nВыборкаДетальныеЗаписи = РезультатЗапроса.Выбрать();\r\n\r\n//перенос всех матросов в папку ""Матросы""\r\n//в случае любой ошибки, изменения \r\n//по всем элементам будут отменены\r\nНачатьТранзакцию();\r\nПока ВыборкаДетальныеЗаписи.Следующий() Цикл\r\nОбъект = ВыборкаДетальныеЗаписи.Ссылка.ПолучитьОбъект();\r\nОбъект.Родитель = Матросы.Ссылка;\r\nОбъект.Записать();\r\nКонецЦикла;\r\nЗафиксироватьТранзакцию();\r\n"'
5417  1     RBRACE               '}'
5418  0     RBRACE               '}'
5418  1     T__0                 ','
5419  0     LBRACE               '{'
5419  1     T__1                 '0'
5419  2     T__0                 ','
5420  0     LBRACE               '{'
5420  1     STRING               '"Контекстный поиск элемента"'
5420  29    T__0                 ','
5420  30    T__1                 '0'
5420  31    T__0                 ','
5420  32    T__1                 '0'
5420  33    T__0                 ','
5420  34    STRING               '""'
5420  36    T__0                 ','
5420  37    STRING               '" Запрос = Новый Запрос;\r\nЗапрос.Текст =\r\n""ВЫБРАТЬ\r\n|   Сотрудники.Ссылка\r\n|ИЗ\r\n|   Справочник.Сотрудники КАК Сотрудники\r\n|ГДЕ\r\n|   Сотрудники.Должность ПОДОБНО &Должность"";\r\n\r\nЗапрос.УстановитьПараметр(""Должность"", ""%Матрос%"");\r\n\r\nРезультатЗапроса = Запрос.Выполнить();\r\n\r\nВыборкаДетальныеЗаписи = РезультатЗапроса.Выбрать();\r\n\r\nПока ВыборкаДетальныеЗаписи.Следующий() Цикл\r\nСообщить(ВыборкаДетальныеЗаписи.Ссылка);\r\nКонецЦикла;"'
5437  12    RBRACE               '}'
5438  0     RBRACE               '}'
5438  1     T__0                 ','
5439  0     LBRACE               '{'
5439  1     T__1                 '0'
5439  2     T__0                 ','
5440  0     LBRACE               '{'
5440  1     STRING               '"перебор подчинённых"'
5440  22    T__0                 ','
5440  23    T__1                 '0'
5440  24    T__0                 ','
5440  25    T__1                 '0'
5440  26    T__0                 ','
5440  27    STRING               '""'
5440  29    T__0                 ','
5440  30    STRING               '"//Спр. Документы подчинен спр. Сотрудники\r\nСпр = Справочники.Сотрудники;\r\nСотр = Спр.НайтиПоНаименованию(""Миронов"");\r\nВыборка = Справочники.Документы.Выбрать( , Сотр);\r\nПока Выборка.Следующий() Цикл\r\nСообщить(Выборка.Наименование);\r\nКонецЦикла;"'
5446  12    RBRACE               '}'
5447  0     RBRACE               '}'
5447  1     T__0                 ','
5448  0     LBRACE               '{'
5448  1     T__1                 '0'
5448  2     T__0                 ','
5449  0     LBRACE               '{'
5449  1     STRING               '"Перебор элементов группы"'
5449  27    T__0                 ','
5449  28    T__1                 '0'
5449  29    T__0                 ','
5449  30    T__1                 '0'
5449  31    T__0                 ','
5449  32    STRING               '""'
5449  34    T__0                 ','
5449  35    STRING               '"Спр = Справочники.Сотрудники;\r\nПисатели = Спр.НайтиПоНаименованию(""Писатели"");\r\nВыборка = Спр.Выбрать(Писатели);\r\nПока Выборка.Следующий() Цикл\r\nСообщить(Выборка.Наименование);\r\nКонецЦикла;"'
5454  12    RBRACE               '}'
5455  0     RBRACE               '}'
5455  1     T__0                 ','
5456  0     LBRACE               '{'
5456  1     T__1                 '0'
5456  2     T__0                 ','
5457  0     LBRACE               '{'
5457  1     STRING               '"Перебор элементов"'
5457  20    T__0                 ','
5457  21    T__1                 '0'
5457  22    T__0                 ','
5457  23    T__1                 '0'
5457  24    T__0                 ','
5457  25    STRING               '""'
5457  27    T__0                 ','
5457  28    STRING               '"Элементы = Справочники.Сотрудники.Выбрать();\r\nПока Элементы.Следующий() Цикл\r\nСообщить(Элементы.Наименование);\r\nКонецЦикла;\r\n"'
5461  1     RBRACE               '}'
5462  0     RBRACE               '}'
5462  1     T__0                 ','
5463  0     LBRACE               '{'
5463  1     T__1                 '0'
5463  2     T__0                 ','
5464  0     LBRACE               '{'
5464  1     STRING               '"Перенести элементов в группу"'
5464  31    T__0                 ','
5464  32    T__1                 '0'
5464  33    T__0                 ','
5464  34    T__1                 '0'
5464  35    T__0                 ','
5464  36    STRING               '""'
5464  38    T__0                 ','
5464  39    STRING               '"Спр = Справочники.Сотрудники;\r\n\r\nСотр = Спр.НайтиПоНаименованию(""Некрасов"");\r\nГруппа = Спр.НайтиПоНаименованию(""Писатели"");\r\n\r\nЕсли (Сотр <> Спр.ПустаяСсылка()) И Группа.ЭтоГруппа Тогда\r\nОбъект = Сотр.ПолучитьОбъект();\r\nОбъект.Родитель = Группа.Ссылка;\r\nОбъект.Записать();\r\nКонецЕсли;"'
5473  11    RBRACE               '}'
5474  0     RBRACE               '}'
5474  1     T__0                 ','
5475  0     LBRACE               '{'
5475  1     T__1                 '0'
5475  2     T__0                 ','
5476  0     LBRACE               '{'
5476  1     STRING               '"Поиск элементов"'
5476  18    T__0                 ','
5476  19    T__1                 '0'
5476  20    T__0                 ','
5476  21    T__1                 '0'
5476  22    T__0                 ','
5476  23    STRING               '""'
5476  25    T__0                 ','
5476  26    STRING               '"Спр = Справочники.Сотрудники; \r\n\r\n//поиск по наименованию\r\nСотр = Спр.НайтиПоНаименованию(""Некрасов"");\r\nЕсли (Не Сотр.Пустая()) Тогда\r\n//Получаем объект для изменения и \r\n//меняем наименование\r\nОбъект = Сотр.ПолучитьОбъект(); \r\nОбъект.Наименование = ""Некрасов Николай Александрович"";\r\nОбъект.Записать();\r\nСообщить(Сотр.Наименование);\r\nКонецЕсли;\r\n\r\n//поиск по коду\r\nСотр = Спр.НайтиПоКоду(""000000001"");\r\n//Если элемент найден\r\nЕсли (Сотр <> Спр.ПустаяСсылка()) Тогда\r\nСообщить(Сотр.Наименование);\r\nКонецЕсли;\r\n\r\n//поиск по реквизиту\r\nСотр = Спр.НайтиПоРеквизиту(""Должность"", ""писатель"");\r\nЕсли (Не Сотр.Пустая()) Тогда\r\nСообщить(Сотр.Наименование);\r\nКонецЕсли;"'
5500  11    RBRACE               '}'
5501  0     RBRACE               '}'
5501  1     T__0                 ','
5502  0     LBRACE               '{'
5502  1     T__1                 '0'
5502  2     T__0                 ','
5503  0     LBRACE               '{'
5503  1     STRING               '"Предопределенные элементы"'
5503  28    T__0                 ','
5503  29    T__1                 '0'
5503  30    T__0                 ','
5503  31    T__1                 '0'
5503  32    T__0                 ','
5503  33    STRING               '""'
5503  35    T__0                 ','
5503  36    STRING               '"//""Основной"" склад задан в конфигурации\r\n//на форме предопределенных элементов\r\n//справочника ""Склады""\r\nОсновнойСклад = Справочники.Склады.Основной;\r\nСообщить(ОсновнойСклад);"'
5507  25    RBRACE               '}'
5508  0     RBRACE               '}'
5508  1     T__0                 ','
5509  0     LBRACE               '{'
5509  1     T__1                 '0'
5509  2     T__0                 ','
5510  0     LBRACE               '{'
5510  1     STRING               '"Создание группы"'
5510  18    T__0                 ','
5510  19    T__1                 '0'
5510  20    T__0                 ','
5510  21    T__1                 '0'
5510  22    T__0                 ','
5510  23    STRING               '""'
5510  25    T__0                 ','
5510  26    STRING               '"Сотр = Справочники.Сотрудники.СоздатьГруппу();\r\nСотр.Наименование = ""Дизайнеры"";\r\nСотр.Записать();\r\n"'
5513  1     RBRACE               '}'
5514  0     RBRACE               '}'
5514  1     T__0                 ','
5515  0     LBRACE               '{'
5515  1     INT                  '5'
5515  2     T__0                 ','
5516  0     LBRACE               '{'
5516  1     STRING               '"Табличная часть"'
5516  18    T__0                 ','
5516  19    T__2                 '1'
5516  20    T__0                 ','
5516  21    T__1                 '0'
5516  22    T__0                 ','
5516  23    STRING               '""'
5516  25    T__0                 ','
5516  26    STRING               '""'
5516  28    RBRACE               '}'
5516  29    T__0                 ','
5517  0     LBRACE               '{'
5517  1     T__1                 '0'
5517  2     T__0                 ','
5518  0     LBRACE               '{'
5518  1     STRING               '"Добовление строки"'
5518  20    T__0                 ','
5518  21    T__1                 '0'
5518  22    T__0                 ','
5518  23    T__1                 '0'
5518  24    T__0                 ','
5518  25    STRING               '""'
5518  27    T__0                 ','
5518  28    STRING               '"Спр = Справочники.Сотрудники;\r\nСотр = Спр.НайтиПоКоду(""000000001"");\r\n\r\nЕсли (Сотр <> Спр.ПустаяСсылка()) Тогда\r\n//Получаем объект для редактирования\r\nОбъект = Сотр.ПолучитьОбъект();\r\n\r\n//Заполняем табличную часть\r\nТД = Объект.ТрудоваяДеятельность.Добавить();\r\nТД.Организация = ""1С"";\r\nТД.НачалоРаботы = ""20190101"";\r\nТД.Должность = ""Аналитик"";\r\n\r\n//Записываем изменения\r\nОбъект.Записать();\r\nКонецЕсли;"'
5533  11    RBRACE               '}'
5534  0     RBRACE               '}'
5534  1     T__0                 ','
5535  0     LBRACE               '{'
5535  1     T__1                 '0'
5535  2     T__0                 ','
5536  0     LBRACE               '{'
5536  1     STRING               '"Перебор строк"'
5536  16    T__0                 ','
5536  17    T__1                 '0'
5536  18    T__0                 ','
5536  19    T__1                 '0'
5536  20    T__0                 ','
5536  21    STRING               '""'
5536  23    T__0                 ','
5536  24    STRING               '" Спр = Справочники.Сотрудники;\r\n//Находим нужного сотрудника\r\nСотр = Спр.НайтиПоКоду(""000000001"");\r\n\r\n//Перебираем строки табличной части\r\nДля Каждого Строка Из Сотр.ТрудоваяДеятельность Цикл\r\nСообщить(Строка.Организация);\r\nКонецЦикла;"'
5543  12    RBRACE               '}'
5544  0     RBRACE               '}'
5544  1     T__0                 ','
5545  0     LBRACE               '{'
5545  1     T__1                 '0'
5545  2     T__0                 ','
5546  0     LBRACE               '{'
5546  1     STRING               '"Поиск строки"'
5546  15    T__0                 ','
5546  16    T__1                 '0'
5546  17    T__0                 ','
5546  18    T__1                 '0'
5546  19    T__0                 ','
5546  20    STRING               '""'
5546  22    T__0                 ','
5546  23    STRING               '"Спр = Справочники.Сотрудники;\r\n//Находим нужного сотрудника\r\nСотр = Спр.НайтиПоКоду(""000000001"");\r\n\r\nЕсли (Сотр <> Спр.ПустаяСсылка()) Тогда\r\n//Поиск строки в текстом ""1С"" в поле ""Организация""\r\nТД = Сотр.ТрудоваяДеятельность.Найти(""1С"", ""Организация"");\r\n//Если нашли, то выводим НачалоРаботы\r\nЕсли ЗначениеЗаполнено(ТД) Тогда\r\nСообщить(ТД.НачалоРаботы);\r\nКонецЕсли;\r\nКонецЕсли;"'
5557  11    RBRACE               '}'
5558  0     RBRACE               '}'
5558  1     T__0                 ','
5559  0     LBRACE               '{'
5559  1     T__1                 '0'
5559  2     T__0                 ','
5560  0     LBRACE               '{'
5560  1     STRING               '"Удаление всех строк"'
5560  22    T__0                 ','
5560  23    T__1                 '0'
5560  24    T__0                 ','
5560  25    T__1                 '0'
5560  26    T__0                 ','
5560  27    STRING               '""'
5560  29    T__0                 ','
5560  30    STRING               '"Спр = Справочники.Сотрудники;\r\n//Находим нужного сотрудника\r\nСотр = Спр.НайтиПоКоду(""000000001"");\r\n//Получаем объект для редактирования\r\nОбъект = Сотр.ПолучитьОбъект();\r\n//Очищаем табличную часть\r\nОбъект.ТрудоваяДеятельность.Очистить(); \r\n//Записываем изменения\r\nОбъект.Записать();"'
5568  19    RBRACE               '}'
5569  0     RBRACE               '}'
5569  1     T__0                 ','
5570  0     LBRACE               '{'
5570  1     T__1                 '0'
5570  2     T__0                 ','
5571  0     LBRACE               '{'
5571  1     STRING               '"Удаление строки"'
5571  18    T__0                 ','
5571  19    T__1                 '0'
5571  20    T__0                 ','
5571  21    T__1                 '0'
5571  22    T__0                 ','
5571  23    STRING               '""'
5571  25    T__0                 ','
5571  26    STRING               '" Спр = Справочники.Сотрудники;\r\n//Находим нужного сотрудника\r\nСотр = Спр.НайтиПоКоду(""000000001"");\r\n\r\nЕсли (Сотр <> Спр.ПустаяСсылка()) Тогда\r\n//Получаем объект для редактирования\r\nОбъект = Сотр.ПолучитьОбъект();\r\n\r\n//Поиск строки в текстом ""1С"" в поле ""Организация""\r\nТД = Объект.ТрудоваяДеятельность.Найти(""1С"", ""Организация"");\r\nЕсли ЗначениеЗаполнено(ТД) Тогда\r\n//Если нашли, то удаляем\r\nОбъект.ТрудоваяДеятельность.Удалить(ТД);\r\n\r\n//Записываем изменения\r\nОбъект.Записать();\r\nКонецЕсли;\r\nКонецЕсли;\r\n"'
5589  1     RBRACE               '}'
5590  0     RBRACE               '}'
5591  0     RBRACE               '}'
5591  1     T__0                 ','
5592  0     LBRACE               '{'
5592  1     T__1                 '0'
5592  2     T__0                 ','
5593  0     LBRACE               '{'
5593  1     STRING               '"Удаление группы"'
5593  18    T__0                 ','
5593  19    T__1                 '0'
5593  20    T__0                 ','
5593  21    T__1                 '0'
5593  22    T__0                 ','
5593  23    STRING               '""'
5593  25    T__0                 ','
5593  26    STRING               '"Спр = Справочники.Сотрудники;\r\nГруппа = Спр.НайтиПоНаименованию(""Писатели"");\r\n\r\n//пометить на удаление\r\nЕсли (Группа <> Спр.ПустаяСсылка()) Тогда\r\n//Группа помечается на удаление\r\nГруппа.ПолучитьОбъект().УстановитьПометкуУдаления(Истина, Ложь);\r\n\r\n//Группа и вложенные в нее элементы помечаются на удаление\r\nГруппа.ПолучитьОбъект().УстановитьПометкуУдаления(Истина);\r\nКонецЕсли;\r\n\r\n//удалить\r\nЕсли (Группа <> Спр.ПустаяСсылка()) Тогда\r\n//Группа и вложенные в нее элементы полнстью удаляются      \r\n//из БД без проверки ссылочной целостности\r\nГруппа.ПолучитьОбъект().Удалить();\r\nКонецЕсли;"'
5610  11    RBRACE               '}'
5611  0     RBRACE               '}'
5611  1     T__0                 ','
5612  0     LBRACE               '{'
5612  1     T__1                 '0'
5612  2     T__0                 ','
5613  0     LBRACE               '{'
5613  1     STRING               '"Удаление элемента"'
5613  20    T__0                 ','
5613  21    T__1                 '0'
5613  22    T__0                 ','
5613  23    T__1                 '0'
5613  24    T__0                 ','
5613  25    STRING               '""'
5613  27    T__0                 ','
5613  28    STRING               '"Спр = Справочники.Сотрудники;\r\nСотр = Спр.НайтиПоКоду(""000000003"");\r\n\r\nЕсли (Сотр <> Спр.ПустаяСсылка()) Тогда\r\n//Объект помечается на удаление\r\nСотр.ПолучитьОбъект().УстановитьПометкуУдаления(Истина);\r\n\r\n//Объект полностью удаляется из БД\r\n//без проверки ссылочной целостности\r\nСотр.ПолучитьОбъект().Удалить();\r\nКонецЕсли;"'
5623  11    RBRACE               '}'
5624  0     RBRACE               '}'
5624  1     T__0                 ','
5625  0     LBRACE               '{'
5625  1     T__1                 '0'
5625  2     T__0                 ','
5626  0     LBRACE               '{'
5626  1     STRING               '"Обратится к процедуре в модуле справочника"'
5626  45    T__0                 ','
5626  46    T__1                 '0'
5626  47    T__0                 ','
5626  48    T__1                 '0'
5626  49    T__0                 ','
5626  50    STRING               '""'
5626  52    T__0                 ','
5626  53    STRING               '"// размещается в модуле справочника\r\nПроцедура Проверка() Экспорт\r\n//  текст процедуры\r\nКонецПроцедуры;\r\n//Вызов процедуры как метода объекта «Справочник»\r\nКлиент = Справочники.Клиенты.НайтиПоКоду(1).ПолучитьОбъект();\r\nКлиент.Проверка();\r\n"'
5633  1     RBRACE               '}'
5634  0     RBRACE               '}'
5634  1     T__0                 ','
5635  0     LBRACE               '{'
5635  1     T__1                 '0'
5635  2     T__0                 ','
5636  0     LBRACE               '{'
5636  1     STRING               '"Примеры использования объектов "'
5636  34    T__0                 ','
5636  35    T__1                 '0'
5636  36    T__0                 ','
5636  37    T__1                 '0'
5636  38    T__0                 ','
5636  39    STRING               '""'
5636  41    T__0                 ','
5636  42    STRING               '"1.  // Глобальный контекст\r\n  // Справочники\r\n// Пример: вывести все типы ссылок на элементы справочников, существующие в конфигурации.\r\nМассив = Справочники.ТипВсеСсылки().Типы();\r\nДля Каждого ОчереднойТип из Массив Цикл\r\n  Сообщить(ОчереднойТип);\r\nКонецЦикла;   \r\n\r\n2.  // объект СправочникиМенеджер\r\n  // .<имя справочника>\r\n  // [<имя справочника>]\r\n  // Для Каждого … Из … Цикл … КонецЦикла;\r\n// Пример: создать новую группу справочника ""Номенклатура"".\r\nНоваяГруппа = Справочники.Номенклатура.СоздатьГруппу();\r\nНоваяГруппа.Наименование = ""Моя новая группа"";\r\nНоваяГруппа.Записать();\r\n// Пример: получить ссылку на справочник ""Номенклатура"".\r\nСправочники[""Номенклатура""].ПолучитьСсылку();\r\n\r\n3.   // объект СправочникМенеджер.<Имя справочника>\r\n  // НайтиПоКоду()\r\n  // НайтиПоНаименованию()\r\n  // НайтиПоРеквизиту()\r\n  // ПустаяСсылка()\r\n  // ПолучитьСсылку()\r\n  // .<имя предопределенного элемента справочника>\r\n// Пример: проверить, помечен ли на удаление элемент справочника ""Номенклатура"" с кодом 13.\r\nЕсли Справочники.Номенклатура.НайтиПоКоду(13).ПометкаУдаления Тогда\r\n  Сообщить(""Элемент с кодом 13 помечен на удаление"");\r\nКонецЕсли;\r\n// Пример: является ли элемент справочника ""Номенклатура"" с наименованием ""Услуги"" группой.\r\nЕсли Справочники.Номенклатура.НайтиПоНаименованию(""Услуги"", Истина).ЭтоГруппа Тогда\r\n  Сообщить(""Элемент Услуги является группой"");\r\nКонецЕсли;\r\n// Пример: проверить, что для всех элементов задан вид номенклатуры.\r\nПустаяСсылкаПеречисления = Перечисления.ВидыНоменклатуры.ПустаяСсылка();\r\nЕсли Не Справочники.Номенклатура.НайтиПоРеквизиту(\r\n        ""ВидНоменклатуры"", ПустаяСсылкаПеречисления).Пустая() Тогда \r\n  Сообщить(""Есть элементы, для которых не задан вид номенклатуры"");\r\nКонецЕсли;\r\n// Пример: передать пустую ссылку в параметр метода.\r\nВыборка = Справочники.Номенклатура.Выбрать(Справочники.Номенклатура.ПустаяСсылка());\r\n\r\n4.  // объект СправочникМенеджер.<Имя справочника>\r\n  // Выбрать()\r\n  // ВыбратьИерархически()\r\n// Пример: вывести список элементов, расположенных в корне справочника.\r\nВыборка = Справочники.Номенклатура.Выбрать(Справочники.Номенклатура.ПустаяСсылка());\r\nПока Выборка.Следующий() Цикл \r\n  Если Не Выборка.ЭтоГруппа тогда Сообщить(Выборка);\r\n  КонецЕсли;\r\nКонецЦикла;\r\n// Пример: удалить все элементы иерархического справочника.\r\nВыборка = Справочники.Номенклатура.ВыбратьИерархически();\r\nПока Выборка.Следующий() Цикл \r\n  Выборка.Удалить();\r\nКонецЦикла;\r\n\r\n5.  // объект СправочникМенеджер.<Имя справочника>\r\n  // СоздатьГруппу()\r\n  // СоздатьЭлемент()\r\n// Пример: создать новый элемент справочника ""Сотрудники"".\r\nНовыйЭлемент = Справочники.Сотрудники.СоздатьЭлемент();\r\nНовыйЭлемент.Наименование = ""Смирнов Андрей Анатольевич"";\r\n// Заполнить табличную часть ""ТрудоваяДеятельность"".\r\nНоваяСтрокаТабличнойЧасти = НовыйЭлемент.ТрудоваяДеятельность.Добавить();\r\nНоваяСтрокаТабличнойЧасти.Организация = ""ООО НТЦ"";\r\nНоваяСтрокаТабличнойЧасти.НачалоРаботы = Дата(2013,02,01);\r\nНоваяСтрокаТабличнойЧасти.ОкончаниеРаботы = Дата(2013,08,31);\r\nНоваяСтрокаТабличнойЧасти.Должность = ""Программист"";\r\nНовыйЭлемент.Записать();\r\n\r\n6.  // объект СправочникОбъект.<Имя справочника>, СправочникСсылка.<Имя справочника>\r\n  // Владелец\r\n  // Родитель\r\n  // Ссылка\r\n// Пример: запретить изменение подчиненных элементов, если у\r\n// владельца установлено соответствующее свойство\r\n// ""ИзмененияЗапрещены"" в модуле формы элемента справочника.\r\nПроцедура ПередЗаписью(Отказ)\r\n  Если Владелец.ИзмененияЗапрещены Тогда Отказ = Истина; \r\n  КонецЕсли;\r\nКонецПроцедуры\r\n\r\n7.  // объект СправочникСсылка.<Имя справочника>\r\n  // ПолучитьОбъект()\r\n  // СправочникОбъект.<Имя справочника>\r\n  // Скопировать()\r\n// Пример: изменить наименование элемента справочника.\r\nЭлемент = Справочники.Номенклатура.НайтиПоКоду(10).ПолучитьОбъект();\r\nЭлемент.Наименование = ""Мое новое наименование"";\r\nЭлемент.Записать();\r\n// Пример: заполнить справочник тестовыми данными.\r\nЭлемент = Справочники.Номенклатура.СоздатьЭлемент();\r\nЭлемент.Наименование = ""Тестовый элемент"";\r\nЭлемент.Записать();\r\nДля ш = 1 по 1000 Цикл \r\n  НовыйЭлемент = Элемент.Скопировать();\r\n  НовыйЭлемент.Записать();\r\nКонецЦикла;\r\n\r\n8.  // объект СправочникВыборка.<Имя справочника>\r\n  // Ссылка\r\n \r\n// Пример: заполнить табличную часть документа\r\n// ""ПриходнаяНакладная"" всеми элементами из указанной группы справочника ""Номенклатура"".\r\nВыборка = Справочники.Номенклатура.ВыбратьИерархически(ПолеВвода1);\r\nПока Выборка.Следующий() Цикл \r\n  СсылкаНаНоменклатуру = Выборка.Ссылка;\r\n  Если СсылкаНаНоменклатуру.ЭтоГруппа Тогда Продолжить; \r\n  КонецЕсли;\r\n  НоваяСтрока = Материалы.Добавить();\r\n  НоваяСтрока.Материал = СсылкаНаНоменклатуру;\r\nКонецЦикла;\r\n\r\n9.  // объект СправочникВыборка.<Имя справочника>\r\n  // ПолучитьОбъект() \r\n// Пример: пометить все элементы неиерархического справочника на удаление.\r\nВыборка = Справочники.Клиенты.Выбрать();\r\nПока Выборка.Следующий() Цикл \r\n  Выборка.ПолучитьОбъект().УстановитьПометкуУдаления(Истина);\r\nКонецЦикла;\r\n"'
5758  1     RBRACE               '}'
5759  0     RBRACE               '}'
5760  0     RBRACE               '}'
5760  1     T__0                 ','
5761  0     LBRACE               '{'
5761  1     T__2                 '1'
5761  2     T__0                 ','
5762  0     LBRACE               '{'
5762  1     STRING               '"Информация"'
5762  13    T__0                 ','
5762  14    T__2                 '1'
5762  15    T__0                 ','
5762  16    T__1                 '0'
5762  17    T__0                 ','
5762  18    STRING               '""'
5762  20    T__0                 ','
5762  21    STRING               '""'
5762  23    RBRACE               '}'
5762  24    T__0                 ','
5763  0     LBRACE               '{'
5763  1     T__1                 '0'
5763  2     T__0                 ','
5764  0     LBRACE               '{'
5764  1     STRING               '"ЗаполнитьЗначенияСвойств(КудаКопировать, ОткудаКопировать)"'
5764  61    T__0                 ','
5764  62    T__1                 '0'
5764  63    T__0                 ','
5764  64    T__1                 '0'
5764  65    T__0                 ','
5764  66    STRING               '""'
5764  68    T__0                 ','
5764  69    STRING               '"//Для использования процедуры ЗаполнитьЗначенияСвойств(КудаКопировать, ОткудаКопировать) в 1С необходимо выполнить следующие условия:\r\n\r\n//1. Оба параметра КудаКопировать и ОткудаКопировать должны быть ссылками на объекты, у которых совпадают типы и имена свойств.\r\n//2. Оба объекта должны быть открытыми для записи.\r\n//3. Объект КудаКопировать должен быть создан и инициализирован.\r\n//4. Объект ОткудаКопировать должен быть создан и содержать значения свойств, которые будут скопированы в объект КудаКопировать.\r\n\r\n//Пример использования:\r\n\r\n//```1C\r\nПерем КудаКопировать, ОткудаКопировать;\r\nКудаКопировать = Новый Объект(""Справочник.НовыйСправочник"");\r\nОткудаКопировать = Справочники.СуществующийСправочник.НайтиПоКоду(""123"");\r\n\r\nЗаполнитьЗначенияСвойств(КудаКопировать, ОткудаКопировать);\r\n```\r\n\r\n//В данном примере происходит копирование значений свойств объекта ОткудаКопировать в объект КудаКопировать."'
5781  109   RBRACE               '}'
5782  0     RBRACE               '}'
5783  0     RBRACE               '}'
5783  1     T__0                 ','
5784  0     LBRACE               '{'
5784  1     T__1                 '0'
5784  2     T__0                 ','
5785  0     LBRACE               '{'
5785  1     STRING               '"Уникальный идентификатор (GUID)"'
5785  34    T__0                 ','
5785  35    T__1                 '0'
5785  36    T__0                 ','
5785  37    T__1                 '0'
5785  38    T__0                 ','
5785  39    STRING               '""'
5785  41    T__0                 ','
5785  42    STRING               '"СправочникСсылка = Справочники.ИмяСправочника.НайтиПоНаименованию(""Наименование"");\r\nGUID = СправочникСсылка.УникальныйИдентификатор();\r\n\r\n//Любой элемент справочника или документ хранится в базе данных. \r\n//Для идентификации он имеет уникальный «номер» в рамках базы \r\n//данных - GUID. В понятиях встроенного языка 1С, этот GUID это ссылка.\r\n\r\n//GUID назначается в момент первой записи объекта. Уже до записи \r\n//можно узнать GUID, который будет назначен объекту при записи\r\n\r\nСправочникОбъект = Справочники.ИмяСправочника.СоздатьЭлемент();\r\nGUID = СправочникОбъект.ПолучитьСсылкуНового().УникальныйИдентификатор();\r\n\r\n//Также перед записью можно назначить свой GUID. Это бывает \r\n//полезным, например, при обмене данными:\r\nGUID = ""Нужный нам GUID""; //строка GUID обычно выглядит 6F9619FF-8B86-D011-B42D-00CF4FC964FF\r\nСправочникОбъект = Справочники.ИмяСправочника.СоздатьЭлемент();\r\nСправочникОбъект.УстановитьСсылкуНового(Справочники.ИмяСправочника.ПолучитьСсылку(Новый УникальныйИдентификатор(GUID)));\r\n"'
5803  1     RBRACE               '}'
5804  0     RBRACE               '}'
5805  0     RBRACE               '}'
5805  1     T__0                 ','
5806  0     LBRACE               '{'
5806  1     INT                  '3'
5806  2     T__0                 ','
5807  0     LBRACE               '{'
5807  1     STRING               '"Оповещения"'
5807  13    T__0                 ','
5807  14    T__2                 '1'
5807  15    T__0                 ','
5807  16    T__1                 '0'
5807  17    T__0                 ','
5807  18    STRING               '""'
5807  20    T__0                 ','
5807  21    STRING               '""'
5807  23    RBRACE               '}'
5807  24    T__0                 ','
5808  0     LBRACE               '{'
5808  1     T__1                 '0'
5808  2     T__0                 ','
5809  0     LBRACE               '{'
5809  1     STRING               '"Оповещение объекта(Передача параметра)"'
5809  41    T__0                 ','
5809  42    T__1                 '0'
5809  43    T__0                 ','
5809  44    T__1                 '0'
5809  45    T__0                 ','
5809  46    STRING               '""'
5809  48    T__0                 ','
5809  49    STRING               '"//Модуль формы\r\n//Событие ""ПриИзменении"" поля ""Покупатель""\r\n&НаКлиенте\r\nПроцедура ПокупательПриИзменении(Элемент)\r\n    //Отправляем оповещение о событии\r\n    Оповестить(""ИзменилиПокупателя"", Объект.Покупатель);\r\nКонецПроцедуры\r\n//Обработка оповещения формы\r\n&НаКлиенте\r\nПроцедура ОбработкаОповещения(ИмяСобытия, Параметр, Источник)\r\n    Если ИмяСобытия = ""ИзменилиПокупателя"" Тогда\r\n        Сообщить(""Текущий покупатель: "" + Параметр);\r\n    КонецЕсли;\r\nКонецПроцедуры"'
5822  15    RBRACE               '}'
5823  0     RBRACE               '}'
5823  1     T__0                 ','
5824  0     LBRACE               '{'
5824  1     T__1                 '0'
5824  2     T__0                 ','
5825  0     LBRACE               '{'
5825  1     STRING               '"Оповещение пользователя"'
5825  26    T__0                 ','
5825  27    T__1                 '0'
5825  28    T__0                 ','
5825  29    T__1                 '0'
5825  30    T__0                 ','
5825  31    STRING               '""'
5825  33    T__0                 ','
5825  34    STRING               '"ПоказатьОповещениеПользователя(""Простое оповещение пользователя!"");"'
5825  105   RBRACE               '}'
5826  0     RBRACE               '}'
5826  1     T__0                 ','
5827  0     LBRACE               '{'
5827  1     T__1                 '0'
5827  2     T__0                 ','
5828  0     LBRACE               '{'
5828  1     STRING               '"Оповещение со ссылкой"'
5828  24    T__0                 ','
5828  25    T__1                 '0'
5828  26    T__0                 ','
5828  27    T__1                 '0'
5828  28    T__0                 ','
5828  29    STRING               '""'
5828  31    T__0                 ','
5828  32    STRING               '"Оповещение со ссылкой\r\n//Событие ""ПриОткрытии"" формы документа\r\n&НаКлиенте\r\nПроцедура ПриОткрытии(Отказ)\r\n    //Если документ за предыдущие года\r\n    Если Год(ТекущаяДата()) > Год(Объект.Дата) Тогда\r\n        //Получаем ссылку на документ\r\n        НавигационнаяСсылка = ПолучитьНавигационнуюСсылку(Объект.Ссылка);\r\n        //Оповещаем пользователя о запрете редактирования\r\n        ПоказатьОповещениеПользователя(""Разрешен только просмотр!"",\r\n            НавигационнаяСсылка,\r\n            ""Документ №"" + Объект.Номер + "" от "" + Объект.Дата);\r\n    КонецЕсли;\r\nКонецПроцедуры"'
5841  15    RBRACE               '}'
5842  0     RBRACE               '}'
5843  0     RBRACE               '}'
5843  1     T__0                 ','
5844  0     LBRACE               '{'
5844  1     INT                  '5'
5844  2     T__0                 ','
5845  0     LBRACE               '{'
5845  1     STRING               '"ФункциональныеОпции"'
5845  22    T__0                 ','
5845  23    T__2                 '1'
5845  24    T__0                 ','
5845  25    T__1                 '0'
5845  26    T__0                 ','
5845  27    STRING               '""'
5845  29    T__0                 ','
5845  30    STRING               '""'
5845  32    RBRACE               '}'
5845  33    T__0                 ','
5846  0     LBRACE               '{'
5846  1     T__1                 '0'
5846  2     T__0                 ','
5847  0     LBRACE               '{'
5847  1     STRING               '"Обновить Интерфейс"'
5847  21    T__0                 ','
5847  22    T__1                 '0'
5847  23    T__0                 ','
5847  24    T__1                 '0'
5847  25    T__0                 ','
5847  26    STRING               '""'
5847  28    T__0                 ','
5847  29    STRING               '"//При изменении значений ФО в константах, результат можно увидеть сразу же в текущем сеансе,\r\n//после выполнения следующей команды\r\nОбновитьИнтерфейс();\r\n"'
5850  1     RBRACE               '}'
5851  0     RBRACE               '}'
5851  1     T__0                 ','
5852  0     LBRACE               '{'
5852  1     T__1                 '0'
5852  2     T__0                 ','
5853  0     LBRACE               '{'
5853  1     STRING               '"Получение значения"'
5853  21    T__0                 ','
5853  22    T__1                 '0'
5853  23    T__0                 ','
5853  24    T__1                 '0'
5853  25    T__0                 ','
5853  26    STRING               '""'
5853  28    T__0                 ','
5853  29    STRING               '"ПолучитьФункциональнуюОпцию(<Имя ФО>);"'
5853  69    RBRACE               '}'
5854  0     RBRACE               '}'
5854  1     T__0                 ','
5855  0     LBRACE               '{'
5855  1     T__1                 '0'
5855  2     T__0                 ','
5856  0     LBRACE               '{'
5856  1     STRING               '"Установить параметры реквизит справочника"'
5856  44    T__0                 ','
5856  45    T__1                 '0'
5856  46    T__0                 ','
5856  47    T__1                 '0'
5856  48    T__0                 ','
5856  49    STRING               '""'
5856  51    T__0                 ','
5856  52    STRING               '"Процедура ПриСозданииНаСервере()  \r\n	// Модуль формы Контрагент \r\n	//Пример управления видимостью команды «Договоры» в форме элемента справочника «Контрагенты»:\r\n	\r\n	//Необходимо создать ФО с местом хранения – реквизит справочника «Контрагенты.ИспользоватьДоговоры». \r\n	//В состав ФО включить справочник «Договоры». Также, необходимо создать параметр ФО «Контрагент» и установить \r\n	//для свойства «Использование» - справочник Контрагенты\r\n	\r\n	// нужно присваивать значению параметра ФО ссылку на текущий объект\r\n     УстановитьПараметрыФункциональныхОпцийФормы(Новый Структура(""Контрагент"", Ссылка));  \r\n	 \r\n	 //Недостатком данного решения, является необходимость записи контрагента для управления \r\n	 //видимостью команды «Договоры». Для решения этой проблемы, можно использовать\r\n	 //для хранения значений функциональных опций отдельный справочник. В таком варианте, при изменении \r\n	 //управляющего реквизита нет необходимости перезаписывать данные текущего справочника,\r\n	 //и результат будет виден непосредственно после изменения. Дополнительным преимуществом такого варианта, будет использование одного параметра ФО «НастройкаФормы» для управления видимостью команд навигации произвольного количества объектов.\r\n	 //Свойство параметра ФО «Использование», \r\n	 //в данном случае, должно указывать на справочник с настройками \r\n	 \r\n КонецПроцедуры\r\n \r\n Процедура ПриСозданииНаСервере() \r\n    // Модуль формы НастройкиФормы\r\n	Запрос = Новый Запрос;\r\n    Запрос.Текст = ""ВЫБРАТЬ\r\n                        |          ПараметрыФО.Ссылка\r\n                        |ИЗ\r\n                        |          Справочник. ПараметрыФО КАК ПараметрыФО\r\n                        |ГДЕ\r\n                        |          ПараметрыФО. ИспользоватьДоговоры = & ИспользоватьДоговоры "";\r\n    Запрос.УстановитьПараметр(""ИспользоватьДоговоры "", Объект. ИспользоватьДоговоры);\r\n\r\n    РезультатЗапроса = Запрос.Выполнить();\r\n    ВыборкаДетальныеЗаписи = РезультатЗапроса.Выбрать();\r\n\r\n    Если ВыборкаДетальныеЗаписи.Следующий() Тогда\r\n       ЭлементНастройки = ВыборкаДетальныеЗаписи.Ссылка;\r\n    Иначе\r\n       НовыйЭлементНастройки = Справочники. ПараметрыФО.СоздатьЭлемент();\r\n       НовыйЭлементНастройки. ИспользоватьДоговоры = Объект. ИспользоватьДоговоры;\r\n       НовыйЭлементНастройки.Записать();\r\n       ЭлементНастройки = НовыйЭлементНастройки.Ссылка;                \r\n    КонецЕсли;  \r\n\r\n    УстановитьПараметрыФункциональныхОпцийФормы Новый Структура(""НастройкаФормы"", ЭлементНастройки));\r\n КонецПроцедуры\r\n	 "'
5902  3     RBRACE               '}'
5903  0     RBRACE               '}'
5903  1     T__0                 ','
5904  0     LBRACE               '{'
5904  1     T__1                 '0'
5904  2     T__0                 ','
5905  0     LBRACE               '{'
5905  1     STRING               '"Установить параметры ресурс регистра сведений"'
5905  48    T__0                 ','
5905  49    T__1                 '0'
5905  50    T__0                 ','
5905  51    T__1                 '0'
5905  52    T__0                 ','
5905  53    STRING               '""'
5905  55    T__0                 ','
5905  56    STRING               '"//Применение данного варианта параметризуемых ФО похоже на вариант с местом хранения – реквизит справочника. \r\n//Отличием можно считать возможность использования нескольких параметров для отбора значения ФО.\r\n//А также использование системного параметра ФО «Период» для отбора значения по дате в том случае, если для \r\n//хранения значений ФО используется периодический регистр сведений:\r\n//Каждое измерение регистра сведений – это отдельный параметр ФО, \r\n//который необходимо установить в форме. Дополнительно, можно установить параметр «Период», \r\n//если требуется получить значение на определенную дату.\r\n\r\n//Данный функционал удобно использовать в формах документов, для управления видимостью элементов\r\n//в зависимости от даты. Например, настроить видимость реквизитов или команд панели навигации в \r\n//зависимости от данных учетной политики, действующей на дату документа \r\n\r\nПараметрыФО = Новый Структура;\r\nПараметрыФО.Вставить(""Период"", Объект.Дата);\r\nПараметрыФО.Вставить(""Организация"", Объект.Организация);\r\nПараметрыФО.Вставить(""Склад"", Объект.Склад);\r\nУстановитьПараметрыФункциональныхОпцийФормы(ПараметрыФО);  \r\n\r\n//Также, можно настроить опционально (в зависимости от даты документа)\r\n//выполнение каких либо произвольных действий. Например дополнительные отборы при\r\n//выборе значений реквизитов. Для этого нужно будет обращаться к значению ФО напрямую:\r\n\r\nЕсли ПолучитьФукнциональнуюОпциюФормы(«ИспользоватьДополнительныйОтбор») Тогда\r\n   //...\r\nКонецЕсли;  \r\n\r\n//существует возможность получения значений параметризуемой ФО вне контекста \r\n//определенной формы, в любом месте программного кода:\r\n\r\nПараметрыФО = Новый Структура;\r\nПараметрыФО.Вставить(""Период"", Объект.Дата);\r\nПараметрыФО.Вставить(""Организация"", Объект.Организация);\r\nПараметрыФО.Вставить(""Склад"", Объект.Склад);\r\nПолучитьФункциональнуюОпцию(""ИспользоватьДополнительныйОтбор "", ПараметрыФО);   \r\n//В качестве второго параметра, в данном случае, передается структура со значениями параметров ФО\r\n\r\n"'
5941  1     RBRACE               '}'
5942  0     RBRACE               '}'
5942  1     T__0                 ','
5943  0     LBRACE               '{'
5943  1     T__1                 '0'
5943  2     T__0                 ','
5944  0     LBRACE               '{'
5944  1     STRING               '"Настройка интерфейса"'
5944  23    T__0                 ','
5944  24    T__1                 '0'
5944  25    T__0                 ','
5944  26    T__1                 '0'
5944  27    T__0                 ','
5944  28    STRING               '""'
5944  30    T__0                 ','
5944  31    STRING               '" // можно управлять видимостью интерфейса в зависимости от текущего пользователя системы,\r\n //или в зависимости от любого другого выбранного параметра (организации, склада, подразделения).\r\n\r\n//Допустим, в зависимости от организации, которая выбрана для пользователя основной, необходимо\r\n//показывать в интерфейсе дополнительные команды. Для решения такой задачи, нужно добавить в справочник\r\n//«Организации» новый реквизит «ВыводитьДопКоманды» с типом «булево». Создать новую ФО, указав в качестве\r\n//места хранения созданный реквизит. В качестве состава ФО, выбрать необходимые команды или объекты (если нужно выводить стандартные команды).\r\n//Создать новый параметр ФО с указанием в свойстве «Использование» - справочник Организации.  Далее, необходимо при запуске системы, в модуле \r\n//управляемого приложения, определять организацию, которая выбрана для текущего пользователя основной, и устанавливать параметр функциональных опций интерфейса:\r\n\r\nПараметрыФОИнтерфейса = Новый Структура;\r\nПараметрыФОИнтерфейса.Вставить(""Организация"",  ОсновнаяОрганизацияПользователя);\r\nУстановитьПараметрыФункциональныхОпцийИнтерфейса(ПараметрыФОИнтерфейса);\r\n\r\n//можно получить значение параметра ФО, который задан для текущего сеанса\r\nПараметрФООрганизация = ПолучитьПараметрыФункциональныхОпцийИнтерфейса().Организация;\r\n\r\n//параметры, установленные для интерфейса, по умолчанию передаются в управляемую форму"'
5961  87    RBRACE               '}'
5962  0     RBRACE               '}'
5963  0     RBRACE               '}'
5963  1     T__0                 ','
5964  0     LBRACE               '{'
5964  1     INT                  '7'
5964  2     T__0                 ','
5965  0     LBRACE               '{'
5965  1     STRING               '"БСП"'
5965  6     T__0                 ','
5965  7     T__2                 '1'
5965  8     T__0                 ','
5965  9     T__1                 '0'
5965  10    T__0                 ','
5965  11    STRING               '""'
5965  13    T__0                 ','
5965  14    STRING               '""'
5965  16    RBRACE               '}'
5965  17    T__0                 ','
5966  0     LBRACE               '{'
5966  1     T__1                 '0'
5966  2     T__0                 ','
5967  0     LBRACE               '{'
5967  1     STRING               '"Печать в Word из 1С(Пример)"'
5967  30    T__0                 ','
5967  31    T__1                 '0'
5967  32    T__0                 ','
5967  33    T__1                 '0'
5967  34    T__0                 ','
5967  35    STRING               '""'
5967  37    T__0                 ','
5967  38    STRING               '"// Шаг 1: Создать макет печатной формы  \r\n\r\n//Макет – обычный офисный документ,\r\n//в которым специальным образом\r\n//выделены области и параметры.\r\n//Может быть создан в программах:\r\n//• Microsoft Word\r\n//• OpenOffice.org Writer\r\n//• Google Docs   \r\n\r\n//Типы областей в макете\r\n\r\n//• Общая\r\n//• СтрокаТаблицы\r\n//• Список\r\n//• ВерхнийКолонтитул\r\n//• НижнийКолонтитул\r\n//• ВерхнийТитульныйКолонтитул\r\n//• НижнийТитульныйКолонтитул\r\n//• ВерхнийЧетныйКолонтитул\r\n//• НижнийЧетныйКолонтитул\r\n\r\n//Правила оформления макета\r\n\r\n//Область выделяется с помощью\r\n//разделителей вида:\r\n//{v8 Область.<Имя области>}\r\n//...\r\n//{/v8 Область.<Имя области>}\r\n\r\n//Параметры выделяются с помощью\r\n//маркеров вида:\r\n//{v8 <Имя параметра>}\r\n\r\n//Модуль Формы\r\n\r\n//Шаг 2: Добавление описания команды печати\r\n//Модуль Менеджера\r\nПроцедура ДобавитьКомандыПечати(КомандыПечати) Экспорт\r\n   КомандаПечати = КомандыПечати.Добавить();\r\n   КомандаПечати.Идентификатор = ""<НаименованиеИндентификатора>"";\r\n   КомандаПечати.Представление = НСтр(""ru ='<Название представления>(Word)'"");\r\n   КомандаПечати.Картинка = БиблиотекаКартинок.ФорматWord;\r\nКонецПроцедуры	   \r\nПроцедура Печать(МассивОбъектов,ПараметрыПечати,КоллекцияПечатныхФорм,ОбъектыПечати,ПараметрыВывода) Экспорт\r\n	ПечатнаяФорма = УправлениеПечатью.СведенияОПечатнойФорме(КоллекцияПечатныхФорм,""<НаименованиеИндентификатора>"");\r\n	Если  ПечатнаяФорма <> Неопределено Тогда\r\n	   //ОфисныеДокументы – это Соответствие:\r\n       //   • Ключ – адрес во временном хранилище, по которому находится сформированный документ\r\n       //   • Значение – Имя документа	\r\n	   ОфисныеДокументы = СформироватьКоммерческоеПредложение(МассивОбъектов); \r\n	   ПечатнаяФорма.ОфисныеДокументы = ОфисныеДокументы;\r\n	   ПечатнаяФорма.СинонимМакета = НСтр(""ru ='<Название>'"");\r\n	КонецЕсли\r\nКонецПроцедуры\r\n\r\n//Алгоритм формирования печатной формы:\r\n//1. Получить макет печатной формы:\r\n//  - метод УправлениеПечатью.МакетПечатнойФормы\r\n//2. Инициализировать макет для заполнения документа Open XМL\r\n//  - метод УправлениеПечатью.ИнициализироватьМакетОфисногоДокумента\r\n//3. Создать и заполнить структуру областей формируемой печатной формы\r\n//4. Получить данные для печати из информационной базы\r\n//5. Сформировать печатную форму в следующей последовательности:\r\n//  • Подготовить печатную форму в формате офисного документа\r\n//    - метод УправлениеПечатью.ИнициализироватьПечатнуюФорму\r\n//  • Произвести заполнение областей печатной формы\r\n//    - для получения области метод УправлениеПечатью.ОбластьМакета\r\n//    - для заполнения области УправлениеПечатью.ПрисоединитьОбластьИЗаполнитьПараметры\r\n//  • Поместить заполненную печатную форму в соответствие, являющееся результатом функции\r\n//6. Удалить временные файлы с помощью метода УправлениеПечатью.ОчиститьСсылки\r\n\r\nФункция СформироватьКоммерческоеПредложение(Ссылка)\r\n  \r\n 	// Подготавливаем макет для формирования печатной формы OpenXML\r\n    МакетДокумента = УправлениеПечатью.МакетПечатнойФормы(""Документ.ЗаказКлиента.ПФ_DOC_КоммерческоеПредложение"");\r\n    Макет = УправлениеПечатью.ИнициализироватьМакетОфисногоДокумента(МакетДокумента, Неопределено);\r\n	\r\n	// Создаем структуру областей формируемой печатной формы OpenXМL\r\n	ОписаниеОбластей = Новый Структура;\r\n	УправлениеПечатью.ДобавитьОписаниеОбласти(ОписаниеОбластей, ""Заголовок"", ""Общая"");\r\n	УправлениеПечатью.ДобавитьОписаниеОбласти(ОписаниеОбластей, ""Шапка"", ""Общая"");\r\n	УправлениеПечатью.ДобавитьОписаниеОбласти(ОписаниеОбластей, ""ШапкаТаблицы"", ""Общая"");\r\n	УправлениеПечатью.ДобавитьОписаниеОбласти(ОписаниеОбластей, ""СтрокаТаблицы"", ""СтрокаТаблицы"");\r\n	УправлениеПечатью.ДобавитьОписаниеОбласти(ОписаниеОбластей, ""Подвал"", ""Общая"");\r\n	\r\n	// Подготавливаем печатную форму в формате офисного документа\r\n	ПечатнаяФорма = УправлениеПечатью.ИнициализироватьПечатнуюФорму(Неопределено, Неопределено, Макет);\r\n\r\n	//получаем данные документа\r\n	Запрос = Новый Запрос;\r\n	Запрос.Текст = \r\n		""ВЫБРАТЬ\r\n		|	ЗаказКлиента.Номер КАК Номер,\r\n		|	ЗаказКлиента.Дата КАК Дата,\r\n		|	ЗаказКлиента.Контрагент КАК ПредставлениеЗаказчика,\r\n		|	ЗаказКлиента.Договор КАК Договор,\r\n		|	ЗаказКлиента.СуммаДокумента КАК СуммаДокумента,\r\n		|	ЗаказКлиента.Ответственный КАК Менеджер,\r\n		|	ЗаказКлиента.Комментарий КАК Комментарий,\r\n		|	ЗаказКлиента.Организация КАК ПредставлениеОрганизации,\r\n		|	ЗаказКлиента.Организация.Телефон КАК Телефон,\r\n		|	ЗаказКлиента.Организация.ЭлПочта КАК Email\r\n		|ИЗ\r\n		|	Документ.ЗаказКлиента КАК ЗаказКлиента\r\n		|ГДЕ\r\n		|	ЗаказКлиента.Ссылка = &Ссылка\r\n		|;\r\n		|\r\n		|////////////////////////////////////////////////////////////////////////////////\r\n		|ВЫБРАТЬ\r\n		|	ЗаказКлиентаТовары.Ссылка КАК Ссылка,\r\n		|	ЗаказКлиентаТовары.НомерСтроки КАК НС,\r\n		|	ЗаказКлиентаТовары.Номенклатура КАК Номенклатура,\r\n		|	ЗаказКлиентаТовары.Количество КАК Количество,\r\n		|	ЗаказКлиентаТовары.ЕдиницаИзмерения КАК ЕдИзм,\r\n		|	ЗаказКлиентаТовары.Цена КАК Цена,\r\n		|	ЗаказКлиентаТовары.СтавкаНДС КАК СтавкаНДС,\r\n		|	ЗаказКлиентаТовары.Сумма КАК Сумма,\r\n		|	ЗаказКлиентаТовары.СуммаНДС КАК СуммаНДС,\r\n		|	ЗаказКлиентаТовары.СуммаВсего КАК СуммаВсего\r\n		|ИЗ\r\n		|	Документ.ЗаказКлиента.Товары КАК ЗаказКлиентаТовары\r\n		|ГДЕ\r\n		|	ЗаказКлиентаТовары.Ссылка = &Ссылка"";\r\n	\r\n	Запрос.УстановитьПараметр(""Ссылка"", Ссылка);\r\n	\r\n	ДанныеДляПечати = Запрос.ВыполнитьПакет();\r\n\r\n	Шапка = ДанныеДляПечати[0].Выгрузить();\r\n	Товары = ДанныеДляПечати[1].Выгрузить();\r\n	\r\n	ДанныеШапка = ОбщегоНазначения.СтрокаТаблицыЗначенийВСтруктуру(Шапка[0]);\r\n	ДанныеШапка[""Номер""] = ПрефиксацияОбъектовКлиентСервер.НомерНаПечать(ДанныеШапка[""Номер""]);\r\n	ДанныеШапка[""Дата""] = Формат(ДанныеШапка[""Дата""], ""ДФ=dd.MM.yyyy"");\r\n	\r\n	ДанныеТовары = ОбщегоНазначения.ТаблицаЗначенийВМассив(Товары);\r\n	\r\n	// Вывод заголовка\r\n	Область = УправлениеПечатью.ОбластьМакета(Макет, ОписаниеОбластей[""Заголовок""]);\r\n	УправлениеПечатью.ПрисоединитьОбластьИЗаполнитьПараметры(ПечатнаяФорма, Область, ДанныеШапка);\r\n		\r\n	// Вывод шапки документа\r\n	Область = УправлениеПечатью.ОбластьМакета(Макет, ОписаниеОбластей[""Шапка""]);\r\n	УправлениеПечатью.ПрисоединитьОбластьИЗаполнитьПараметры(ПечатнаяФорма, Область, ДанныеШапка);\r\n	\r\n	// Вывод таблицы\r\n	Если ДанныеТовары.Количество() > 0 Тогда\r\n		Область = УправлениеПечатью.ОбластьМакета(Макет, ОписаниеОбластей[""ШапкаТаблицы""]);\r\n		УправлениеПечатью.ПрисоединитьОбласть(ПечатнаяФорма, Область, Ложь);\r\n		Область = УправлениеПечатью.ОбластьМакета(Макет, ОписаниеОбластей[""СтрокаТаблицы""]);\r\n		УправлениеПечатью.ПрисоединитьИЗаполнитьКоллекцию(ПечатнаяФорма, Область, ДанныеТовары);\r\n	КонецЕсли;\r\n\r\n	// Вывод подвала\r\n	Область = УправлениеПечатью.ОбластьМакета(Макет, ОписаниеОбластей[""Подвал""]);\r\n	УправлениеПечатью.ПрисоединитьОбластьИЗаполнитьПараметры(ПечатнаяФорма, Область, ДанныеШапка);\r\n\r\n	// Помещаем сформированную печатную форму в соответствие ОфисныеДокументы\r\n	АдресХранилищаПечатнойФормы = УправлениеПечатью.СформироватьДокумент(ПечатнаяФорма);\r\n	\r\n	//удаление временных файлов\r\n	УправлениеПечатью.ОчиститьСсылки(ПечатнаяФорма);	\r\n	УправлениеПечатью.ОчиститьСсылки(Макет);\r\n\r\n	Возврат АдресХранилищаПечатнойФормы;\r\n	\r\nКонецФункции // СформироватьКоммерческоеПредложение()\r\n"'
6136  1     RBRACE               '}'
6137  0     RBRACE               '}'
6137  1     T__0                 ','
6138  0     LBRACE               '{'
6138  1     T__1                 '0'
6138  2     T__0                 ','
6139  0     LBRACE               '{'
6139  1     STRING               '"Печать Создание печатной формы "'
6139  34    T__0                 ','
6139  35    T__1                 '0'
6139  36    T__0                 ','
6139  37    T__1                 '0'
6139  38    T__0                 ','
6139  39    STRING               '""'
6139  41    T__0                 ','
6139  42    STRING               '"//1. ОбщийМодуль УправлениеПечатьюПредопределенный\r\n// Добавить в процедуру ПриОпределенииОбъектовСКомандамиПечати\r\nСписокОбъектов.Добавить(Документы.<ИмяДокумента>);\r\n\r\n//2.МОДУЛЬ МЕНЕДЖЕРА ОБЪЕКТА \r\n#Область ПрограммныйИнтерфейс\r\n\r\n// Заполняет список команд печати.\r\n// \r\n// Параметры:\r\n//   КомандыПечати – ТаблицаЗначений – состав полей см. в функции УправлениеПечатью.СоздатьКоллекциюКомандПечати.\r\n//\r\nПроцедура ДобавитьКомандыПечати(КомандыПечати) Экспорт\r\n	\r\n	// Счет на оплату\r\n	КомандаПечати = КомандыПечати.Добавить();\r\n	КомандаПечати.МенеджерПечати = ""Документ.<ИмяДокумента>"";\r\n	КомандаПечати.Идентификатор = ""<Идентификатор>"";                     \r\n	//КомандаПечати.МестоРазмещения = ""<ИмяПодменюНаФорме>"";\r\n	КомандаПечати.Представление = НСтр(""ru = '<Представление>'"");\r\n	КомандаПечати.ПроверкаПроведенияПередПечатью = Ложь; \r\n\r\nКонецПроцедуры\r\n\r\n#КонецОбласти \r\n\r\n// Формирует печатные формы.\r\n//\r\n// Параметры:\r\n//  МассивОбъектов – Массив – ссылки на объекты, которые нужно распечатать;\r\n//  ПараметрыПечати – Структура – дополнительные настройки печати;\r\n//  КоллекцияПечатныхФорм – ТаблицаЗначений – сформированные табличные документы (выходной параметр)\r\n//  ОбъектыПечати – СписокЗначений – значение – ссылка на объект;\r\n//                                            представление – имя области, в которой был выведен объект (выходной параметр);\r\n//  ПараметрыВывода – Структура – дополнительные параметры сформированных табличных документов (выходной параметр).\r\n//\r\nПроцедура Печать(МассивОбъектов, ПараметрыПечати, КоллекцияПечатныхФорм, ОбъектыПечати, ПараметрыВывода) Экспорт\r\n	\r\n	ПечатнаяФорма = УправлениеПечатью.СведенияОПечатнойФорме(КоллекцияПечатныхФорм, ""<Идентификатор>"");\r\n    Если ПечатнаяФорма <> Неопределено Тогда\r\n        ПечатнаяФорма.ТабличныйДокумент = <ИмяПроцедурыФормированияТабДокумента>(МассивОбъектов, ОбъектыПечати);\r\n        ПечатнаяФорма.СинонимМакета = НСтр(""ru = '<СинонимМакета>'"");\r\n        ПечатнаяФорма.ПолныйПутьКМакету = ""Документ.<ИмяДокумента>.<ИмяМакета>"";\r\n	КонецЕсли;\r\n	\r\nКонецПроцедуры      \r\n\r\n// Формирует табличный документ печатной формы ""Счет на оплату""\r\n//\r\n// Параметры:\r\n//  МассивОбъектов – Массив – ссылки на объекты, которые нужно распечатать;\r\n//  ПараметрыПечати – Структура – дополнительные настройки печати;\r\n//\r\nФункция ПечатьСчетаНаОплату(МассивОбъектов, ОбъектыПечати)\r\n	\r\n	// Создаем табличный документ и устанавливаем имя параметров печати.\r\n    ТабличныйДокумент = Новый ТабличныйДокумент;\r\n    ТабличныйДокумент.КлючПараметровПечати = ""ПараметрыПечати_<Идентификатор>"";\r\n	\r\n	Макет = УправлениеПечатью.МакетПечатнойФормы(""Документ.<ИмяДокумента>.<ИмяМакета>"");\r\n	\r\n    // Получаем запросом необходимые данные.\r\n    Запрос = Новый Запрос();\r\n    Запрос.Текст =\r\n    ""ВЫБРАТЬ\r\n    |	ТаблицаДокумента.Ссылка КАК Ссылка\r\n    |ИЗ\r\n    |	Документ.<ИмяДокумента> КАК ТаблицаДокумента\r\n    |ГДЕ\r\n    |	ТаблицаДокумента.Ссылка В(&МассивОбъектов)"";\r\n	\r\n	Запрос.УстановитьПараметр(""МассивОбъектов"", МассивОбъектов);\r\n    Шапка = Запрос.Выполнить().Выбрать();\r\n    \r\n    ПервыйДокумент = Истина;\r\n    \r\n    Пока Шапка.Следующий() Цикл\r\n		\r\n		Если Не ПервыйДокумент Тогда\r\n            // Все документы нужно выводить на разных страницах.\r\n            ТабличныйДокумент.ВывестиГоризонтальныйРазделительСтраниц();\r\n        КонецЕсли;\r\n        ПервыйДокумент = Ложь;\r\n        // Запомним номер строки, с которой начали выводить текущий документ.\r\n        НомерСтрокиНачало = ТабличныйДокумент.ВысотаТаблицы + 1;\r\n\r\n		//Начало вывода документа\r\n		//...алгоритм заполнения табличного документа...\r\n		//Конец вывода документа\r\n		\r\n        // В табличном документе необходимо задать имя области, в которую был \r\n        // выведен объект. Нужно для возможности печати комплектов документов.\r\n        УправлениеПечатью.ЗадатьОбластьПечатиДокумента(ТабличныйДокумент, \r\n            НомерСтрокиНачало, ОбъектыПечати, Шапка.Ссылка);\r\n\r\n	КонецЦикла;\r\n\r\n	Возврат ТабличныйДокумент;\r\n	\r\nКонецФункции    \r\n\r\n//3. МОДУЛЬ ФОРМЫ ДОКУМЕНТА\r\n\r\n//1. Добавить в процедуру ""ПриСозданииНаСервере""\r\n\r\n// СтандартныеПодсистемы.ПодключаемыеКоманды\r\nПодключаемыеКоманды.ПриСозданииНаСервере(ЭтотОбъект);\r\n// Конец СтандартныеПодсистемы.ПодключаемыеКоманды\r\n\r\n//*****************************************************\r\n\r\n//2. Добавить в процедуру ""ПриЧтенииНаСервере""\r\n// СтандартныеПодсистемы.ПодключаемыеКоманды\r\nПодключаемыеКомандыКлиентСервер.ОбновитьКоманды(ЭтотОбъект, Объект);\r\n// Конец СтандартныеПодсистемы.ПодключаемыеКоманды\r\n\r\n//*****************************************************\r\n\r\n//3. Добавить в процедуру ""ПриОткрытии""\r\n\r\n// СтандартныеПодсистемы.ПодключаемыеКоманды\r\nПодключаемыеКомандыКлиент.НачатьОбновлениеКоманд(ЭтотОбъект);\r\n// Конец СтандартныеПодсистемы.ПодключаемыеКоманды\r\n\r\n//*****************************************************\r\n\r\n//4. Добавить в процедуру ""ПослеЗаписи""\r\n	\r\n// СтандартныеПодсистемы.ПодключаемыеКоманды\r\nПодключаемыеКомандыКлиент.ПослеЗаписи(ЭтотОбъект, Объект, ПараметрыЗаписи);\r\n// Конец СтандартныеПодсистемы.ПодключаемыеКоманды\r\n\r\n\r\n//*****************************************************\r\n\r\n//5. Добавить в модуль формы следующие процедуры\r\n\r\n// СтандартныеПодсистемы.ПодключаемыеКоманды\r\n&НаКлиенте\r\nПроцедура Подключаемый_ВыполнитьКоманду(Команда)\r\n    ПодключаемыеКомандыКлиент.НачатьВыполнениеКоманды(ЭтотОбъект, Команда, Объект);\r\nКонецПроцедуры\r\n\r\n&НаКлиенте\r\nПроцедура Подключаемый_ПродолжитьВыполнениеКомандыНаСервере(ПараметрыВыполнения, ДополнительныеПараметры) Экспорт\r\n    ВыполнитьКомандуНаСервере(ПараметрыВыполнения);\r\nКонецПроцедуры\r\n\r\n&НаСервере\r\nПроцедура ВыполнитьКомандуНаСервере(ПараметрыВыполнения)\r\n    ПодключаемыеКоманды.ВыполнитьКоманду(ЭтотОбъект, ПараметрыВыполнения, Объект);\r\nКонецПроцедуры\r\n\r\n&НаКлиенте\r\nПроцедура Подключаемый_ОбновитьКоманды()\r\n    ПодключаемыеКомандыКлиентСервер.ОбновитьКоманды(ЭтотОбъект, Объект);\r\nКонецПроцедуры\r\n\r\n// Конец СтандартныеПодсистемы.ПодключаемыеКоманды\r\n\r\n//*****************************************************\r\n//Примечание:\r\n//Объект - Имя реквизита формы типа ""ДанныеФормыСтруктура"" (основной реквизит формы документа)   \r\n\r\n//4. МОДУЛЬ ФОРМЫ СПИСКА\r\n\r\n//1. Добавить в процедуру ""ПриСозданииНаСервере""\r\n\r\n// СтандартныеПодсистемы.ПодключаемыеКоманды\r\nПодключаемыеКоманды.ПриСозданииНаСервере(ЭтотОбъект);\r\n// Конец СтандартныеПодсистемы.ПодключаемыеКоманды\r\n\r\n//*****************************************************\r\n\r\n//2. Добавить в обработчик события ""ПриАктивизацииСтроки"" таблицы формы, которая отображает список\r\n\r\n// СтандартныеПодсистемы.ПодключаемыеКоманды\r\nПодключаемыеКомандыКлиент.НачатьОбновлениеКоманд(ЭтотОбъект);\r\n// Конец СтандартныеПодсистемы.ПодключаемыеКоманды\r\n\r\n//*****************************************************\r\n\r\n//3. Добавить в модуль формы следующие процедуры\r\n\r\n// СтандартныеПодсистемы.ПодключаемыеКоманды\r\n&НаКлиенте\r\nПроцедура Подключаемый_ВыполнитьКоманду(Команда)\r\n    ПодключаемыеКомандыКлиент.НачатьВыполнениеКоманды(ЭтотОбъект, Команда, Элементы.Список);\r\nКонецПроцедуры         \r\n\r\n&НаКлиенте\r\nПроцедура Подключаемый_ПродолжитьВыполнениеКомандыНаСервере(ПараметрыВыполнения, ДополнительныеПараметры) Экспорт\r\n    ВыполнитьКомандуНаСервере(ПараметрыВыполнения);\r\nКонецПроцедуры         \r\n\r\n&НаСервере\r\nПроцедура ВыполнитьКомандуНаСервере(ПараметрыВыполнения)\r\n    ПодключаемыеКоманды.ВыполнитьКоманду(ЭтотОбъект, ПараметрыВыполнения, Элементы.Список);\r\nКонецПроцедуры         \r\n\r\n&НаКлиенте\r\nПроцедура Подключаемый_ОбновитьКоманды()\r\n    ПодключаемыеКомандыКлиентСервер.ОбновитьКоманды(ЭтотОбъект, Элементы.Список);\r\nКонецПроцедуры\r\n\r\n// Конец СтандартныеПодсистемы.ПодключаемыеКоманды\r\n\r\n//*****************************************************\r\n//Примечание:\r\n//Элементы.Список - элемент формы с типом ""ТаблицаФормы"" (который связан с динамическим списком)"'
6348  99    RBRACE               '}'
6349  0     RBRACE               '}'
6349  1     T__0                 ','
6350  0     LBRACE               '{'
6350  1     T__1                 '0'
6350  2     T__0                 ','
6351  0     LBRACE               '{'
6351  1     STRING               '"Инициализация и установка параметров сеанса"'
6351  46    T__0                 ','
6351  47    T__1                 '0'
6351  48    T__0                 ','
6351  49    T__1                 '0'
6351  50    T__0                 ','
6351  51    STRING               '""'
6351  53    T__0                 ','
6351  54    STRING               '"//Параметры сеанса устанавливаются ""лениво"", лишь при обращении к нему.\r\n\r\n// Модуль Сеанса \r\n\r\nПроцедура УстановкаПараметровСеанса(ИменаПараметровСеанса)\r\n	\r\n	// СтандартныеПодсистемы\r\n	СтандартныеПодсистемыСервер.УстановкаПараметровСеанса(ИменаПараметровСеанса);\r\n	// Конец СтандартныеПодсистемы\r\n	\r\nКонецПроцедуры\r\n\r\n //Общий модуль   ОбщегоНазначенияПереопределяемый  \r\n \r\n // Определяет соответствие имен параметров сеанса и обработчиков для их установки.\r\n// Вызывается для инициализации параметров сеанса из обработчика события модуля сеанса УстановкаПараметровСеанса\r\n// (подробнее о нем см. синтакс-помощник).\r\n//\r\n// В указанных модулях должна быть размещена процедура обработчика, в которую передаются параметры:\r\n//  ИмяПараметра           - Строка - имя параметра сеанса, который требуется установить.\r\n//  УстановленныеПараметры - Массив - имена параметров, которые уже установлены.\r\n// \r\n// Далее пример процедуры обработчика для копирования в указанные модули.\r\n//\r\n//// Параметры:\r\n////  ИмяПараметра  - Строка\r\n////  УстановленныеПараметры - Массив из Строка\r\n////\r\n//Процедура УстановкаПараметровСеанса(ИмяПараметра, УстановленныеПараметры) Экспорт\r\n//	\r\n//  Если ИмяПараметра = ""ТекущийПользователь"" Тогда\r\n//		ПараметрыСеанса.ТекущийПользователь = Значение;\r\n//		УстановленныеПараметры.Добавить(""ТекущийПользователь"");\r\n//  КонецЕсли;\r\n//	\r\n//КонецПроцедуры\r\n//\r\n// Параметры:\r\n//  Обработчики - Соответствие из КлючИЗначение:\r\n//    * Ключ     - Строка - в формате ""<ИмяПараметраСеанса>|<НачалоИмениПараметраСеанса*>"".\r\n//                   Символ '*'используется в конце имени параметра сеанса и обозначает,\r\n//                   что один обработчик будет вызван для инициализации всех параметров сеанса\r\n//                   с именем, начинающимся на слово НачалоИмениПараметраСеанса.\r\n//\r\n//    * Значение - Строка - в формате ""<ИмяМодуля>.УстановкаПараметровСеанса"".\r\n//\r\n//  Пример:\r\n//   Обработчики.Вставить(""ТекущийПользователь"", ""ПользователиСлужебный.УстановкаПараметровСеанса"");\r\n//\r\n\r\n  Процедура ПриДобавленииОбработчиковУстановкиПараметровСеанса(Обработчики) Экспорт\r\n	\r\n	Обработчики.Вставить(""ТекущийНачальникУправления"",""РаботаСПараметрамиСеансаНаСервере.УстановитьПараметрыСеанса"");\r\n	\r\nКонецПроцедуры\r\n\r\n\r\n//Процедура иницаизирущая параметры сианса  Общий модуль РаботаСПараметрамиСеансаНаСервере   \r\n//Тут мы пишем свои параметры сианса\r\n\r\n Процедура УстановитьПараметрыСеанса(ИмяПараметра, УстановленныеПараметры) Экспорт\r\n   \r\n  ОпределитьТекущегоНачальника(ТекущаяДата());  \r\n  \r\n  УстановленныеПараметры.Добавить(""ТекущийНачальникУправления"");\r\n               \r\nКонецПроцедуры\r\n\r\nПроцедура ОпределитьТекущегоНачальника(Период) Экспорт\r\n	   	\r\n	Запрос = Новый Запрос;\r\n	Запрос.Текст = \r\n		""ВЫБРАТЬ\r\n		|	УчетнаяПолитикаСрезПоследних.НачальникУправления КАК НачальникУправления\r\n		|ИЗ\r\n		|	РегистрСведений.УчетнаяПолитика.СрезПоследних(&Период, ) КАК УчетнаяПолитикаСрезПоследних"";\r\n	\r\n	Запрос.УстановитьПараметр(""Период"", Период);\r\n	\r\n	РезультатЗапроса = Запрос.Выполнить();\r\n	\r\n	Выборка = РезультатЗапроса.Выбрать();\r\n	\r\n	Если Выборка.Следующий() Тогда\r\n		ПараметрыСеанса.ТекущийНачальникУправления =  Выборка.НачальникУправления;\r\n	Иначе\r\n		Сообщить(""В регистре сведений 'Учетная политика' не указан BOSS всея управления"");\r\n	КонецЕсли;\r\n	\r\nКонецПроцедуры	\r\n"'
6441  1     RBRACE               '}'
6442  0     RBRACE               '}'
6442  1     T__0                 ','
6443  0     LBRACE               '{'
6443  1     T__1                 '0'
6443  2     T__0                 ','
6444  0     LBRACE               '{'
6444  1     STRING               '"Дополнительные отчеты и обработки"'
6444  36    T__0                 ','
6444  37    T__1                 '0'
6444  38    T__0                 ','
6444  39    T__1                 '0'
6444  40    T__0                 ','
6444  41    STRING               '""'
6444  43    T__0                 ','
6444  44    STRING               '"//Эта функция позволяет добавить внешний отчет в справочник ""Дополнительные отчеты и обработки"". Ее необходимо разместить в модуле отчета.\r\nФункция СведенияОВнешнейОбработке() Экспорт\r\n	\r\n	ПараметрыРегистрации         = ДополнительныеОтчетыИОбработки.СведенияОВнешнейОбработке();\r\n	ПараметрыРегистрации.Вид     = ДополнительныеОтчетыИОбработкиКлиентСервер.ВидОбработкиДополнительныйОтчет();\r\n	ПараметрыРегистрации.Версия  = ""1.0"";\r\n	Команда                      = ПараметрыРегистрации.Команды.Добавить();\r\n	Команда.Представление        = Метаданные().Представление();\r\n	Команда.Идентификатор        = Метаданные().ПолноеИмя();\r\n	Команда.Использование        = ДополнительныеОтчетыИОбработкиКлиентСервер.ТипКомандыОткрытиеФормы();\r\n	Команда.ПоказыватьОповещение = Ложь;\r\n\r\n	Возврат ПараметрыРегистрации;\r\n\r\nКонецФункции"'
6458  13    RBRACE               '}'
6459  0     RBRACE               '}'
6459  1     T__0                 ','
6460  0     LBRACE               '{'
6460  1     T__1                 '0'
6460  2     T__0                 ','
6461  0     LBRACE               '{'
6461  1     STRING               '"ПроверитьПроведенностьДокументов"'
6461  35    T__0                 ','
6461  36    T__1                 '0'
6461  37    T__0                 ','
6461  38    T__1                 '0'
6461  39    T__0                 ','
6461  40    STRING               '""'
6461  42    T__0                 ','
6461  43    STRING               '"//Вызов с клиента\r\nДокументыТребующиеПроведение = ОбщегоНазначенияВызовСервера.ПроверитьПроведенностьДокументов(ДокументыМассив);\r\n\r\n// Вызов с сервера\r\nДокументыТребующиеПроведение = ОбщегоНазначения.ПроверитьПроведенностьДокументов(ДокументыМассив);"'
6465  99    RBRACE               '}'
6466  0     RBRACE               '}'
6466  1     T__0                 ','
6467  0     LBRACE               '{'
6467  1     T__1                 '0'
6467  2     T__0                 ','
6468  0     LBRACE               '{'
6468  1     STRING               '"Как узнать версию БСП в 1С 8.3"'
6468  33    T__0                 ','
6468  34    T__1                 '0'
6468  35    T__0                 ','
6468  36    T__1                 '0'
6468  37    T__0                 ','
6468  38    STRING               '""'
6468  40    T__0                 ','
6468  41    STRING               '"// Текущую версию БСП можно узнать через регистр ""Версии подсистем"",\r\n// Пункт меню -> Функции для технического специалиста\r\n// И найти запись ""СтандартныеПодсистемы"" или программно:\r\n\r\n&НаСервере\r\nФункция ПолучитьВерсиюБСП()\r\n   ВерсияБСП = СтандартныеПодсистемыСервер.ВерсияБиблиотеки();\r\n   ОбщегоНазначения.СообщитьПользователю(ВерсияБСП);\r\n   Возврат ВерсияБСП;\r\nКонецФункции"'
6477  13    RBRACE               '}'
6478  0     RBRACE               '}'
6478  1     T__0                 ','
6479  0     LBRACE               '{'
6479  1     INT                  '4'
6479  2     T__0                 ','
6480  0     LBRACE               '{'
6480  1     STRING               '"Буфер обмена"'
6480  15    T__0                 ','
6480  16    T__2                 '1'
6480  17    T__0                 ','
6480  18    T__1                 '0'
6480  19    T__0                 ','
6480  20    STRING               '""'
6480  22    T__0                 ','
6480  23    STRING               '""'
6480  25    RBRACE               '}'
6480  26    T__0                 ','
6481  0     LBRACE               '{'
6481  1     T__1                 '0'
6481  2     T__0                 ','
6482  0     LBRACE               '{'
6482  1     STRING               '"СкопироватьВБуферОбмена"'
6482  26    T__0                 ','
6482  27    T__1                 '0'
6482  28    T__0                 ','
6482  29    T__1                 '0'
6482  30    T__0                 ','
6482  31    STRING               '""'
6482  33    T__0                 ','
6482  34    STRING               '"ОбщегоНазначения.СкопироватьВБуферОбмена(Данные, Источник);\r\n\r\nПроцедура ПоместитьТаблицуЗначенийВБуферОбмена(Таблица) Экспорт\r\n\r\n   ТаблицаДляБуфера = Таблица.Скопировать();\r\n   ОбщегоНазначения.СкопироватьВБуферОбмена(ТаблицаДляБуфера, ""КопированиеВставкаСтрок"");\r\n\r\nКонецПроцедуры  \r\n\r\n// Помещает произвольные данные во внутренний буфер обмена, откуда их можно получить с помощью СтрокиИзБуфераОбмена.\r\n//\r\n// Параметры:\r\n//  Данные           - Произвольный - данные, которые необходимо поместить в внутренний буфер обмена.\r\n//  Источник         - Строка       - произвольный строковый идентификатор, например, имя объекта,\r\n//                                    строки табличной части которого помещаются во внутренний буфер обмена.\r\n//\r\nПроцедура СкопироватьВБуферОбмена(Данные, Источник = Неопределено) Экспорт\r\n	\r\n	ТекущийБуферОбмена = ПараметрыСеанса.БуферОбмена;\r\n	\r\n	Если ЗначениеЗаполнено(ТекущийБуферОбмена.Данные) Тогда\r\n		Адрес = ТекущийБуферОбмена.Данные;\r\n	Иначе\r\n		Адрес = Новый УникальныйИдентификатор;\r\n	КонецЕсли;\r\n	\r\n	ДанныеВХранилище = ПоместитьВоВременноеХранилище(Данные, Адрес);\r\n	\r\n	СтруктураБуфераОбмена = Новый Структура;\r\n	СтруктураБуфераОбмена.Вставить(""Источник"", Источник);\r\n	СтруктураБуфераОбмена.Вставить(""Данные"", ДанныеВХранилище);\r\n	\r\n	ПараметрыСеанса.БуферОбмена = Новый ФиксированнаяСтруктура(СтруктураБуфераОбмена);\r\n	\r\nКонецПроцедуры\r\n"'
6517  1     RBRACE               '}'
6518  0     RBRACE               '}'
6518  1     T__0                 ','
6519  0     LBRACE               '{'
6519  1     T__1                 '0'
6519  2     T__0                 ','
6520  0     LBRACE               '{'
6520  1     STRING               '"ПустойБуферОбмена"'
6520  20    T__0                 ','
6520  21    T__1                 '0'
6520  22    T__0                 ','
6520  23    T__1                 '0'
6520  24    T__0                 ','
6520  25    STRING               '""'
6520  27    T__0                 ','
6520  28    STRING               '"Результат = ОбщегоНазначения.ПустойБуферОбмена(Источник);\r\n\r\n/ Проверяет наличие сохраненных данных во внутренний буфере обмена.\r\n//\r\n// Параметры:\r\n//  Источник - Строка - если передан, то проверяется наличие данных\r\n//             в внутреннем буфере обмена с этим ключом.\r\n//             По умолчанию - Неопределено.\r\n// Возвращаемое значение:\r\n//  Булево - Истина, если пустой.\r\n//\r\nФункция ПустойБуферОбмена(Источник = Неопределено) Экспорт\r\n\r\n   ТекущийБуферОбмена = ПараметрыСеанса.БуферОбмена; // см. СтрокиИзБуфераОбмена\r\n   ИсточникСовпадает = Истина;\r\n   Если Источник <> Неопределено Тогда\r\n       ИсточникСовпадает = (Источник = ТекущийБуферОбмена.Источник);\r\n   КонецЕсли;\r\n   Возврат (Не ИсточникСовпадает Или Не ЗначениеЗаполнено(ТекущийБуферОбмена.Данные));\r\n\r\nКонецФункции"'
6540  13    RBRACE               '}'
6541  0     RBRACE               '}'
6541  1     T__0                 ','
6542  0     LBRACE               '{'
6542  1     T__1                 '0'
6542  2     T__0                 ','
6543  0     LBRACE               '{'
6543  1     STRING               '"СкопироватьВБуферОбмена"'
6543  26    T__0                 ','
6543  27    T__1                 '0'
6543  28    T__0                 ','
6543  29    T__1                 '0'
6543  30    T__0                 ','
6543  31    STRING               '""'
6543  33    T__0                 ','
6543  34    STRING               '"ОбщегоНазначения.СкопироватьВБуферОбмена(Данные, Источник);\r\n\r\nПроцедура ПоместитьТаблицуЗначенийВБуферОбмена(Таблица) Экспорт\r\n\r\n   ТаблицаДляБуфера = Таблица.Скопировать();\r\n   ОбщегоНазначения.СкопироватьВБуферОбмена(ТаблицаДляБуфера, ""КопированиеВставкаСтрок"");\r\n\r\nКонецПроцедуры        \r\n\r\n// Помещает произвольные данные во внутренний буфер обмена, откуда их можно получить с помощью СтрокиИзБуфераОбмена.\r\n//\r\n// Параметры:\r\n//  Данные           - Произвольный - данные, которые необходимо поместить в внутренний буфер обмена.\r\n//  Источник         - Строка       - произвольный строковый идентификатор, например, имя объекта,\r\n//                                    строки табличной части которого помещаются во внутренний буфер обмена.\r\n//\r\nПроцедура СкопироватьВБуферОбмена(Данные, Источник = Неопределено) Экспорт\r\n	\r\n	ТекущийБуферОбмена = ПараметрыСеанса.БуферОбмена;\r\n	\r\n	Если ЗначениеЗаполнено(ТекущийБуферОбмена.Данные) Тогда\r\n		Адрес = ТекущийБуферОбмена.Данные;\r\n	Иначе\r\n		Адрес = Новый УникальныйИдентификатор;\r\n	КонецЕсли;\r\n	\r\n	ДанныеВХранилище = ПоместитьВоВременноеХранилище(Данные, Адрес);\r\n	\r\n	СтруктураБуфераОбмена = Новый Структура;\r\n	СтруктураБуфераОбмена.Вставить(""Источник"", Источник);\r\n	СтруктураБуфераОбмена.Вставить(""Данные"", ДанныеВХранилище);\r\n	\r\n	ПараметрыСеанса.БуферОбмена = Новый ФиксированнаяСтруктура(СтруктураБуфераОбмена);\r\n	\r\nКонецПроцедуры\r\n"'
6578  1     RBRACE               '}'
6579  0     RBRACE               '}'
6579  1     T__0                 ','
6580  0     LBRACE               '{'
6580  1     T__1                 '0'
6580  2     T__0                 ','
6581  0     LBRACE               '{'
6581  1     STRING               '"СтрокиИзБуфераОбмена"'
6581  23    T__0                 ','
6581  24    T__1                 '0'
6581  25    T__0                 ','
6581  26    T__1                 '0'
6581  27    T__0                 ','
6581  28    STRING               '""'
6581  30    T__0                 ','
6581  31    STRING               '"Результат = ОбщегоНазначения.СтрокиИзБуфераОбмена();\r\n\r\n\r\nДанныеИзБуфераОбмена = ОбщегоНазначения.СтрокиИзБуфераОбмена();\r\nЕсли ДанныеИзБуфераОбмена.Источник <> ""Товары"" Тогда\r\n   Возврат 0;\r\nКонецЕсли;\r\n\r\nБуферОбмена = ОбщегоНазначения.СтрокиИзБуфераОбмена();\r\nЕсли ТипЗнч(БуферОбмена.Данные) = Тип(""Соответствие"") Тогда\r\n   СообщенияПользователю = БуферОбмена.Данные;\r\nКонецЕсли;\r\n\r\n// Получает строки табличной части, помещенные во внутренний буфер обмена с помощью СкопироватьСтрокиВБуферОбмена.\r\n//\r\n// Возвращаемое значение:\r\n//  Структура:\r\n//     * Данные   - Произвольный - данные из внутреннего буфера обмена.\r\n//                                 Например, ТаблицаЗначений при вызове СкопироватьСтрокиВБуферОбмена.\r\n//     * Источник - Строка       - объект, к которому относятся данные.\r\n//                                 Если при помещении во внутренний буфер не был указан, то Неопределено.\r\n//\r\nФункция СтрокиИзБуфераОбмена() Экспорт\r\n	\r\n	Результат = Новый Структура;\r\n	Результат.Вставить(""Источник"", Неопределено);\r\n	Результат.Вставить(""Данные"", Неопределено);\r\n	\r\n	Если ПустойБуферОбмена() Тогда\r\n		Возврат Результат;\r\n	КонецЕсли;\r\n	\r\n	ТекущийБуферОбмена = ПараметрыСеанса.БуферОбмена; // см. СтрокиИзБуфераОбмена\r\n	Результат.Источник = ТекущийБуферОбмена.Источник;\r\n	Результат.Данные = ПолучитьИзВременногоХранилища(ТекущийБуферОбмена.Данные);\r\n	\r\n	Возврат Результат;\r\nКонецФункции\r\n"'
6619  1     RBRACE               '}'
6620  0     RBRACE               '}'
6621  0     RBRACE               '}'
6622  0     RBRACE               '}'
6622  1     T__0                 ','
6623  0     LBRACE               '{'
6623  1     INT                  '6'
6623  2     T__0                 ','
6624  0     LBRACE               '{'
6624  1     STRING               '"Инициализация типов"'
6624  22    T__0                 ','
6624  23    T__2                 '1'
6624  24    T__0                 ','
6624  25    T__1                 '0'
6624  26    T__0                 ','
6624  27    STRING               '""'
6624  29    T__0                 ','
6624  30    STRING               '""'
6624  32    RBRACE               '}'
6624  33    T__0                 ','
6625  0     LBRACE               '{'
6625  1     T__1                 '0'
6625  2     T__0                 ','
6626  0     LBRACE               '{'
6626  1     STRING               '"Дерево значений"'
6626  18    T__0                 ','
6626  19    T__2                 '1'
6626  20    T__0                 ','
6626  21    T__1                 '0'
6626  22    T__0                 ','
6626  23    STRING               '""'
6626  25    T__0                 ','
6626  26    STRING               '""'
6626  28    RBRACE               '}'
6627  0     RBRACE               '}'
6627  1     T__0                 ','
6628  0     LBRACE               '{'
6628  1     T__1                 '0'
6628  2     T__0                 ','
6629  0     LBRACE               '{'
6629  1     STRING               '"Массивы"'
6629  10    T__0                 ','
6629  11    T__2                 '1'
6629  12    T__0                 ','
6629  13    T__1                 '0'
6629  14    T__0                 ','
6629  15    STRING               '""'
6629  17    T__0                 ','
6629  18    STRING               '""'
6629  20    RBRACE               '}'
6630  0     RBRACE               '}'
6630  1     T__0                 ','
6631  0     LBRACE               '{'
6631  1     T__1                 '0'
6631  2     T__0                 ','
6632  0     LBRACE               '{'
6632  1     STRING               '"Словари"'
6632  10    T__0                 ','
6632  11    T__2                 '1'
6632  12    T__0                 ','
6632  13    T__1                 '0'
6632  14    T__0                 ','
6632  15    STRING               '""'
6632  17    T__0                 ','
6632  18    STRING               '""'
6632  20    RBRACE               '}'
6633  0     RBRACE               '}'
6633  1     T__0                 ','
6634  0     LBRACE               '{'
6634  1     T__1                 '0'
6634  2     T__0                 ','
6635  0     LBRACE               '{'
6635  1     STRING               '"Список значений"'
6635  18    T__0                 ','
6635  19    T__2                 '1'
6635  20    T__0                 ','
6635  21    T__1                 '0'
6635  22    T__0                 ','
6635  23    STRING               '""'
6635  25    T__0                 ','
6635  26    STRING               '""'
6635  28    RBRACE               '}'
6636  0     RBRACE               '}'
6636  1     T__0                 ','
6637  0     LBRACE               '{'
6637  1     T__1                 '0'
6637  2     T__0                 ','
6638  0     LBRACE               '{'
6638  1     STRING               '"Структура"'
6638  12    T__0                 ','
6638  13    T__2                 '1'
6638  14    T__0                 ','
6638  15    T__1                 '0'
6638  16    T__0                 ','
6638  17    STRING               '""'
6638  19    T__0                 ','
6638  20    STRING               '""'
6638  22    RBRACE               '}'
6639  0     RBRACE               '}'
6639  1     T__0                 ','
6640  0     LBRACE               '{'
6640  1     T__1                 '0'
6640  2     T__0                 ','
6641  0     LBRACE               '{'
6641  1     STRING               '"Таблица значений"'
6641  19    T__0                 ','
6641  20    T__2                 '1'
6641  21    T__0                 ','
6641  22    T__1                 '0'
6641  23    T__0                 ','
6641  24    STRING               '""'
6641  26    T__0                 ','
6641  27    STRING               '""'
6641  29    RBRACE               '}'
6642  0     RBRACE               '}'
6643  0     RBRACE               '}'
6643  1     T__0                 ','
6644  0     LBRACE               '{'
6644  1     INT                  '4'
6644  2     T__0                 ','
6645  0     LBRACE               '{'
6645  1     STRING               '"Отчеты и обработки"'
6645  21    T__0                 ','
6645  22    T__2                 '1'
6645  23    T__0                 ','
6645  24    T__1                 '0'
6645  25    T__0                 ','
6645  26    STRING               '""'
6645  28    T__0                 ','
6645  29    STRING               '""'
6645  31    RBRACE               '}'
6645  32    T__0                 ','
6646  0     LBRACE               '{'
6646  1     T__1                 '0'
6646  2     T__0                 ','
6647  0     LBRACE               '{'
6647  1     STRING               '"Заполнение макета"'
6647  20    T__0                 ','
6647  21    T__1                 '0'
6647  22    T__0                 ','
6647  23    T__1                 '0'
6647  24    T__0                 ','
6647  25    STRING               '""'
6647  27    T__0                 ','
6647  28    STRING               '"//Создаем табличный документ\r\nТабДокумент = Новый ТабличныйДокумент;\r\n\r\n//Указываем ориентацию страницы.\r\n//Портретная по умолчанию\r\nТабДокумент.ОриентацияСтраницы =\r\nОриентацияСтраницы.Портрет;\r\n\r\n//Получаем макет по его названию (модуль объекта)\r\nМакет = ПолучитьМакет(""Макет"");\r\n//Или так (если из модуля формы)\r\nМакет = Отчеты.Номенклатура.ПолучитьМакет(""Макет"");\r\n\r\n//Получаем доступ к разделу ""Шапка""\r\nШапка = Макет.ПолучитьОбласть(""Шапка"");\r\n//Заполняем параметр ""Заголовок""\r\nШапка.Параметры.Заголовок =\r\n""Перечень номенклатуры"";\r\n\r\n//Добавляем шапку в табличный документ\r\nТабДокумент.Вывести(Шапка);\r\n\r\n//Получаем доступ к разделу ""Строка""\r\nСтрока = Макет.ПолучитьОбласть(""Строка"");\r\n\r\nВыборка = Справочники.Номенклатура.Выбрать();\r\nПока Выборка.Следующий() Цикл\r\n     //Заполняем строку макета данными полей справочника\r\n     Строка.Параметры.Заполнить(Выборка);\r\n     //Добавляем строку в табличный документ\r\n     ТабДокумент.Вывести(Строка);\r\nКонецЦикла;"'
6678  12    RBRACE               '}'
6679  0     RBRACE               '}'
6679  1     T__0                 ','
6680  0     LBRACE               '{'
6680  1     T__1                 '0'
6680  2     T__0                 ','
6681  0     LBRACE               '{'
6681  1     STRING               '"Открыть форму настроек отчёта"'
6681  32    T__0                 ','
6681  33    T__1                 '0'
6681  34    T__0                 ','
6681  35    T__1                 '0'
6681  36    T__0                 ','
6681  37    STRING               '""'
6681  39    T__0                 ','
6681  40    STRING               '"Форма = ПолучитьФорму(""Отчет.Материалы.ФормаНастроек"");\r\nФорма.Открыть();\r\n\r\n\r\n"'
6685  1     RBRACE               '}'
6686  0     RBRACE               '}'
6686  1     T__0                 ','
6687  0     LBRACE               '{'
6687  1     T__1                 '0'
6687  2     T__0                 ','
6688  0     LBRACE               '{'
6688  1     STRING               '"Открыть форму отчёта"'
6688  23    T__0                 ','
6688  24    T__1                 '0'
6688  25    T__0                 ','
6688  26    T__1                 '0'
6688  27    T__0                 ','
6688  28    STRING               '""'
6688  30    T__0                 ','
6688  31    STRING               '"Форма = ПолучитьФорму(""Отчет.Материалы.Форма"");\r\nФорма.Открыть();"'
6689  17    RBRACE               '}'
6690  0     RBRACE               '}'
6690  1     T__0                 ','
6691  0     LBRACE               '{'
6691  1     T__1                 '0'
6691  2     T__0                 ','
6692  0     LBRACE               '{'
6692  1     STRING               '"пример внешней обработки"'
6692  27    T__0                 ','
6692  28    T__1                 '0'
6692  29    T__0                 ','
6692  30    T__1                 '0'
6692  31    T__0                 ','
6692  32    STRING               '""'
6692  34    T__0                 ','
6692  35    STRING               '"//Пример внешней обработки с печатной формой \r\n//подключаемой к документу ИнвентаризацияТоваровНаСкладе\r\n//стандартной конфигурации 1С 8.3 .\r\n//Размещение кода: Модуль объекта вынешней обработки.\r\n//Обработка добавляет документу две команды печати:\r\n// - Инвентаризационная опись склада\r\n// - Инвентаризационная опись склада (альбомная) \r\nФункция СведенияОВнешнейОбработке() Экспорт\r\n   //Получаем шаблон сведений о внешнем отчете или обработке\r\n   ПараметрыРегистрации =\r\n   ДополнительныеОтчетыИОбработки.СведенияОВнешнейОбработке();\r\n\r\n   //Указываем что обработка является печатной формой\r\n   ПараметрыРегистрации.Вид =\r\n   ДополнительныеОтчетыИОбработкиКлиентСервер.ВидОбработкиПечатнаяФорма();\r\n   //Задаем версию обработки\r\n   ПараметрыРегистрации.Версия = ""1.0"";\r\n   //Указываем список документов, к которому будет подключаться обработка\r\n   ПараметрыРегистрации.Назначение.Добавить(""Документ.ИнвентаризацияТоваровНаСкладе"");\r\n\r\n   //Добавляем команды для пункта меню ""Печать""\r\n   НоваяКоманда = ПараметрыРегистрации.Команды.Добавить();\r\n   //Задаем представление команды\r\n   НоваяКоманда.Представление = НСтр(""ru = 'Инвентаризационная опись склада'"");\r\n   //Идентификатор, который используется в функции ""Печать""\r\n   НоваяКоманда.Идентификатор = ""ИнвентаризационнаяОписьСклада"";\r\n   //Серверный тип команды\r\n   НоваяКоманда.Использование =\r\n   ДополнительныеОтчетыИОбработкиКлиентСервер.ТипКомандыВызовСерверногоМетода();\r\n\r\n  //Вторая команда в пункт меню ""Печать""\r\n  НоваяКоманда = ПараметрыРегистрации.Команды.Добавить();\r\n  НоваяКоманда.Представление = НСтр(""ru = 'Инвентаризационная опись склада (альбомная)'"");\r\n  НоваяКоманда.Идентификатор = ""ИнвентаризационнаяОписьСкладаАльбомная"";\r\n  НоваяКоманда.Использование =\r\n  ДополнительныеОтчетыИОбработкиКлиентСервер.ТипКомандыВызовСерверногоМетода();\r\n\r\n  Возврат ПараметрыРегистрации;\r\n\r\nКонецФункции\r\n\r\n// Функция является точкой входа в обработку.\r\nФункция Печать(МассивОбъектов, КоллекцияПечатныхФорм,\r\n  ОбъектыПечати, ПараметрыВывода) Экспорт\r\n\r\n  //Проверяем по идентификатору, какая из команд вызвана:\r\n  // ИнвентаризационнаяОписьСклада или \r\n  // ИнвентаризационнаяОписьСкладаАльбомная\r\n  Если УправлениеПечатью.НужноПечататьМакет(\r\n    КоллекцияПечатныхФорм, ""ИнвентаризационнаяОписьСклада"") Тогда\r\n    //Формируем портретный табличный документ\r\n    ТабДокумент = ПечатьДокумента(МассивОбъектов,\r\n    ""МакетОписи"", ОриентацияСтраницы.Портрет);\r\n\r\n    //Выводим печатную форму\r\n    УправлениеПечатью.ВывестиТабличныйДокументВКоллекцию(\r\n    КоллекцияПечатныхФорм, ""ИнвентаризационнаяОписьСклада"",\r\n    НСтр(""ru = 'Инвентаризационная опись склада'""), ТабДокумент);\r\n\r\n  ИначеЕсли УправлениеПечатью.НужноПечататьМакет(\r\n  КоллекцияПечатныхФорм, ""ИнвентаризационнаяОписьСкладаАльбомная"") Тогда\r\n  //Формируем альбомный табличный документ\r\n  ТабДокумент = ПечатьДокумента(МассивОбъектов,\r\n  ""МакетОписи"", ОриентацияСтраницы.Ландшафт);\r\n\r\n  УправлениеПечатью.ВывестиТабличныйДокументВКоллекцию(\r\n  КоллекцияПечатныхФорм,\r\n  ""ИнвентаризационнаяОписьСкладаАльбомная"",\r\n  НСтр(""ru = 'Инвентаризационная опись склада (альбомная)'""),\r\n  ТабДокумент);\r\n КонецЕсли;\r\n\r\nКонецФункции\r\n\r\n// Функция, возвращающая готовый ТабличныйДокумент\r\nФункция ПечатьДокумента(МассивОбъектов, НазваниеМакета, Ориентация)\r\n\r\n  //Создадим и заполним табличный документ\r\n  ТабДокумент = Новый ТабличныйДокумент;\r\n  ТабДокумент.ОриентацияСтраницы  = Ориентация;\r\n\r\n  Макет = ПолучитьМакет(НазваниеМакета);\r\n  //Далее следует заполнение макета\r\n  //...\r\nКонецФункции\r\n\r\n"'
6778  1     RBRACE               '}'
6779  0     RBRACE               '}'
6780  0     RBRACE               '}'
6780  1     T__0                 ','
6781  0     LBRACE               '{'
6781  1     INT                  '3'
6781  2     T__0                 ','
6782  0     LBRACE               '{'
6782  1     STRING               '"Параметры сеанса"'
6782  19    T__0                 ','
6782  20    T__2                 '1'
6782  21    T__0                 ','
6782  22    T__1                 '0'
6782  23    T__0                 ','
6782  24    STRING               '""'
6782  26    T__0                 ','
6782  27    STRING               '""'
6782  29    RBRACE               '}'
6782  30    T__0                 ','
6783  0     LBRACE               '{'
6783  1     T__1                 '0'
6783  2     T__0                 ','
6784  0     LBRACE               '{'
6784  1     STRING               '"Выбор документов пользователя"'
6784  32    T__0                 ','
6784  33    T__1                 '0'
6784  34    T__0                 ','
6784  35    T__1                 '0'
6784  36    T__0                 ','
6784  37    STRING               '""'
6784  39    T__0                 ','
6784  40    STRING               '"&НаСервере\r\n\r\n//Выбираем документы текущего пользователя\r\nЗапрос = Новый Запрос;\r\nЗапрос.Текст = \r\n""ВЫБРАТЬ\r\n| Приходник.Номер КАК Номер,\r\n| Приходник.Дата КАК Дата\r\n|ИЗ\r\n| Документ.ПриходныйКассовыйОрдер КАК Приходник\r\n|ГДЕ\r\n| Приходник.Ответственный = &Ответственный"";\r\n\r\nПользователь = ПараметрыСеанса.ТекущийПользователь;\r\nЗапрос.УстановитьПараметр(""Ответственный"", Пользователь);\r\n\r\nВыборка = Запрос.Выполнить().Выбрать();\r\n\r\n//Выводим информацию о найденных документах\r\nПока Выборка.Следующий() Цикл\r\nИнформация = СтрШаблон(""№ %1 от %2"", \r\nВыборка.Номер, Выборка.Дата);\r\nСообщить(Информация);\r\nКонецЦикла;"'
6807  12    RBRACE               '}'
6808  0     RBRACE               '}'
6808  1     T__0                 ','
6809  0     LBRACE               '{'
6809  1     T__1                 '0'
6809  2     T__0                 ','
6810  0     LBRACE               '{'
6810  1     STRING               '"Получение текущего пользователя"'
6810  34    T__0                 ','
6810  35    T__1                 '0'
6810  36    T__0                 ','
6810  37    T__1                 '0'
6810  38    T__0                 ','
6810  39    STRING               '""'
6810  41    T__0                 ','
6810  42    STRING               '"&НаСервере \r\n\r\nПользователь = ПараметрыСеанса.ТекущийПользователь; \r\nСообщить(Пользователь);\r\n//Если в справочнике пользователей\r\n//задано физическое лицо\r\nСообщить(Пользователь.ФизическоеЛицо);"'
6816  39    RBRACE               '}'
6817  0     RBRACE               '}'
6817  1     T__0                 ','
6818  0     LBRACE               '{'
6818  1     T__1                 '0'
6818  2     T__0                 ','
6819  0     LBRACE               '{'
6819  1     STRING               '"Установка параметров сеанса"'
6819  30    T__0                 ','
6819  31    T__1                 '0'
6819  32    T__0                 ','
6819  33    T__1                 '0'
6819  34    T__0                 ','
6819  35    STRING               '""'
6819  37    T__0                 ','
6819  38    STRING               '"//Модуль сеанса\r\nПроцедура УстановкаПараметровСеанса(ИменаПараметровСеанса)\r\n\r\nЕсли ИменаПараметровСеанса = Неопределено Тогда\r\n//Заполняем созданный в конфигурации\r\n//параметр ""Регионы""\r\nРегионы = Новый Массив;\r\nРегионы.Добавить(41);\r\nРегионы.Добавить(777);\r\n\r\nПараметрыСеанса.Регионы = Новый ФиксированныйМассив(Регионы);\r\nИначе\r\n// Установка параметров сеанса ""по требованию""\r\nЕсли ИменаПараметровСеанса.Найти(""ТекущийПользователь"") <> Неопределено Тогда\r\nПользователь = Справочники.Пользователи.НайтиПоКоду(""000000001"");\r\nПараметрыСеанса.ТекущийПользователь = Пользователь;\r\nКонецЕсли;\r\nКонецЕсли;\r\n\r\n//...\r\n\r\nКонецПроцедуры\r\n\r\n"'
6842  1     RBRACE               '}'
6843  0     RBRACE               '}'
6844  0     RBRACE               '}'
6844  1     T__0                 ','
6845  0     LBRACE               '{'
6845  1     T__1                 '0'
6845  2     T__0                 ','
6846  0     LBRACE               '{'
6846  1     STRING               '"Поток управления"'
6846  19    T__0                 ','
6846  20    T__2                 '1'
6846  21    T__0                 ','
6846  22    T__1                 '0'
6846  23    T__0                 ','
6846  24    STRING               '""'
6846  26    T__0                 ','
6846  27    STRING               '""'
6846  29    RBRACE               '}'
6847  0     RBRACE               '}'
6847  1     T__0                 ','
6848  0     LBRACE               '{'
6848  1     T__2                 '1'
6848  2     T__0                 ','
6849  0     LBRACE               '{'
6849  1     STRING               '"Процедуры и функции"'
6849  22    T__0                 ','
6849  23    T__2                 '1'
6849  24    T__0                 ','
6849  25    T__1                 '0'
6849  26    T__0                 ','
6849  27    STRING               '""'
6849  29    T__0                 ','
6849  30    STRING               '""'
6849  32    RBRACE               '}'
6849  33    T__0                 ','
6850  0     LBRACE               '{'
6850  1     T__1                 '0'
6850  2     T__0                 ','
6851  0     LBRACE               '{'
6851  1     STRING               '"Валидация Email в 1С Предприятие"'
6851  35    T__0                 ','
6851  36    T__1                 '0'
6851  37    T__0                 ','
6851  38    T__1                 '0'
6851  39    T__0                 ','
6851  40    STRING               '""'
6851  42    T__0                 ','
6851  43    STRING               '"//Валидация — это доказательство, что продуктом, оборудованием или процессом можно пользоваться по назначению.\r\n\r\nФункция EmailValid(Адрес) Экспорт\r\n\r\n    //Адрес = ""test@me@gmail.narod.am"";\r\n\r\n    ЛатинскиеБуквы = ""abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ"";\r\n\r\n    Цифры = ""0123456789"";\r\n\r\n    //ищем крайний справа символ @ для правильного выделения локальной и доменной части\r\n\r\n    ИндексСобаки = Найти(Адрес,""@"");\r\n\r\n    //1. строка адреса вообще не содержит разделителя\r\n\r\n    Если ИндексСобаки = 0 Тогда\r\n\r\n        Возврат ЛОЖЬ;\r\n\r\n    КонецЕсли;\r\n\r\n    УрезаемаяСтрока = Сред(Адрес, ИндексСобаки+1);\r\n\r\n    Пока Найти(УрезаемаяСтрока,""@"") > 0 Цикл\r\n\r\n        ИндексСобаки = ИндексСобаки + Найти(УрезаемаяСтрока,""@"");\r\n\r\n        УрезаемаяСтрока = Сред(УрезаемаяСтрока, ИндексСобаки+1);\r\n\r\n    КонецЦикла;\r\n\r\n    ДоменнаяЧасть = Сред(Адрес, ИндексСобаки+1);\r\n\r\n    ЛокальнаяЧасть = Лев(Адрес, ИндексСобаки-1);\r\n\r\n    //2. Проверяем длину локальной части\r\n\r\n    Если СтрДлина(ЛокальнаяЧасть) < 1 ИЛИ СтрДлина(ЛокальнаяЧасть) > 64 Тогда\r\n\r\n        Возврат ЛОЖЬ;\r\n\r\n    КонецЕсли;\r\n\r\n    //3. Проверяем длину доменной части\r\n\r\n    Если СтрДлина(ДоменнаяЧасть) < 1 ИЛИ СтрДлина(ДоменнаяЧасть) > 255 Тогда\r\n\r\n        Возврат ЛОЖЬ;\r\n\r\n    КонецЕсли;\r\n\r\n    //4. Проверяем что локальная части не начинается и не заканчивается на "".""\r\n\r\n    Если Лев(ЛокальнаяЧасть, 1) = ""."" ИЛИ Прав(ЛокальнаяЧасть, 1) = ""."" Тогда\r\n\r\n        Возврат ЛОЖЬ;\r\n\r\n    КонецЕсли;\r\n\r\n    //5. Локальная части не содержит 2 или более ""."" подряд\r\n\r\n    Если Найти(ЛокальнаяЧасть, "".."") > 0 Тогда\r\n\r\n        Возврат ЛОЖЬ;\r\n\r\n    КонецЕсли;\r\n\r\n    //Проверка доменной части\r\n\r\n    //6. Доменная часть не начинается с точки\r\n\r\n    Если Лев(ДоменнаяЧасть, 1) = ""."" Тогда\r\n\r\n        Возврат ЛОЖЬ;\r\n\r\n    КонецЕсли;\r\n\r\n    //7. Доменная часть не содержит 2 или более ""."" подряд\r\n\r\n    Если Найти(ДоменнаяЧасть, "".."") > 0 Тогда\r\n\r\n        Возврат ЛОЖЬ;\r\n\r\n    КонецЕсли;\r\n\r\n    //8. Проверка частей доменной части\r\n\r\n    //каждая часть начинается с буквы и заканчивается буквой или цифрой\r\n\r\n    //каждая часть длиной не более 63 символов\r\n\r\n    ИдентификаторыДоменнойЧасти = СтроковыеФункцииКлиентСервер.РазложитьСтрокуВМассивПодстрок(ДоменнаяЧасть, ""."");\r\n\r\n    Для Каждого ИдентификаторДомена ИЗ ИдентификаторыДоменнойЧасти Цикл\r\n\r\n        Если СтрДлина(ИдентификаторДомена) > 63 Тогда\r\n\r\n            Возврат ЛОЖЬ;\r\n\r\n        КонецЕсли;\r\n\r\n        Если Найти(ЛатинскиеБуквы, Лев(ИдентификаторДомена,1)) = 0\r\n\r\n            //для доменов, нарушающих RFC 1035 п.2.3.1, например @1c.ru :)\r\n\r\n            И Найти(Цифры, Лев(ИдентификаторДомена,1)) = 0\r\n\r\n            Тогда\r\n\r\n            Возврат ЛОЖЬ;\r\n\r\n        КонецЕсли;\r\n\r\n        Если Найти(ЛатинскиеБуквы, Прав(ИдентификаторДомена,1)) = 0 И Найти(Цифры, Прав(ИдентификаторДомена,1)) = 0 Тогда\r\n\r\n            Возврат ЛОЖЬ;\r\n\r\n        КонецЕсли;\r\n\r\n    КонецЦикла;\r\n\r\n\r\n\r\n    //Все проверки пройдены - радуемся\r\n\r\n    Возврат ИСТИНА;\r\n\r\nКонецФункции"'
6979  13    RBRACE               '}'
6980  0     RBRACE               '}'
6981  0     RBRACE               '}'
6981  1     T__0                 ','
6982  0     LBRACE               '{'
6982  1     INT                  '5'
6982  2     T__0                 ','
6983  0     LBRACE               '{'
6983  1     STRING               '"Работа с простыми типами"'
6983  27    T__0                 ','
6983  28    T__2                 '1'
6983  29    T__0                 ','
6983  30    T__1                 '0'
6983  31    T__0                 ','
6983  32    STRING               '""'
6983  34    T__0                 ','
6983  35    STRING               '""'
6983  37    RBRACE               '}'
6983  38    T__0                 ','
6984  0     LBRACE               '{'
6984  1     T__1                 '0'
6984  2     T__0                 ','
6985  0     LBRACE               '{'
6985  1     STRING               '"Boolean"'
6985  10    T__0                 ','
6985  11    T__2                 '1'
6985  12    T__0                 ','
6985  13    T__1                 '0'
6985  14    T__0                 ','
6985  15    STRING               '""'
6985  17    T__0                 ','
6985  18    STRING               '""'
6985  20    RBRACE               '}'
6986  0     RBRACE               '}'
6986  1     T__0                 ','
6987  0     LBRACE               '{'
6987  1     INT                  '5'
6987  2     T__0                 ','
6988  0     LBRACE               '{'
6988  1     STRING               '"Дата и Время"'
6988  15    T__0                 ','
6988  16    T__2                 '1'
6988  17    T__0                 ','
6988  18    T__1                 '0'
6988  19    T__0                 ','
6988  20    STRING               '""'
6988  22    T__0                 ','
6988  23    STRING               '""'
6988  25    RBRACE               '}'
6988  26    T__0                 ','
6989  0     LBRACE               '{'
6989  1     T__1                 '0'
6989  2     T__0                 ','
6990  0     LBRACE               '{'
6990  1     STRING               '"Проверить дату на пустое значение"'
6990  36    T__0                 ','
6990  37    T__1                 '0'
6990  38    T__0                 ','
6990  39    T__1                 '0'
6990  40    T__0                 ','
6990  41    STRING               '""'
6990  43    T__0                 ','
6990  44    STRING               '"Функция ДатаНеЗаполнена(ПереданноеЗначение)\r\n   Если ПереданноеЗначение = Дата('00010101') Тогда\r\n      Возврат Истина;\r\n   Иначе\r\n      Возврат Ложь;\r\n   КонецЕсли; \r\nКонецФункции\r\n"'
6997  1     RBRACE               '}'
6998  0     RBRACE               '}'
6998  1     T__0                 ','
6999  0     LBRACE               '{'
6999  1     T__1                 '0'
6999  2     T__0                 ','
7000  0     LBRACE               '{'
7000  1     STRING               '"Как получить формат даты без времени"'
7000  39    T__0                 ','
7000  40    T__1                 '0'
7000  41    T__0                 ','
7000  42    T__1                 '0'
7000  43    T__0                 ','
7000  44    STRING               '""'
7000  46    T__0                 ','
7000  47    STRING               '"ДатаСтрокой = Формат(ТекущаяДата(), ""ДЛФ=D"");//08.11.2019\r\nДатаСтрокой = Формат(ТекущаяДата(), ""ДЛФ=DD"");//08 ноября 2019 г\r\nДатаСтрокой = Формат(ТекущаяДата(), ""ДФ=dd.MM.yyyy"");//08.11.2019\r\nДатаСтрокой = Формат(ТекущаяДата(), ""ДФ=dd MMMM yyyy"");//08 ноября 2019"'
7003  74    RBRACE               '}'
7004  0     RBRACE               '}'
7004  1     T__0                 ','
7005  0     LBRACE               '{'
7005  1     T__1                 '0'
7005  2     T__0                 ','
7006  0     LBRACE               '{'
7006  1     STRING               '"Как посчитать количество месяцев между датами(1)"'
7006  51    T__0                 ','
7006  52    T__1                 '0'
7006  53    T__0                 ','
7006  54    T__1                 '0'
7006  55    T__0                 ','
7006  56    STRING               '""'
7006  58    T__0                 ','
7006  59    STRING               '"Функция РазностьДатМесяц(ДатаНачала,ДатаКонца)\r\n   МесяцНачала = Месяц(ДатаНачала);\r\n   МесяцКонца = Месяц(ДатаКонца);\r\n   ЛетМеждуДатами = Год(ДатаКонца) - Год(ДатаНачала);\r\n   РезультатВМесяцах = ЛетМеждуДатами * 12 - МесяцНачала + МесяцКонца;\r\n   Возврат РезультатВМесяцах;\r\nКонецФункции"'
7012  13    RBRACE               '}'
7013  0     RBRACE               '}'
7013  1     T__0                 ','
7014  0     LBRACE               '{'
7014  1     T__1                 '0'
7014  2     T__0                 ','
7015  0     LBRACE               '{'
7015  1     STRING               '"Как посчитать количество месяцев между датами(2)"'
7015  51    T__0                 ','
7015  52    T__1                 '0'
7015  53    T__0                 ','
7015  54    T__1                 '0'
7015  55    T__0                 ','
7015  56    STRING               '""'
7015  58    T__0                 ','
7015  59    STRING               '"Функция РазностьДатМесяцРекурсия(ДатаНачала,ДатаКонца)\r\n   Если НачалоМесяца(ДатаНачала) >= НачалоМесяца(ДатаКонца) Тогда\r\n      Результат = 0;\r\n   Иначе\r\n      Результат = 1 + РазностьДатМесяцРекурсия(ДатаНачала,НачалоМесяца(ДатаКонца)-1);\r\n   КонецЕсли;\r\n   Возврат Результат;\r\nКонецФункции"'
7022  13    RBRACE               '}'
7023  0     RBRACE               '}'
7023  1     T__0                 ','
7024  0     LBRACE               '{'
7024  1     INT                  '16'
7024  3     T__0                 ','
7025  0     LBRACE               '{'
7025  1     STRING               '"Как перевести секунды в часы и минуты"'
7025  40    T__0                 ','
7025  41    T__2                 '1'
7025  42    T__0                 ','
7025  43    T__1                 '0'
7025  44    T__0                 ','
7025  45    STRING               '""'
7025  47    T__0                 ','
7025  48    STRING               '""'
7025  50    RBRACE               '}'
7025  51    T__0                 ','
7026  0     LBRACE               '{'
7026  1     T__1                 '0'
7026  2     T__0                 ','
7027  0     LBRACE               '{'
7027  1     STRING               '"Получить часы"'
7027  16    T__0                 ','
7027  17    T__1                 '0'
7027  18    T__0                 ','
7027  19    T__1                 '0'
7027  20    T__0                 ','
7027  21    STRING               '""'
7027  23    T__0                 ','
7027  24    STRING               '"//получаем часы\r\nЧасы = Цел(КоличествоСекунд / 3600);\r\n//считаем остаток\r\nОстатокСекунд = КоличествоСекунд - Часы * 3600;\r\n//или \r\nОстатокСекунд = КоличествоСекунд % 3600;\r\n\r\nСообщить("""" + Часы + "" часов "" );\r\n//Результат:\r\n//	2 часов"'
7036  11    RBRACE               '}'
7037  0     RBRACE               '}'
7037  1     T__0                 ','
7038  0     LBRACE               '{'
7038  1     T__1                 '0'
7038  2     T__0                 ','
7039  0     LBRACE               '{'
7039  1     STRING               '"Получить минуты"'
7039  18    T__0                 ','
7039  19    T__1                 '0'
7039  20    T__0                 ','
7039  21    T__1                 '0'
7039  22    T__0                 ','
7039  23    STRING               '""'
7039  25    T__0                 ','
7039  26    STRING               '"//получаем минуты\r\nМинуты = Цел(ОстатокСекунд / 60);//в минуте 60 сек\r\n\r\nСообщить("""" + Часы + "" часов, "" + Минуты + "" минут "" );"'
7042  62    RBRACE               '}'
7043  0     RBRACE               '}'
7043  1     T__0                 ','
7044  0     LBRACE               '{'
7044  1     T__1                 '0'
7044  2     T__0                 ','
7045  0     LBRACE               '{'
7045  1     STRING               '"Получить секунды"'
7045  19    T__0                 ','
7045  20    T__1                 '0'
7045  21    T__0                 ','
7045  22    T__1                 '0'
7045  23    T__0                 ','
7045  24    STRING               '""'
7045  26    T__0                 ','
7045  27    STRING               '"Секунды = ОстатокСекунд % 60;\r\n\r\n"'
7047  1     RBRACE               '}'
7048  0     RBRACE               '}'
7048  1     T__0                 ','
7049  0     LBRACE               '{'
7049  1     T__1                 '0'
7049  2     T__0                 ','
7050  0     LBRACE               '{'
7050  1     STRING               '"Функция ПолучитьЧасыМинутыСекунды"'
7050  36    T__0                 ','
7050  37    T__1                 '0'
7050  38    T__0                 ','
7050  39    T__1                 '0'
7050  40    T__0                 ','
7050  41    STRING               '""'
7050  43    T__0                 ','
7050  44    STRING               '"Функция ПериодЧасыМинутыСекунды(Знач КоличествоСекунд)\r\n	\r\n	Перем Часы, Минуты, Секунды;\r\n	\r\n	//получаем часы\r\n	Часы = Цел(КоличествоСекунд / 3600);\r\n	//считаем остаток\r\n	КоличествоСекунд = КоличествоСекунд % 3600;\r\n	//получаем минуты\r\n	Минуты = Цел(КоличествоСекунд / 60);//в минуте 60 сек\r\n	//остались секунды\r\n	Секунды = КоличествоСекунд % 60;\r\n	\r\n	Возврат ("""" + Часы + "" часов, "" + Минуты + "" минут, "" + Секунды + "" секунд"");\r\n	\r\nКонецФункции"'
7065  13    RBRACE               '}'
7066  0     RBRACE               '}'
7066  1     T__0                 ','
7067  0     LBRACE               '{'
7067  1     T__1                 '0'
7067  2     T__0                 ','
7068  0     LBRACE               '{'
7068  1     STRING               '"Прибавить секунду"'
7068  20    T__0                 ','
7068  21    T__1                 '0'
7068  22    T__0                 ','
7068  23    T__1                 '0'
7068  24    T__0                 ','
7068  25    STRING               '""'
7068  27    T__0                 ','
7068  28    STRING               '"//Прибавить секунду\r\nДата = Дата + 1; \r\n\r\n//В запросе\r\n""ДОБАВИТЬКДАТЕ(Дата, СЕКУНДА, 1)"""'
7072  36    RBRACE               '}'
7073  0     RBRACE               '}'
7073  1     T__0                 ','
7074  0     LBRACE               '{'
7074  1     T__1                 '0'
7074  2     T__0                 ','
7075  0     LBRACE               '{'
7075  1     STRING               '"Вычесть минуту"'
7075  17    T__0                 ','
7075  18    T__1                 '0'
7075  19    T__0                 ','
7075  20    T__1                 '0'
7075  21    T__0                 ','
7075  22    STRING               '""'
7075  24    T__0                 ','
7075  25    STRING               '"//Вычесть минуту\r\nДата = Дата - 60;\r\n\r\n//В запросе\r\n""ДОБАВИТЬКДАТЕ(Дата, МИНУТА, -1)"""'
7079  36    RBRACE               '}'
7080  0     RBRACE               '}'
7080  1     T__0                 ','
7081  0     LBRACE               '{'
7081  1     T__1                 '0'
7081  2     T__0                 ','
7082  0     LBRACE               '{'
7082  1     STRING               '"Вычесть час"'
7082  14    T__0                 ','
7082  15    T__1                 '0'
7082  16    T__0                 ','
7082  17    T__1                 '0'
7082  18    T__0                 ','
7082  19    STRING               '""'
7082  21    T__0                 ','
7082  22    STRING               '"//Вычесть час\r\nДата = Дата - 60 * 60;\r\n\r\n//В запросе\r\n""ДОБАВИТЬКДАТЕ(Дата, ЧАС, -1)"""'
7086  33    RBRACE               '}'
7087  0     RBRACE               '}'
7087  1     T__0                 ','
7088  0     LBRACE               '{'
7088  1     T__1                 '0'
7088  2     T__0                 ','
7089  0     LBRACE               '{'
7089  1     STRING               '"Вычесть определенное количество дней"'
7089  39    T__0                 ','
7089  40    T__1                 '0'
7089  41    T__0                 ','
7089  42    T__1                 '0'
7089  43    T__0                 ','
7089  44    STRING               '""'
7089  46    T__0                 ','
7089  47    STRING               '"//Вычесть определенное количество дней\r\nДата = Дата - 60 * 60 * 24 * Количество;\r\n\r\n//В запросе\r\n""ДОБАВИТЬКДАТЕ(Дата, ДЕНЬ, -1)""\r\n"'
7094  1     RBRACE               '}'
7095  0     RBRACE               '}'
7095  1     T__0                 ','
7096  0     LBRACE               '{'
7096  1     T__1                 '0'
7096  2     T__0                 ','
7097  0     LBRACE               '{'
7097  1     STRING               '"Как вычислить количество дней между двумя датами (Запрос)"'
7097  60    T__0                 ','
7097  61    T__1                 '0'
7097  62    T__0                 ','
7097  63    T__1                 '0'
7097  64    T__0                 ','
7097  65    STRING               '""'
7097  67    T__0                 ','
7097  68    STRING               '" Запрос = Новый Запрос;\r\nЗапрос.Текст =\r\n	“ВЫБРАТЬ \r\n	|	РАЗНОСТЬДАТ(&НачалоПериода,&КонецПериода,МЕСЯЦ) КАК Месяцев,\r\n	|	РАЗНОСТЬДАТ(&НачалоПериода,&КонецПериода,ДЕНЬ) КАК Дней”;"'
7101  61    RBRACE               '}'
7102  0     RBRACE               '}'
7102  1     T__0                 ','
7103  0     LBRACE               '{'
7103  1     T__1                 '0'
7103  2     T__0                 ','
7104  0     LBRACE               '{'
7104  1     STRING               '"Как вычислить количество дней между двумя датами"'
7104  51    T__0                 ','
7104  52    T__1                 '0'
7104  53    T__0                 ','
7104  54    T__1                 '0'
7104  55    T__0                 ','
7104  56    STRING               '""'
7104  58    T__0                 ','
7104  59    STRING               '"КоличествоДней = (ДатаОкончания – ДатаНачала)/60/60/24;"'
7104  116   RBRACE               '}'
7105  0     RBRACE               '}'
7105  1     T__0                 ','
7106  0     LBRACE               '{'
7106  1     T__1                 '0'
7106  2     T__0                 ','
7107  0     LBRACE               '{'
7107  1     STRING               '"Как добавить к дате секунду"'
7107  30    T__0                 ','
7107  31    T__1                 '0'
7107  32    T__0                 ','
7107  33    T__1                 '0'
7107  34    T__0                 ','
7107  35    STRING               '""'
7107  37    T__0                 ','
7107  38    STRING               '"  // Прибавили секунду\r\n  Результат = Дата(2016, 07, 21) + 1; "'
7108  39    RBRACE               '}'
7109  0     RBRACE               '}'
7109  1     T__0                 ','
7110  0     LBRACE               '{'
7110  1     T__1                 '0'
7110  2     T__0                 ','
7111  0     LBRACE               '{'
7111  1     STRING               '"Как добавить к дате минуту"'
7111  29    T__0                 ','
7111  30    T__1                 '0'
7111  31    T__0                 ','
7111  32    T__1                 '0'
7111  33    T__0                 ','
7111  34    STRING               '""'
7111  36    T__0                 ','
7111  37    STRING               '"// Прибавили 2 минуты\r\nРезультат = Дата(2016, 07, 21) + 2 * 60; 		"'
7112  44    RBRACE               '}'
7113  0     RBRACE               '}'
7113  1     T__0                 ','
7114  0     LBRACE               '{'
7114  1     T__1                 '0'
7114  2     T__0                 ','
7115  0     LBRACE               '{'
7115  1     STRING               '"Как добавить к дате час"'
7115  26    T__0                 ','
7115  27    T__1                 '0'
7115  28    T__0                 ','
7115  29    T__1                 '0'
7115  30    T__0                 ','
7115  31    STRING               '""'
7115  33    T__0                 ','
7115  34    STRING               '"// Прибавили 10 часов\r\nРезультат = Дата(2016, 07, 21) + 60*60*10; 		"'
7116  46    RBRACE               '}'
7117  0     RBRACE               '}'
7117  1     T__0                 ','
7118  0     LBRACE               '{'
7118  1     T__1                 '0'
7118  2     T__0                 ','
7119  0     LBRACE               '{'
7119  1     STRING               '"Как добавить к дате день"'
7119  27    T__0                 ','
7119  28    T__1                 '0'
7119  29    T__0                 ','
7119  30    T__1                 '0'
7119  31    T__0                 ','
7119  32    STRING               '""'
7119  34    T__0                 ','
7119  35    STRING               '"// Прибавили 5 дней		\r\nРезультат = Дата(2016, 07, 21) + 5 * 60*60*24; 			"'
7120  51    RBRACE               '}'
7121  0     RBRACE               '}'
7121  1     T__0                 ','
7122  0     LBRACE               '{'
7122  1     T__1                 '0'
7122  2     T__0                 ','
7123  0     LBRACE               '{'
7123  1     STRING               '"Как добавить к дате месяц"'
7123  28    T__0                 ','
7123  29    T__1                 '0'
7123  30    T__0                 ','
7123  31    T__1                 '0'
7123  32    T__0                 ','
7123  33    STRING               '""'
7123  35    T__0                 ','
7123  36    STRING               '"// Добавим к дате 5 месяцев\r\nРезультат = ДобавитьМесяц(Дата(2016, 07, 21), 5); "'
7124  51    RBRACE               '}'
7125  0     RBRACE               '}'
7125  1     T__0                 ','
7126  0     LBRACE               '{'
7126  1     T__1                 '0'
7126  2     T__0                 ','
7127  0     LBRACE               '{'
7127  1     STRING               '"Как отнять от даты месяц"'
7127  27    T__0                 ','
7127  28    T__1                 '0'
7127  29    T__0                 ','
7127  30    T__1                 '0'
7127  31    T__0                 ','
7127  32    STRING               '""'
7127  34    T__0                 ','
7127  35    STRING               '"// Отнимаем от даты 3 месяца\r\nРезультат = ДобавитьМесяц(Дата(2016, 07, 21), –3) "'
7128  51    RBRACE               '}'
7129  0     RBRACE               '}'
7130  0     RBRACE               '}'
7131  0     RBRACE               '}'
7131  1     T__0                 ','
7132  0     LBRACE               '{'
7132  1     T__1                 '0'
7132  2     T__0                 ','
7133  0     LBRACE               '{'
7133  1     STRING               '"Символьный тип"'
7133  17    T__0                 ','
7133  18    T__2                 '1'
7133  19    T__0                 ','
7133  20    T__1                 '0'
7133  21    T__0                 ','
7133  22    STRING               '""'
7133  24    T__0                 ','
7133  25    STRING               '""'
7133  27    RBRACE               '}'
7134  0     RBRACE               '}'
7134  1     T__0                 ','
7135  0     LBRACE               '{'
7135  1     INT                  '2'
7135  2     T__0                 ','
7136  0     LBRACE               '{'
7136  1     STRING               '"Строки"'
7136  9     T__0                 ','
7136  10    T__2                 '1'
7136  11    T__0                 ','
7136  12    T__1                 '0'
7136  13    T__0                 ','
7136  14    STRING               '""'
7136  16    T__0                 ','
7136  17    STRING               '""'
7136  19    RBRACE               '}'
7136  20    T__0                 ','
7137  0     LBRACE               '{'
7137  1     T__1                 '0'
7137  2     T__0                 ','
7138  0     LBRACE               '{'
7138  1     STRING               '"Как обрезать строку"'
7138  22    T__0                 ','
7138  23    T__1                 '0'
7138  24    T__0                 ','
7138  25    T__1                 '0'
7138  26    T__0                 ','
7138  27    STRING               '""'
7138  29    T__0                 ','
7138  30    STRING               '"Позиция=Найти(НашаСтрока,""/"");\r\nНашаСтрока=Лев(НашаСтрока,Позиция-1);\r\n\r\n"'
7141  1     RBRACE               '}'
7142  0     RBRACE               '}'
7142  1     T__0                 ','
7143  0     LBRACE               '{'
7143  1     T__1                 '0'
7143  2     T__0                 ','
7144  0     LBRACE               '{'
7144  1     STRING               '"Удалить все пробелы"'
7144  22    T__0                 ','
7144  23    T__1                 '0'
7144  24    T__0                 ','
7144  25    T__1                 '0'
7144  26    T__0                 ','
7144  27    STRING               '""'
7144  29    T__0                 ','
7144  30    STRING               '"Строка = СтрЗаменить(Строка(ПрСтрока),"" "","""");"'
7144  82    RBRACE               '}'
7145  0     RBRACE               '}'
7146  0     RBRACE               '}'
7146  1     T__0                 ','
7147  0     LBRACE               '{'
7147  1     T__1                 '0'
7147  2     T__0                 ','
7148  0     LBRACE               '{'
7148  1     STRING               '"Числа"'
7148  8     T__0                 ','
7148  9     T__2                 '1'
7148  10    T__0                 ','
7148  11    T__1                 '0'
7148  12    T__0                 ','
7148  13    STRING               '""'
7148  15    T__0                 ','
7148  16    STRING               '""'
7148  18    RBRACE               '}'
7149  0     RBRACE               '}'
7150  0     RBRACE               '}'
7150  1     T__0                 ','
7151  0     LBRACE               '{'
7151  1     T__1                 '0'
7151  2     T__0                 ','
7152  0     LBRACE               '{'
7152  1     STRING               '"Регулярные выражения"'
7152  23    T__0                 ','
7152  24    T__2                 '1'
7152  25    T__0                 ','
7152  26    T__1                 '0'
7152  27    T__0                 ','
7152  28    STRING               '""'
7152  30    T__0                 ','
7152  31    STRING               '""'
7152  33    RBRACE               '}'
7153  0     RBRACE               '}'
7153  1     T__0                 ','
7154  0     LBRACE               '{'
7154  1     INT                  '7'
7154  2     T__0                 ','
7155  0     LBRACE               '{'
7155  1     STRING               '"Описание типов значений"'
7155  26    T__0                 ','
7155  27    T__2                 '1'
7155  28    T__0                 ','
7155  29    T__1                 '0'
7155  30    T__0                 ','
7155  31    STRING               '""'
7155  33    T__0                 ','
7155  34    STRING               '""'
7155  36    RBRACE               '}'
7155  37    T__0                 ','
7156  0     LBRACE               '{'
7156  1     INT                  '5'
7156  2     T__0                 ','
7157  0     LBRACE               '{'
7157  1     STRING               '"ОписаниеТипов "'
7157  17    T__0                 ','
7157  18    T__2                 '1'
7157  19    T__0                 ','
7157  20    T__1                 '0'
7157  21    T__0                 ','
7157  22    STRING               '""'
7157  24    T__0                 ','
7157  25    STRING               '""'
7157  27    RBRACE               '}'
7157  28    T__0                 ','
7158  0     LBRACE               '{'
7158  1     T__1                 '0'
7158  2     T__0                 ','
7159  0     LBRACE               '{'
7159  1     STRING               '"Создание"'
7159  11    T__0                 ','
7159  12    T__1                 '0'
7159  13    T__0                 ','
7159  14    T__1                 '0'
7159  15    T__0                 ','
7159  16    STRING               '""'
7159  18    T__0                 ','
7159  19    STRING               '"//Число\r\nОписаниеЧисла = Новый ОписаниеТипов(""Число"");\r\n//Строка\r\nОписаниеСтроки = Новый ОписаниеТипов(""Строка"");\r\n//Дата\r\nОписаниеДаты = Новый ОписаниеТипов(""Дата""); \r\n//Булево\r\nОписаниеБулево = Новый ОписаниеТипов(""Булево"");\r\n//Ссылочный тип  \r\nОписаниеПеречисление = Новый ОписаниеТипов(""ПеречислениеСсылка.ВидРегиона"");\r\nОписаниеСправочник = Новый ОписаниеТипов(""СправочникСсылка.Контрагенты"");\r\nОписаниеДокумент = Новый ОписаниеТипов(""ДокументСсылка.ПродажаТоваров"");\r\n\r\n//Далее можно использовать описание в объектах ПРИМЕР таблица значений\r\nТЗ = Новый ТаблицаЗначений;\r\nТЗ.Колонки.Добавить(""КолонкаЧисло"", ОписаниеЧисла);\r\nТЗ.Колонки.Добавить(""КолонкаСтрока"", ОписаниеСтроки);\r\nТЗ.Колонки.Добавить(""КолонкаДокумент"", ОписаниеДокумент);\r\n"'
7177  1     RBRACE               '}'
7178  0     RBRACE               '}'
7178  1     T__0                 ','
7179  0     LBRACE               '{'
7179  1     INT                  '3'
7179  2     T__0                 ','
7180  0     LBRACE               '{'
7180  1     STRING               '"Классификаторы"'
7180  17    T__0                 ','
7180  18    T__2                 '1'
7180  19    T__0                 ','
7180  20    T__1                 '0'
7180  21    T__0                 ','
7180  22    STRING               '""'
7180  24    T__0                 ','
7180  25    STRING               '""'
7180  27    RBRACE               '}'
7180  28    T__0                 ','
7181  0     LBRACE               '{'
7181  1     T__1                 '0'
7181  2     T__0                 ','
7182  0     LBRACE               '{'
7182  1     STRING               '"Классификатор числа"'
7182  22    T__0                 ','
7182  23    T__1                 '0'
7182  24    T__0                 ','
7182  25    T__1                 '0'
7182  26    T__0                 ','
7182  27    STRING               '""'
7182  29    T__0                 ','
7182  30    STRING               '"//Новый ОписаниеТипов(<Типы>, <КвалификаторыЧисла>, <КвалификаторыСтроки>, \r\n//                    <КвалификаторыДаты>, <КвалификаторыДвоичныхДанных>)\r\n\r\n//Новый КвалификаторыЧисла(<ЧислоРазрядов>, <ЧислоРазрядовДробнойЧасти>, <ДопустимыйЗнак>)\r\n//Где: ЧислоРазрядов – общее число разрядов;\r\n//ЧислоРазрядовДробнойЧасти – число разрядов после запятой;\r\n//ДопустимыйЗнак – системное перечисления (значения Любой, Неотрицательный).\r\nКвалификаторЧисла = Новый КвалификаторыЧисла(6,2,ДопустимыйЗнак.Неотрицательный);\r\nОписаниеЧисла = Новый ОписаниеТипов(""Число"",КвалификаторЧисла);\r\n"'
7191  1     RBRACE               '}'
7192  0     RBRACE               '}'
7192  1     T__0                 ','
7193  0     LBRACE               '{'
7193  1     T__1                 '0'
7193  2     T__0                 ','
7194  0     LBRACE               '{'
7194  1     STRING               '"Классификатор строки"'
7194  23    T__0                 ','
7194  24    T__1                 '0'
7194  25    T__0                 ','
7194  26    T__1                 '0'
7194  27    T__0                 ','
7194  28    STRING               '""'
7194  30    T__0                 ','
7194  31    STRING               '"//Новый ОписаниеТипов(<Типы>, <КвалификаторыЧисла>, <КвалификаторыСтроки>, \r\n//                    <КвалификаторыДаты>, <КвалификаторыДвоичныхДанных>)\r\n\r\n//Новый КвалификаторыСтроки(<ДлинаСтроки>, <ДопустимаяДлина>)\r\n//Где:  ДлинаСтроки – длина задаваемой строки\r\n//ДопустимаяДлина – системное перечисление ДопустимаяДлина, которое определяет, будет строка переменная или фиксированная.\r\n//Например, задать строку длинной 10 символов фиксированной длины нужно так:\r\nКвалификаторСтроки = Новый КвалификаторыСтроки(10,ДопустимаяДлина.Фиксированная);\r\nОписаниеСтроки = Новый ОписаниеТипов(""Строка"",,КвалификаторСтроки);\r\n"'
7203  1     RBRACE               '}'
7204  0     RBRACE               '}'
7204  1     T__0                 ','
7205  0     LBRACE               '{'
7205  1     T__1                 '0'
7205  2     T__0                 ','
7206  0     LBRACE               '{'
7206  1     STRING               '"Классификатор даты"'
7206  21    T__0                 ','
7206  22    T__1                 '0'
7206  23    T__0                 ','
7206  24    T__1                 '0'
7206  25    T__0                 ','
7206  26    STRING               '""'
7206  28    T__0                 ','
7206  29    STRING               '"//Новый ОписаниеТипов(<Типы>, <КвалификаторыЧисла>, <КвалификаторыСтроки>, \r\n//                    <КвалификаторыДаты>, <КвалификаторыДвоичныхДанных>)\r\n//Новый КвалификаторыДаты(<ЧастиДаты>)\r\n//Где ЧастиДаты – системное перечисление, с тремя значениями Время, Дата, ДатаВремя.\r\n//Например, задать дату, которая будет иметь формат времени нужно так:\r\nКвалификаторДаты = Новый КвалификаторыДаты(ЧастиДаты.Время);\r\nОписаниеДаты = Новый ОписаниеТипов(""Дата"",,,КвалификаторДаты);\r\n"'
7213  1     RBRACE               '}'
7214  0     RBRACE               '}'
7215  0     RBRACE               '}'
7215  1     T__0                 ','
7216  0     LBRACE               '{'
7216  1     T__1                 '0'
7216  2     T__0                 ','
7217  0     LBRACE               '{'
7217  1     STRING               '"Массив типов"'
7217  15    T__0                 ','
7217  16    T__1                 '0'
7217  17    T__0                 ','
7217  18    T__1                 '0'
7217  19    T__0                 ','
7217  20    STRING               '""'
7217  22    T__0                 ','
7217  23    STRING               '"МассивТипов = Новый Массив;\r\nМассивТипов.Добавить(Тип(""Число""));\r\nМассивТипов.Добавить(Тип(""Строка""));\r\nМассивТипов.Добавить(Тип(""Дата""));\r\nМассивТипов.Добавить(Тип(""Булево""));	\r\nКвалификаторЧисла = Новый КвалификаторыЧисла(6,2,ДопустимыйЗнак.Неотрицательный);\r\nКвалификаторСтроки = Новый КвалификаторыСтроки(10,ДопустимаяДлина.Фиксированная);\r\nКвалификаторДаты = Новый КвалификаторыДаты(ЧастиДаты.Время);\r\nОписаниеТипов = Новый ОписаниеТипов(МассивТипов,КвалификаторЧисла,КвалификаторСтроки,КвалификаторДаты);\r\n\r\n//массив из ссылочных типов, например из справочников\r\n\r\nМассивТипов = Новый Массив;\r\nМассивТипов.Добавить(Тип(""СправочникСсылка.Валюта""));\r\nМассивТипов.Добавить(Тип(""СправочникСсылка.Контрагенты""));\r\nМассивТипов.Добавить(Тип(""СправочникСсылка.Номенклатура""));\r\n	\r\nОписаниеТипов = Новый ОписаниеТипов(МассивТипов);\r\n"'
7235  1     RBRACE               '}'
7236  0     RBRACE               '}'
7236  1     T__0                 ','
7237  0     LBRACE               '{'
7237  1     T__1                 '0'
7237  2     T__0                 ','
7238  0     LBRACE               '{'
7238  1     STRING               '"Описание типов на основании описания типов"'
7238  45    T__0                 ','
7238  46    T__1                 '0'
7238  47    T__0                 ','
7238  48    T__1                 '0'
7238  49    T__0                 ','
7238  50    STRING               '""'
7238  52    T__0                 ','
7238  53    STRING               '"МассивТипов = Новый Массив;\r\nМассивТипов.Добавить(Тип(""Число""));\r\nМассивТипов.Добавить(Тип(""Строка""));\r\nМассивТипов.Добавить(Тип(""Булево""));\r\n	\r\nКвалификаторЧисла = Новый КвалификаторыЧисла(6,2,ДопустимыйЗнак.Неотрицательный);\r\nКвалификаторСтроки = Новый КвалификаторыСтроки(10,ДопустимаяДлина.Фиксированная);\r\n	\r\nОписаниеТипов = Новый ОписаниеТипов(МассивТипов,КвалификаторЧисла,КвалификаторСтроки,);\r\n\r\nКвалификаторДаты = Новый КвалификаторыДаты(ЧастиДаты.ДатаВремя);\r\n//Новый ОписаниеТипов(<ИсходноеОписаниеТипов>, <ДобавляемыеТипы>, <ВычитаемыеТипы>, \r\n//                   <КвалификаторыЧисла>, <КвалификаторыСтроки>, <КвалификаторыДаты>, \r\n//                   <КвалификаторыДвоичныхДанных>)   \r\nОписаниеТиповНовое = Новый ОписаниеТипов(ОписаниеТипов,""Дата"",""Булево"",,,КвалификаторДаты);\r\n"'
7253  1     RBRACE               '}'
7254  0     RBRACE               '}'
7254  1     T__0                 ','
7255  0     LBRACE               '{'
7255  1     T__1                 '0'
7255  2     T__0                 ','
7256  0     LBRACE               '{'
7256  1     STRING               '"Проверка наличия типа в списке"'
7256  33    T__0                 ','
7256  34    T__1                 '0'
7256  35    T__0                 ','
7256  36    T__1                 '0'
7256  37    T__0                 ','
7256  38    STRING               '""'
7256  40    T__0                 ','
7256  41    STRING               '"//ли требуется просто проверить есть ли в списке типов требуемый, можно использовать метод СодержитТип()\r\nЕсли ЭлементыФормы.ИмяПоля.ТипЗначения.СодержитТип(Тип(""Строка"") ) Тогда\r\n//…\r\nКонецЕсли;"'
7259  11    RBRACE               '}'
7260  0     RBRACE               '}'
7261  0     RBRACE               '}'
7261  1     T__0                 ','
7262  0     LBRACE               '{'
7262  1     T__1                 '0'
7262  2     T__0                 ','
7263  0     LBRACE               '{'
7263  1     STRING               '"Способы определить тип (4)"'
7263  29    T__0                 ','
7263  30    T__1                 '0'
7263  31    T__0                 ','
7263  32    T__1                 '0'
7263  33    T__0                 ','
7263  34    STRING               '""'
7263  36    T__0                 ','
7263  37    STRING               '"//способ 1 – сравнение с известными типами\r\nПеременная1 = 12;\r\nЕсли ТипЗнч(Переменная1) = Тип(""Число"") Тогда\r\n//…\r\nИначеЕсли ТипЗнч(Переменная1) = Тип(""СправочникСсылка.ИмяСправочника"") Тогда\r\n//…\r\nКонецЕсли;\r\n\r\n//способ 2 – с помощью готового списка типов\r\nСписокТипов = Новый Массив();\r\nСписокТипов.Добавить(Тип(""СправочникСсылка.Справочник1""));\r\nСписокТипов.Добавить(Тип(""Число""));\r\nТипы = Новый ОписаниеТипов(СписокТипов);\r\nПеременная1 = 12;\r\nЕсли Типы.СодержитТип(ТипЗнч(Переменная1)) Тогда\r\n//…\r\nКонецЕсли\r\n\r\n//способ3 – аналогично 2, но список типов берем у реквизита, определенного для справочника\r\nЗнчСправочника = Справочники.Справочник1.НайтиПоНаименованию(""Какое-то наименование"");\r\nПеременная1 = 12;\r\nЕсли ЗнчСправочника.Метаданные().Реквизиты.Реквизит1.Тип.СодержитТип(ТипЗнч(Переменная1)) Тогда\r\n//…\r\nКонецЕсли\r\n\r\n//способ 4 – для ссылочных типов – определение имени типа\r\nЗнчСправочника = \r\nСправочники.Справочник1.НайтиПоНаименованию(""Какое-то наименование"");\r\nИмяСправочника = Строка(ТипЗнч(ЗнчСправочника)); //будет равно ""Справочник1""\r\nИмяСправочника = ЗнчСправочника.Метаданные().Имя; //аналогично\r\nЭтоСправочник = Справочники.ТипВсеСсылки().СодержитТип(ТипЗнч(ЗнчСправочника)); //определение, что это справочник"'
7293  114   RBRACE               '}'
7294  0     RBRACE               '}'
7294  1     T__0                 ','
7295  0     LBRACE               '{'
7295  1     INT                  '2'
7295  2     T__0                 ','
7296  0     LBRACE               '{'
7296  1     STRING               '"Преобразование типов"'
7296  23    T__0                 ','
7296  24    T__2                 '1'
7296  25    T__0                 ','
7296  26    T__1                 '0'
7296  27    T__0                 ','
7296  28    STRING               '""'
7296  30    T__0                 ','
7296  31    STRING               '""'
7296  33    RBRACE               '}'
7296  34    T__0                 ','
7297  0     LBRACE               '{'
7297  1     T__1                 '0'
7297  2     T__0                 ','
7298  0     LBRACE               '{'
7298  1     STRING               '"Преобразование простых типов"'
7298  31    T__0                 ','
7298  32    T__1                 '0'
7298  33    T__0                 ','
7298  34    T__1                 '0'
7298  35    T__0                 ','
7298  36    STRING               '""'
7298  38    T__0                 ','
7298  39    STRING               '"//Значение простых типов можно преобразовывать с помощью оператора - наименования типа:\r\n\r\n//в число\r\nЗнчЧисло = Число(""22""); //при невозможности преобразовать будет\r\nвызвана ошибка, поэтому лучше использовать обработчик ошибок \r\n(см. далее)\r\n\r\n//в строку\r\nЗнчСтрока = Строка(22);\r\nЗнчСтрока = СокрЛП(22);\r\nЗнчСтрока = Формат(22, ""ЧГ=0"");\r\n\r\n//в дату\r\nЗнчДата = Дата(""20120101120000""); //01.01.2012 12:00:00\r\nЗнчДата = Дата(2012, 01, 01, 12, 0, 0);\r\nЗнчДата = Дата(2012, 01, 01);"'
7313  30    RBRACE               '}'
7314  0     RBRACE               '}'
7314  1     T__0                 ','
7315  0     LBRACE               '{'
7315  1     T__1                 '0'
7315  2     T__0                 ','
7316  0     LBRACE               '{'
7316  1     STRING               '"Преобразование сложных типов"'
7316  31    T__0                 ','
7316  32    T__1                 '0'
7316  33    T__0                 ','
7316  34    T__1                 '0'
7316  35    T__0                 ','
7316  36    STRING               '""'
7316  38    T__0                 ','
7316  39    STRING               '"//создаем список типов, в которые требуется преобразовывать\r\nСписокТипов = Новый Массив();\r\nСписокТипов.Добавить(Тип(""СправочникСсылка.Справочник1""));\r\nТипы = Новый ОписаниеТипов(СписокТипов);\r\n\r\n//преобразование\r\nЗнч = Типы.ПривестиЗначение(Стр);"'
7322  34    RBRACE               '}'
7323  0     RBRACE               '}'
7324  0     RBRACE               '}'
7324  1     T__0                 ','
7325  0     LBRACE               '{'
7325  1     INT                  '3'
7325  2     T__0                 ','
7326  0     LBRACE               '{'
7326  1     STRING               '"Форматирование значений"'
7326  26    T__0                 ','
7326  27    T__2                 '1'
7326  28    T__0                 ','
7326  29    T__1                 '0'
7326  30    T__0                 ','
7326  31    STRING               '""'
7326  33    T__0                 ','
7326  34    STRING               '""'
7326  36    RBRACE               '}'
7326  37    T__0                 ','
7327  0     LBRACE               '{'
7327  1     T__1                 '0'
7327  2     T__0                 ','
7328  0     LBRACE               '{'
7328  1     STRING               '"Формат даты и числа по правилам различных стран"'
7328  50    T__0                 ','
7328  51    T__1                 '0'
7328  52    T__0                 ','
7328  53    T__1                 '0'
7328  54    T__0                 ','
7328  55    STRING               '""'
7328  57    T__0                 ','
7328  58    STRING               '"L = КраткоеНаименованиеНужнойСтраны\r\n//> 28.03.2012 14:21:32\r\nФормат( ТекущаяДата(), «L=ru»)\r\n//> 3/28/2012 2:21:24 PM\r\nФормат( ТекущаяДата(), «L=en»)\r\n//> 28/03/2012 14:22:08\r\nФормат( ТекущаяДата(), «L=fr»)\r\n"'
7335  1     RBRACE               '}'
7336  0     RBRACE               '}'
7336  1     T__0                 ','
7337  0     LBRACE               '{'
7337  1     T__1                 '0'
7337  2     T__0                 ','
7338  0     LBRACE               '{'
7338  1     STRING               '"Формат даты"'
7338  14    T__0                 ','
7338  15    T__1                 '0'
7338  16    T__0                 ','
7338  17    T__1                 '0'
7338  18    T__0                 ','
7338  19    STRING               '""'
7338  21    T__0                 ','
7338  22    STRING               '"ДФ = ""дмг чмс""   \r\n\r\n//Расшифровка частей даты:\r\n//    д день\r\n//      o маленькая «д»\r\n//      o может быть указана от 1 до 4 раз\r\n//    М месяц\r\n//      o большая «М»\r\n//      o может быть указана от 1 до 4 раз\r\n//    г год\r\n//      o маленькая «г»\r\n//      o может быть указана 1 или 2 или 4 раза\r\n//    ч часы\r\n//      o маленькая «ч» 12ти часовой формат\r\n//      o большая «Ч» 24х часовой формат\r\n//      o может быть указана 1 или 2 раза\r\n//    м минуты\r\n//      o маленькая «м»\r\n//      o может быть указана 1 или 2 раза\r\n//    с секунды\r\n//      o маленькая «с»\r\n//      o может быть указана 1 или 2 раза\r\n//    вв отображение AM/PM для 12ти часового формата\r\n//    к квартал. \r\n\r\n//> 28.03.2012 02:44:44\r\nФормат(ТекущаяДата(), ""ДФ=""""дд.ММ.гггг чч:мм:сс"""""")\r\n//> 3/28/2012 2:44:44 PM\r\nФормат(ТекущаяДата(), ""ДФ="""" М / д /гггг ч:м:с вв"""""")\r\n//> 28/03/2012 02:44:44\r\nФормат(ТекущаяДата(), ""ДФ=""""дд/ММ/гггг чч:мм:сс"""""")\r\n//> среда, 28 марта 2012\r\nФормат(ТекущаяДата(), ""ДФ=""""дддд, дд ММММ гггг"""""")   \r\n\r\nДата = '20050101200103'; // 01 января 2005 года 20:01:03\r\n \r\n    // год\r\n    Формат(Дата, ""ДФ=г""); // 5\r\n    Формат(Дата, ""ДФ=гг""); // 05\r\n    Формат(Дата, ""ДФ=гггг""); // 2005\r\n \r\n    // номер квартала\r\n    Формат(Дата, ""ДФ=к""); // 1\r\n \r\n    // месяц\r\n    Формат(Дата, ""ДФ=М""); // 1\r\n    Формат(Дата, ""ДФ=ММ""); // 01\r\n    Формат(Дата, ""ДФ=МММ""); // янв.\r\n    Формат(Дата, ""ДФ=ММММ""); // Январь\r\n \r\n    // день\r\n    Формат(Дата, ""ДФ=д""); // 1\r\n    Формат(Дата, ""ДФ=дд""); // 01\r\n    Формат(Дата, ""ДФ=ддд""); // Сб\r\n    Формат(Дата, ""ДФ=дддд""); // суббота\r\n \r\n    // час\r\n    Формат(Дата, ""ДФ=ч""); // 8\r\n    Формат(Дата, ""ДФ=чч""); // 08\r\n    Формат(Дата, ""ДФ=Ч""); // 20\r\n    Формат(Дата, ""ДФ=ЧЧ""); // 20\r\n \r\n    // минута\r\n    Формат(Дата, ""ДФ=м""); // 1\r\n    Формат(Дата, ""ДФ=мм""); // 01\r\n \r\n    // секунда\r\n    Формат(Дата, ""ДФ=с""); // 3\r\n    Формат(Дата, ""ДФ=сс""); // 03\r\n	\r\n	//локальный формат даты при выводе\r\n	Формат(Дата, ""ДЛФ=Д""); // 01.01.2005\r\n    Формат(Дата, ""ДЛФ=ДД""); // 1 января 2005 г.\r\n    Формат(Дата, ""ДЛФ=В""); // 20:01:03\r\n    Формат(Дата, ""ДЛФ=ДДВ""); // 1 января 2005 г. 20:01:03\r\n    Формат(Дата, ""ДЛФ=ДВ""); // 01.01.2005 20:01:03"'
7413  53    RBRACE               '}'
7414  0     RBRACE               '}'
7414  1     T__0                 ','
7415  0     LBRACE               '{'
7415  1     T__1                 '0'
7415  2     T__0                 ','
7416  0     LBRACE               '{'
7416  1     STRING               '"Формат числа"'
7416  15    T__0                 ','
7416  16    T__1                 '0'
7416  17    T__0                 ','
7416  18    T__1                 '0'
7416  19    T__0                 ','
7416  20    STRING               '""'
7416  22    T__0                 ','
7416  23    STRING               '"//группировка «ЧГ»\r\nСтрЧисло = Строка(22300500)\r\n//> 22 300 500\r\nФормат(22300500, ""ЧГ=0"")\r\n//>22300500 //вообще убрали нули\r\nФормат(22300500, ""ЧГ=6"")\r\n//> 22 300500 //сделали группировку только миллионов\r\n\r\n// оругление  «ЧДЦ»\r\nФормат(3.535353, ""ЧДЦ=""""2"""""")\r\n//> 3,54\r\n\r\n//символ-разделитель целой и дробной части «ЧРД» \r\nФормат(3.535353, ""ЧРД=""""."""""")\r\n//> 3.535353\r\n\r\n//вместо числа 0 «ЧН»\r\nФормат(0, ""ЧН=""""<не заполнено>"""""")\r\n//> <не заполнено>\r\n\r\n//ЧЦ (ND)     устанавливает общую длину представления числа (целой и дробной частей вместе взятых).\r\n              //При этом исходное число округляется в соответствии с общепринятыми правилами округления (0.5 как 1).\r\n			  //Если этот параметр задан, то для отображения дробной части числа обязательно указание следующего\r\n			  //параметра ЧДЦ, иначе дробная часть отображаться не будет.      \r\n			  ""ЧЦ=15""\r\n//ЧДЦ (NFD)	  устанавливает длину дробной части представления числа. Исходное число округляется \r\n              //при этом в соответствии с общепринятыми правилами округления (0.5 как 1).		  \r\n			  ""ЧДЦ=2""\r\n			  \r\n//ЧС (NS)	  устанавливает сдвиг разрядов: положительный — деление, отрицательный — умножение. Иными словами, \r\n              //исходное число будет умножено или поделено на 10 в степени n, где n — значение параметра \r\n\r\n//ЧРД (NDS)	  устанавливает символ-разделитель целой и дробной части\r\n              ""ЧРД=.""\r\n\r\n//ЧРГ (NGS)	  устанавливает символ-разделитель триад целой части числа. Если в качестве разделителя использовать пустую строку,\r\n              //то в этом случае разделителем будет символ неразрывного пробела\r\n			  ""ЧРГ=""\r\n\r\n//ЧН (NZ)	  устанавливает представление для нулевого значения числа. По умолчанию число 0 представляется в виде пустой строки. \r\n	          //Если задано только имя параметра, а значение не задано, то число 0 выводится как есть.\r\n			  //Внимание! Для числовых полей ввода этот параметр игнорируется\r\n			  ""ЧН=""\r\n			  \r\n//ЧВН (NLZ)	  определяет вывод лидирующих нулей для числа: если параметр задан, \r\n              //лидирующие нули выводятся; если не задан — не выводятся	\r\n			  ""ЧВН=""  \r\n\r\n//ЧГ (NG)	  определяет порядок группировки разрядов числа.\r\n              //В качестве значения указываются числа, через запятую, \r\n			  //обозначающие количество группируемых разрядов справа налево. \r\n			  //Имеют смысл только два первых числа. Первое из них указывает\r\n			  //первичную группировку, которая будет использована для наименее\r\n			  //значимых разрядов целой части числа. Если второе число не указано, \r\n			  //то будут сгруппированы только наименее значимые разряды. \r\n			  //Если в качестве второго числа задан 0, то для всех разрядов целой\r\n			  //части числа будет применено значение указанное для первичной группировки. \r\n			  //Если в качестве второго числа используется значение, отличное от 0, \r\n			  //то это значение будет использовано для группировки всех разрядов, \r\n			  //кроме уже сгруппированных наименее значимых.			  \r\n			  ""ЧГ=3,0""\r\n			  \r\n//ЧО (NN)	  определяет код представления отрицательных чисел. Возможные варианты:\r\n              //0	представление отрицательных чисел в скобках: -1 как (1)\r\n              //1	стандартное представление отрицательных чисел: -1 как -1\r\n              //2	стандартное представление отрицательных чисел минус через пробел: -1 как — 1\r\n              //3	представление отрицательных чисел с суффиксом: -1 как 1-\r\n              //4	представление отрицательных чисел с суффиксом через пробел: -1 как 1 —\r\n              ""ЧО=1""\r\n			  \r\n//ЧФ (NF)	  задает шаблон форматирования числа. Позиция исходного числа, отформатированного \r\n              //с учетом остальных параметров, указывается символом Ч. Остальные символы выводятся как есть.\r\n			  //Символы, находящиеся между двойными или одинарными кавычками выводятся как есть\r\n              ""ЧФ='Ч тыс'""\r\n"'
7490  1     RBRACE               '}'
7491  0     RBRACE               '}'
7492  0     RBRACE               '}'
7492  1     T__0                 ','
7493  0     LBRACE               '{'
7493  1     T__1                 '0'
7493  2     T__0                 ','
7494  0     LBRACE               '{'
7494  1     STRING               '"Определение типа и сравнение типов"'
7494  37    T__0                 ','
7494  38    T__1                 '0'
7494  39    T__0                 ','
7494  40    T__1                 '0'
7494  41    T__0                 ','
7494  42    STRING               '""'
7494  44    T__0                 ','
7494  45    STRING               '"Если ТипЗнч(Переменная) = Тип(""ИмяТипа"") Тогда\r\n	// пишем тут \r\nКонецЕсли	 \r\n\r\n//Базовые типы\r\nЕсли ТипЗнч(Знч) = Тип(""Число"") Тогда\r\nИначеЕсли Знч = Тип(""Строка"") Тогда\r\nИначеЕсли Знч = Тип(""Дата"") Тогда\r\nИначеЕсли Знч = Тип(""Булево"") Тогда\r\nКонецЕсли; \r\n//Типы базы данных\r\nЗнч = Справочники.Организации.ПустаяСсылка();\r\nЕсли ТипЗнч(Знч) = Тип(""СправочникСсылка.Организации"") Тогда\r\nИначеЕсли Знч = Тип(""СправочникОбъект.Организации"") Тогда\r\nИначеЕсли ТипЗнч(Знч) = Тип(""ДокументСсылка.ПоступлениеТоваров"") Тогда\r\nИначеЕсли Знч = Тип(""ДокументОбъект.ПоступлениеТоваров"") Тогда\r\nКонецЕсли;\r\r\n\r\nЕсли ТипЗнч(Знч) = Тип(""РегистрСведенийСписок.ИмяРегистра"") Тогда\r\nИначеЕсли Знч = Тип(""РегистрНакопленияНаборЗаписей.ИмяРегистра"") Тогда\r\nКонецЕсли \r\n//Типы 1С\r\nЕсли ТипЗнч(Знч) = Тип(""Массив"") Тогда\r\nИначеЕсли Знч = Тип(""СписокЗначений"") Тогда\r\nКонецЕсли;\r\n"'
7519  1     RBRACE               '}'
7520  0     RBRACE               '}'
7520  1     T__0                 ','
7521  0     LBRACE               '{'
7521  1     T__1                 '0'
7521  2     T__0                 ','
7522  0     LBRACE               '{'
7522  1     STRING               '"Определение значения ссылочного типа"'
7522  39    T__0                 ','
7522  40    T__1                 '0'
7522  41    T__0                 ','
7522  42    T__1                 '0'
7522  43    T__0                 ','
7522  44    STRING               '""'
7522  46    T__0                 ','
7522  47    STRING               '"Значение = Справочники.Организации.ПустаяСсылка();\r\nЕсли Справочники.ТипВсеСсылки().Содержит(ТипЗнч(Значение)) Тогда\r\n//это справочник\r\nИначеЕсли Документы.ТипВсеСсылки().Содержит( ТипЗнч(Значение)) Тогда\r\n//это документ\r\nКонецЕсли;"'
7527  11    RBRACE               '}'
7528  0     RBRACE               '}'
7528  1     T__0                 ','
7529  0     LBRACE               '{'
7529  1     INT                  '2'
7529  2     T__0                 ','
7530  0     LBRACE               '{'
7530  1     STRING               '"Работа с типами в запросе"'
7530  28    T__0                 ','
7530  29    T__2                 '1'
7530  30    T__0                 ','
7530  31    T__1                 '0'
7530  32    T__0                 ','
7530  33    STRING               '""'
7530  35    T__0                 ','
7530  36    STRING               '""'
7530  38    RBRACE               '}'
7530  39    T__0                 ','
7531  0     LBRACE               '{'
7531  1     T__1                 '0'
7531  2     T__0                 ','
7532  0     LBRACE               '{'
7532  1     STRING               '"Способ1"'
7532  10    T__0                 ','
7532  11    T__1                 '0'
7532  12    T__0                 ','
7532  13    T__1                 '0'
7532  14    T__0                 ','
7532  15    STRING               '""'
7532  17    T__0                 ','
7532  18    STRING               '" ""ВЫБРАТЬ\r\n| ВЫБОР\r\n| КОГДА ТИПЗНАЧЕНИЯ(Организация) = ТИП(Справочник.Организации)\r\n| ТОГДА Организация\r\n| ИНАЧЕ NULL\r\n| КОНЕЦ КАК Организация\r\n|ИЗ\r\n| Документ.ПоступлениеТоваров КАК ПоступлениеТоваров"""'
7539  55    RBRACE               '}'
7540  0     RBRACE               '}'
7540  1     T__0                 ','
7541  0     LBRACE               '{'
7541  1     T__1                 '0'
7541  2     T__0                 ','
7542  0     LBRACE               '{'
7542  1     STRING               '"Способ2"'
7542  10    T__0                 ','
7542  11    T__1                 '0'
7542  12    T__0                 ','
7542  13    T__1                 '0'
7542  14    T__0                 ','
7542  15    STRING               '""'
7542  17    T__0                 ','
7542  18    STRING               '"""ВЫБРАТЬ\r\n| ВЫБОР\r\n| КОГДА Организация ССЫЛКА Справочник.Организации\r\n| ТОГДА Организация\r\n| ИНАЧЕ NULL\r\n| КОНЕЦ КАК Организация\r\n|ИЗ\r\n| Документ.ПоступлениеТоваров КАК ПоступлениеТоваров"""'
7549  55    RBRACE               '}'
7550  0     RBRACE               '}'
7551  0     RBRACE               '}'
7552  0     RBRACE               '}'
7552  1     T__0                 ','
7553  0     LBRACE               '{'
7553  1     INT                  '6'
7553  2     T__0                 ','
7554  0     LBRACE               '{'
7554  1     STRING               '"Хранилище значений"'
7554  21    T__0                 ','
7554  22    T__2                 '1'
7554  23    T__0                 ','
7554  24    T__1                 '0'
7554  25    T__0                 ','
7554  26    STRING               '""'
7554  28    T__0                 ','
7554  29    STRING               '""'
7554  31    RBRACE               '}'
7554  32    T__0                 ','
7555  0     LBRACE               '{'
7555  1     T__1                 '0'
7555  2     T__0                 ','
7556  0     LBRACE               '{'
7556  1     STRING               '"Пример работы с Хранилищем значений"'
7556  38    T__0                 ','
7556  39    T__1                 '0'
7556  40    T__0                 ','
7556  41    T__1                 '0'
7556  42    T__0                 ','
7556  43    STRING               '""'
7556  45    T__0                 ','
7556  46    STRING               '"//Создаем значение\r\nЗнч = Новый ТаблицаЗначений(); \r\n//Помещаем значение в хранилище значений:\r\nХранилище = Новый ХранилищеЗначения(Знч, Новый СжатиеДанных(9));     \r\n// 9 - степень сжатия, это мах - значение \r\r\n// сохраняем значение в БД\r\nСправочникСсылка = Справочники.Хранилище.СоздатьЭлемент();\r\nСправочникСсылка.ХранилищеЗначения = Хранилище;\r\nСправочникСсылка.Записать();\r\n\r\n//Пример с сохранением файла в БД\r\nНастройки = Новый Структура();\r\nНастройки.Вставить(""ПоУмолчанию"", Истина);\r\nНастройки.Вставить(""Наименование"", ""Наименование1"");\r\nХранилище = Новый ХранилищеЗначения(Настройки, Новый \r\nСжатиеДанных(9));\r\nЗначениеВФайл(""C:\"", Хранилище);\r\n\r\n//Пример – сохранение значения из файла:\r//Значение - картинка из файла\r\nФайл = Новый Картинка(""C:\ФайлКартинки.jpg"");\r\nХранилище = Новый ХранилищеЗначения(Файл, Новый \r\nСжатиеДанных(9));\r\n//Значение - произвольный файл\r\nФайл = Новый ДвоичныеДанные(""C:\ИсполняемыйФайл.exe"");\r\nХранилище = Новый ХранилищеЗначения(Файл, Новый \r\nСжатиеДанных(9));\r\n//Значение - текстовый файл\r\nФайл = Новый ЧтениеТекста(""C:\ТекстовыйФайл.txt"");\r\nТекстовыеДанные = Файл.Прочитать();\r\nХранилище = Новый ХранилищеЗначения(ТекстовыеДанные, Новый \r\nСжатиеДанных(9));\r\r\n\r\n//Распаковка значений из хранилища значений\r\nЗнч = Хранилище.Получить();\r\nЕсли Знч = Неопределено Тогда\r\nСообщить(""Ошибка получения значения из хранилища"");\r\nКонецЕсли"'
7592  10    RBRACE               '}'
7593  0     RBRACE               '}'
7593  1     T__0                 ','
7594  0     LBRACE               '{'
7594  1     INT                  '7'
7594  2     T__0                 ','
7595  0     LBRACE               '{'
7595  1     STRING               '"Сохранение в Хранилище Значений"'
7595  34    T__0                 ','
7595  35    T__2                 '1'
7595  36    T__0                 ','
7595  37    T__1                 '0'
7595  38    T__0                 ','
7595  39    STRING               '""'
7595  41    T__0                 ','
7595  42    STRING               '""'
7595  44    RBRACE               '}'
7595  45    T__0                 ','
7596  0     LBRACE               '{'
7596  1     T__1                 '0'
7596  2     T__0                 ','
7597  0     LBRACE               '{'
7597  1     STRING               '"Таблица значений"'
7597  19    T__0                 ','
7597  20    T__1                 '0'
7597  21    T__0                 ','
7597  22    T__1                 '0'
7597  23    T__0                 ','
7597  24    STRING               '""'
7597  26    T__0                 ','
7597  27    STRING               '"// *** 1.Пример (Таблица значений):\r\n   ЗначенияТЗ = Новый ТаблицаЗначений(); // Создание значения ""ТЗ""\r\n\r\n   // Вставка в хранилище значений\r\n   Хранилище_Зн = Новый ХранилищеЗначения(ЗначенияТЗ, Новый СжатиеДанных(9));// ""9"" - макс.степень сжатия\r\n\r\n   // Сохранение значения в реквизит объекта конфигурации (тип: ХранилищеЗначения)\r\n   СправочникСтранаСсылка = Справочники.Страны.НайтиПоНаименованию(""Испания"");\r\n   Если Не СправочникСтранаСсылка.Пустая() Тогда\r\n       // Изменим и запишем численность жителей в стране\r\n       СтранаИспания = СправочникСтранаСсылка.ПолучитьОбъект();\r\n       СтранаИспания.ХранилищеЗначения = Хранилище_Зн;\r\n       СтранаИспания.Записать();\r\n   КонецЕсли;"'
7610  14    RBRACE               '}'
7611  0     RBRACE               '}'
7611  1     T__0                 ','
7612  0     LBRACE               '{'
7612  1     T__1                 '0'
7612  2     T__0                 ','
7613  0     LBRACE               '{'
7613  1     STRING               '"Табличный документ"'
7613  21    T__0                 ','
7613  22    T__1                 '0'
7613  23    T__0                 ','
7613  24    T__1                 '0'
7613  25    T__0                 ','
7613  26    STRING               '""'
7613  28    T__0                 ','
7613  29    STRING               '"   // *** 2.Пример (Табличный документ):\r\n   ЗначенияТабДок=Новый ТабличныйДокумент;\r\n   ЗначенияТабДок.Вывести(ЭлементыФормы.ПолеТабличногоДокумента1);\r\n   Хранилище_ТабДок=Новый ХранилищеЗначения(ЗначенияТабДок);"'
7616  61    RBRACE               '}'
7617  0     RBRACE               '}'
7617  1     T__0                 ','
7618  0     LBRACE               '{'
7618  1     T__1                 '0'
7618  2     T__0                 ','
7619  0     LBRACE               '{'
7619  1     STRING               '"Структура"'
7619  12    T__0                 ','
7619  13    T__1                 '0'
7619  14    T__0                 ','
7619  15    T__1                 '0'
7619  16    T__0                 ','
7619  17    STRING               '""'
7619  19    T__0                 ','
7619  20    STRING               '"// *** 3.Пример (Структура):\r\n   ЗначенияСтр = Новый Структура(); // Создание значения ""Структура""\r\n   ЗначенияСтр.Вставить(""Код"", ""34"");\r\n   ЗначенияСтр.Вставить(""Наименование"", ""Испания"");\r\n   ЗначенияСтр.Вставить(""Описание"", ""Европейская страна, расположенная на Пиренейском полуострове"");\r\n   ЗначенияСтр.Вставить(""Население"", 46600000);\r\n   // Вставка в хранилище значений\r\n   Хранилище_Стр = Новый ХранилищеЗначения(ЗначенияСтр, Новый СжатиеДанных(9));// ""9"" - макс.степень сжатия\r\n   ЗначениеВФайл(""D:\import\"", Хранилище_Стр); // Сохранение значения в файл"'
7627  79    RBRACE               '}'
7628  0     RBRACE               '}'
7628  1     T__0                 ','
7629  0     LBRACE               '{'
7629  1     T__1                 '0'
7629  2     T__0                 ','
7630  0     LBRACE               '{'
7630  1     STRING               '"Любой файл"'
7630  13    T__0                 ','
7630  14    T__1                 '0'
7630  15    T__0                 ','
7630  16    T__1                 '0'
7630  17    T__0                 ','
7630  18    STRING               '""'
7630  20    T__0                 ','
7630  21    STRING               '"// *** 4.Пример (Любой файл) :\r\n   ФайлДвоичныеДанные = Новый ДвоичныеДанные(""D:\import\КлиентБанк_РБ.exe"");\r\n   Хранилище_Файл = Новый ХранилищеЗначения(ФайлДвоичныеДанные, Новый СжатиеДанных(0));// ""0"" - без сжатия"'
7632  109   RBRACE               '}'
7633  0     RBRACE               '}'
7633  1     T__0                 ','
7634  0     LBRACE               '{'
7634  1     T__1                 '0'
7634  2     T__0                 ','
7635  0     LBRACE               '{'
7635  1     STRING               '"Файл картинка"'
7635  16    T__0                 ','
7635  17    T__1                 '0'
7635  18    T__0                 ','
7635  19    T__1                 '0'
7635  20    T__0                 ','
7635  21    STRING               '""'
7635  23    T__0                 ','
7635  24    STRING               '" // 5.Пример (Файл картинка) :\r\n   ФайлФото = Новый Картинка(""D:\import\ФотоСотрудника.png"");\r\n   Хранилище_Фото = Новый ХранилищеЗначения(ФайлФото, Новый СжатиеДанных(5));// ""5"" - средн.степень сжатия\r\n"'
7638  1     RBRACE               '}'
7639  0     RBRACE               '}'
7639  1     T__0                 ','
7640  0     LBRACE               '{'
7640  1     T__1                 '0'
7640  2     T__0                 ','
7641  0     LBRACE               '{'
7641  1     STRING               '"Текстовый файл"'
7641  17    T__0                 ','
7641  18    T__1                 '0'
7641  19    T__0                 ','
7641  20    T__1                 '0'
7641  21    T__0                 ','
7641  22    STRING               '""'
7641  24    T__0                 ','
7641  25    STRING               '"// *** 6.Пример (Текстовый файл) :\r\n   ФайлТекст = Новый ЧтениеТекста(""D:\import\Война_и_мир.txt"");\r\n   ТекстИзФайла = ФайлТекст.Прочитать();\r\n   Хранилище_Текст = Новый ХранилищеЗначения(ТекстИзФайла, Новый СжатиеДанных(1));// ""1"" - мин.степень сжатия"'
7644  112   RBRACE               '}'
7645  0     RBRACE               '}'
7645  1     T__0                 ','
7646  0     LBRACE               '{'
7646  1     T__1                 '0'
7646  2     T__0                 ','
7647  0     LBRACE               '{'
7647  1     STRING               '"Отчет/обработка 1С"'
7647  21    T__0                 ','
7647  22    T__1                 '0'
7647  23    T__0                 ','
7647  24    T__1                 '0'
7647  25    T__0                 ','
7647  26    STRING               '""'
7647  28    T__0                 ','
7647  29    STRING               '"// *** 7.Пример (Отчет/обработка 1С) :\r\n   Хранилище_Epf = Новый ХранилищеЗначения(Новый ДвоичныеДанные(""D:\import\Otchet_realizacija_2020.epf"", СтепеньСжатия));\r\n"'
7649  1     RBRACE               '}'
7650  0     RBRACE               '}'
7651  0     RBRACE               '}'
7651  1     T__0                 ','
7652  0     LBRACE               '{'
7652  1     T__2                 '1'
7652  2     T__0                 ','
7653  0     LBRACE               '{'
7653  1     STRING               '"Восстановление из Хранилище Значений"'
7653  39    T__0                 ','
7653  40    T__2                 '1'
7653  41    T__0                 ','
7653  42    T__1                 '0'
7653  43    T__0                 ','
7653  44    STRING               '""'
7653  46    T__0                 ','
7653  47    STRING               '""'
7653  49    RBRACE               '}'
7653  50    T__0                 ','
7654  0     LBRACE               '{'
7654  1     T__1                 '0'
7654  2     T__0                 ','
7655  0     LBRACE               '{'
7655  1     STRING               '"Процедура ВосстановлениеИзХранилищеЗначений()"'
7655  48    T__0                 ','
7655  49    T__1                 '0'
7655  50    T__0                 ','
7655  51    T__1                 '0'
7655  52    T__0                 ','
7655  53    STRING               '""'
7655  55    T__0                 ','
7655  56    STRING               '"&НаСервере\r\nПроцедура ВосстановлениеИзХранилищеЗначений();\r\n\r\n    ИмяФайла = ""D:\import\Война_и_мир.txt"";\r\n\r\n    // Двоичные данные можно восстановить из хранилища значения методом Получить и записать в файл методом Записать()\r\n    Если ТипЗнч(РеквизитХранилище) = Тип(""ДвоичныеДанные"") Тогда\r\n\r\n        // Хранилище.Получить()<>Неопределено Тогда // Процедура извлекает данные из хранилища (требует времени)\r\n        // Для больших объемов данных рекомендуется использовать доп.реквизит (Например: Булево) Содержит данные - Истина\r\n        ДанныеХранилища = РеквизитХранилище.Получить();\r\n        Если ДанныеХранилища = Неопределено Тогда\r\n            Сообщить(""Ошибка получения данных из хранилища значений 1С"");\r\n        КонецЕсли;\r\n        ДанныеХранилища.Записать(ИмяФайла); // Записываем восстановленые данные в файл\r\n\r\n        // Восстановление Табличного документа\r\n        ЭлементыФормы.ПолеТабличногоДокумента1.Вывести(ДанныеХранилища);\r\n\r\n        // Восстановление и запуск Отчета/обработки 1С\r\n        ИмяФайла_Epf = ""D:\import\Otchet_realizacija_2020.epf"";\r\n        ДвоичныеДанные = РеквизитХранилище.Получить();\r\n        ДвоичныеДанные.Записать(ИмяФайла_Epf);\r\n        Epf = ВнешниеОбработки.Создать(ИмяФайла_Epf);\r\n        Epf.ПолучитьФорму().Открыть();\r\n\r\n    Иначе\r\n        ДанныеХранилища = РеквизитХранилище;\r\n    КонецЕсли;\r\n\r\n    // Файлы зарегистрированного типа (doc, xls, pdf, jpg, txt, exe...)\r\n    ЗапуститьПриложение(ИмяФайла);\r\n\r\nКонецПроцедуры"'
7688  15    RBRACE               '}'
7689  0     RBRACE               '}'
7690  0     RBRACE               '}'
7690  1     T__0                 ','
7691  0     LBRACE               '{'
7691  1     T__1                 '0'
7691  2     T__0                 ','
7692  0     LBRACE               '{'
7692  1     STRING               '"Очистка реквизита Хранилище Значений"'
7692  39    T__0                 ','
7692  40    T__1                 '0'
7692  41    T__0                 ','
7692  42    T__1                 '0'
7692  43    T__0                 ','
7692  44    STRING               '""'
7692  46    T__0                 ','
7692  47    STRING               '"&НаКлиенте\r\nПроцедура ОчисткаРеквизитаХранилищеЗначений();\r\n\r\n    РеквизитХранилище = Неопределено;\r\n\r\nКонецПроцедуры"'
7697  15    RBRACE               '}'
7698  0     RBRACE               '}'
7698  1     T__0                 ','
7699  0     LBRACE               '{'
7699  1     T__1                 '0'
7699  2     T__0                 ','
7700  0     LBRACE               '{'
7700  1     STRING               '"Проверка значения Хранилище Значений"'
7700  39    T__0                 ','
7700  40    T__1                 '0'
7700  41    T__0                 ','
7700  42    T__1                 '0'
7700  43    T__0                 ','
7700  44    STRING               '""'
7700  46    T__0                 ','
7700  47    STRING               '"&НаКлиенте\r\nПроцедура ПроверкаЗначенияХранилищеЗначений();\r\n\r\n    Значение = РеквизитХранилище.Получить();\r\n    Если Значение <> Неопределено Тогда\r\n        Если ТипЗнч(Значение) = Тип(""Строка"") Тогда\r\n            Сообщить(""Это строка"");\r\n        ИначеЕсли ТипЗнч(Значение) = Тип(""Картинка"") Тогда\r\n            Сообщить(""Это фотография (картинка)"");\r\n        КонецЕсли;\r\n    КонецЕсли;\r\n\r\nКонецПроцедуры"'
7712  15    RBRACE               '}'
7713  0     RBRACE               '}'
7713  1     T__0                 ','
7714  0     LBRACE               '{'
7714  1     INT                  '2'
7714  2     T__0                 ','
7715  0     LBRACE               '{'
7715  1     STRING               '"Готовые Решения"'
7715  18    T__0                 ','
7715  19    T__2                 '1'
7715  20    T__0                 ','
7715  21    T__1                 '0'
7715  22    T__0                 ','
7715  23    STRING               '""'
7715  25    T__0                 ','
7715  26    STRING               '""'
7715  28    RBRACE               '}'
7715  29    T__0                 ','
7716  0     LBRACE               '{'
7716  1     T__1                 '0'
7716  2     T__0                 ','
7717  0     LBRACE               '{'
7717  1     STRING               '"Загрузка файла (скан подписи/печати для документов) в хранилище значения"'
7717  75    T__0                 ','
7717  76    T__1                 '0'
7717  77    T__0                 ','
7717  78    T__1                 '0'
7717  79    T__0                 ','
7717  80    STRING               '""'
7717  82    T__0                 ','
7717  83    STRING               '"&НаКлиенте\r\nПроцедура ЗагрузитьФайлСПодписью(Команда) // кнопка на форме\r\n\r\n    ФильтрФорматов =\r\n   ""Все картинки (*.bmp;*.dib;*.rle;*.jpg;*.jpeg;*.tif;*.gif;*.png;*.ico;*.wmf;*.emf)|""\r\n    +""*.bmp;*.dib;*.rle;*.jpg;*.jpeg;*.tif;*.gif;*.png;*.ico;*.wmf;*.emf|""\r\n    + ""Формат PNG (*.png)|*.png|""\r\n    + ""Формат JPEG (*.jpg;*.jpeg)|*.jpg;*.jpeg|""\r\n    + ""Формат GIF (*.gif)|*.gif|""\r\n    + ""Формат TIFF (*.tif)|*.tif|""\r\n    + ""Формат BMP (*.bmp;*.dib;*.rle)|*.bmp;*.dib;*.rle|""\r\n    + ""Формат ICON (*.ico)|*.ico|""\r\n    + ""Формат метафайл (*.wmf;*.emf)|*.wmf;*.emf|"";\r\n\r\n    ПараметрыДиалога = Новый ПараметрыДиалогаПомещенияФайлов(""Выберите картинку с подписью"", Ложь, ФильтрФорматов);\r\n\r\n    ОписаниеОповещения = Новый ОписаниеОповещения(""ПослеЗакрытияДиалогаВыбораПодписи"", ЭтаФорма);\r\n    // Описание оповещение будет вызвана после помещения файла во временное хранилище\r\n\r\n    НачатьПомещениеФайлаНаСервер(ОписаниеОповещения,,,, ПараметрыДиалога, УникальныйИдентификатор); // c 8.3.15\r\n    // Асинх.метод НачатьПомещениеФайлаНаСервер() возвращает результат и доп.параметры.\r\n    // Результат - переменная (с типом ОписаниеФайла)\r\n    // Доп.параметры - в примере пустые\r\n\r\nКонецПроцедуры\r\n\r\n &НаКлиенте\r\nПроцедура ПослеЗакрытияДиалогаВыбораПодписи(ОписаниеФайла, ДопПараметры) Экспорт\r\n\r\n    Если ОписаниеФайла.ПомещениеФайлаОтменено Тогда\r\n        Возврат;\r\n    КонецЕсли;\r\n\r\n    АдресХранилища = ОписаниеФайла.Адрес; // АдресХранилища - реквизит формы\r\n\r\nКонецПроцедуры\r\n\r\n &НаСервере\r\nПроцедура ПередЗаписьюНаСервере(Отказ, ТекущийОбъект, ПараметрыЗаписи)\r\n\r\n    // Получаем файл из временного хранилища и кладём его в реквизит (с типом ХранилищеЗначения)\r\n    Если ЭтоАдресВременногоХранилища(АдресХранилища) Тогда // АдресХранилища - реквизит формы\r\n        ТекущийОбъект.Подпись = Новый ХранилищеЗначения(ПолучитьИзВременногоХранилища(АдресХранилища));\r\n    КонецЕсли;\r\n\r\nКонецПроцедуры"'
7762  15    RBRACE               '}'
7763  0     RBRACE               '}'
7763  1     T__0                 ','
7764  0     LBRACE               '{'
7764  1     T__1                 '0'
7764  2     T__0                 ','
7765  0     LBRACE               '{'
7765  1     STRING               '"Замена файла в хранилище значения"'
7765  36    T__0                 ','
7765  37    T__1                 '0'
7765  38    T__0                 ','
7765  39    T__1                 '0'
7765  40    T__0                 ','
7765  41    STRING               '""'
7765  43    T__0                 ','
7765  44    STRING               '"&НаСервере\r\nПроцедура ЗаменаФайлаВХранилище() Экспорт\r\n\r\n    НазваниеФайла = ""Война_и_мир"";\r\n    ИмяФайла = ""D:\import\""+НазваниеФайла+"".txt"";\r\n\r\n    Хранилище_Файл = Новый ХранилищеЗначения(Новый ДвоичныеДанные(ИмяФайла));\r\n\r\n    Текущая_книга = Справочники.Книги.НайтиПоНаименованию(НазваниеФайла);\r\n    Если Текущая_книга.Пустая() Тогда\r\n         Сообщить(""Книга ""+НазваниеФайла+"" в базе данных 1С не найдена!"");\r\n    Иначе // Найдена - меняем!\r\n        Справочник_Книга = Текущая_книга.ПолучитьОбъект();\r\n        Справочник_Книга.Хранилище = Хранилище_Файл;\r\n        Справочник_Книга.Записать();\r\n    КонецЕсли;\r\n\r\nКонецПроцедуры"'
7782  15    RBRACE               '}'
7783  0     RBRACE               '}'
7784  0     RBRACE               '}'
7785  0     RBRACE               '}'
7785  1     T__0                 ','
7786  0     LBRACE               '{'
7786  1     INT                  '2'
7786  2     T__0                 ','
7787  0     LBRACE               '{'
7787  1     STRING               '"Метаданные"'
7787  13    T__0                 ','
7787  14    T__2                 '1'
7787  15    T__0                 ','
7787  16    T__1                 '0'
7787  17    T__0                 ','
7787  18    STRING               '""'
7787  20    T__0                 ','
7787  21    STRING               '""'
7787  23    RBRACE               '}'
7787  24    T__0                 ','
7788  0     LBRACE               '{'
7788  1     INT                  '7'
7788  2     T__0                 ','
7789  0     LBRACE               '{'
7789  1     STRING               '"Метаданные конфигурации"'
7789  26    T__0                 ','
7789  27    T__2                 '1'
7789  28    T__0                 ','
7789  29    T__1                 '0'
7789  30    T__0                 ','
7789  31    STRING               '""'
7789  33    T__0                 ','
7789  34    STRING               '""'
7789  36    RBRACE               '}'
7789  37    T__0                 ','
7790  0     LBRACE               '{'
7790  1     T__1                 '0'
7790  2     T__0                 ','
7791  0     LBRACE               '{'
7791  1     STRING               '"Пример Выбор всех документов в список значений"'
7791  49    T__0                 ','
7791  50    T__1                 '0'
7791  51    T__0                 ','
7791  52    T__1                 '0'
7791  53    T__0                 ','
7791  54    STRING               '""'
7791  56    T__0                 ','
7791  57    STRING               '"спДокументовКонфигурации = Новый СписокЗначений(); //сюда будем сохранять список\r\n//Метаданные - глобальная переменная, которая дает доступ ко всем метаданным конфигурации\r\n//Метаданные.Документы - коллекция документов конфигурации\r\nДля каждого Документ из Метаданные.Документы Цикл\r\n   //Документ - это метаданные документа (каждого, так как мы обходим их в цикле)\r\n   //.Имя - наименование документа так, как оно задано в конфигурации\r\n   //.Синоним - ""человеческое"" наименование документа, которое отображается пользователю\r\n   //список значений может хранить значение (имя документа) и ""представление для пользователя"" (как раз - синоним документа) \r\n   спДокументовКонфигурации.Добавить( Документ.Имя, Документ.Синоним );\r\nКонецЦикла;\r\n//даем возможность пользователю выбрать из списка нужный документ\r\nэлДокумент = спДокументовКонфигурации.ВыбратьЭлемент();\r\n//если пользователь нажал ""Отмена"", то результатом выбора будет значение НЕОПРЕДЕЛЕНО, иначе результатом будет - выбранный элемент\r\nЕсли элДокумент <> Неопределено Тогда\r\n    //в .Значение списка значений мы записывали имя документа ""как в конфигурации""\r\n	//создадим новый документ с таким именем, напомним - к документам можно обращаться Документы.ИмяДокумента или Документы[ИмяДокумента]\r\n   обДокумент = Документы[элДокумент.Значение].СоздатьДокумент();\r\n   //ДокументОбъект.ПолучитьФорму() - возвращает форму с указанным именем, а если имя не указано - то форму ""поумолчанию""\r\n   обДокумент.ПолучитьФорму().Открыть();\r\nКонецЕсли;"'
7810  11    RBRACE               '}'
7811  0     RBRACE               '}'
7811  1     T__0                 ','
7812  0     LBRACE               '{'
7812  1     T__1                 '0'
7812  2     T__0                 ','
7813  0     LBRACE               '{'
7813  1     STRING               '"Список всех документов через запрос"'
7813  38    T__0                 ','
7813  39    T__1                 '0'
7813  40    T__0                 ','
7813  41    T__1                 '0'
7813  42    T__0                 ','
7813  43    STRING               '""'
7813  45    T__0                 ','
7813  46    STRING               '"ТекстЗапроса = """";\r\nДля каждого Документ из Метаданные.Документы Цикл\r\n//несколько запросов объединяются друг с другом строкой ""ОБЪЕДИНИТЬ ВСЕ""\r\n//если это не первая итерация цикла, то нужно добавить объединение запросов\r\n   Если не ПустаяСтрока(ТекстЗапроса) Тогда\r\n        ТекстЗапроса = ТекстЗапроса + ""\r\n        |\r\n        | ОБЪЕДИНИТЬ ВСЕ\r\n        | "";\r\n	КонецЕсли;\r\n	\r\n//добавляем имя документа\r\n//вид документа - добавляем строкой, выведем пользователю синоним метаданных\r\n//момент времени - используем для сортировки документов (подробнее см. ""Момент времени"")\r\n//ссылка - для обращения потом к документу\r\n//ограничим по периоду, так как если много документов - получение списка может занять слишком много ресурсов\r\n//обратите внимание - если в конфигурации много видов документов, то запрос работать не будет - так как существует \r\n//ограничение на кол-во таблиц в одном запросе\r\n//в этом случае нужно прописать разбиение запроса на пакеты по N документов и объединение результатов серии запросов в одной таблице	\r\n    ТекстЗапроса = ТекстЗапроса + ""\r\n    |ВЫБРАТЬ\r\n    | """""" + Документ.Синоним + """""" КАК ВидДокумента,\r\n    | Дата,\r\n    | Номер,\r\n    | МоментВремени,\r\n    | Ссылка\r\n    |ИЗ\r\n    | Документ."" + Документ.Имя + ""\r\n    |ГДЕ\r\n    | Дата между &НачалоПериода И &ОкончаниеПериода"";\r\nКонецЦикла;	\r\n\r\n//добавим сортировку\r\nТекстЗапроса = ТекстЗапроса + ""\r\n       |УПОРЯДОЧИТЬ ПО \r\n       | МоментВремени"";\r\nЗапрос = Новый Запрос(ТекстЗапроса);\r\n//параметры запроса - период - текущий месяц\r\nЗапрос.УстановитьПараметр(""НачалоПериода"", НачалоМесяца(ТекущаяДата()));\r\nЗапрос.УстановитьПараметр(""ОкончаниеПериода"", КонецМесяца(ТекущаяДата()));\r\n//в нашем примере просто покажем результат пользователю\r\n//аккуратно - если в базе много документов, то показ результатов займет много времени\r\nЗапрос.Выполнить().Выгрузить().ВыбратьСтроку(); \r\n"'
7856  1     RBRACE               '}'
7857  0     RBRACE               '}'
7857  1     T__0                 ','
7858  0     LBRACE               '{'
7858  1     T__1                 '0'
7858  2     T__0                 ','
7859  0     LBRACE               '{'
7859  1     STRING               '"Получить метаданные объекта"'
7859  30    T__0                 ','
7859  31    T__1                 '0'
7859  32    T__0                 ','
7859  33    T__1                 '0'
7859  34    T__0                 ','
7859  35    STRING               '""'
7859  37    T__0                 ','
7859  38    STRING               '"// Получение метаданных объекта\r\nПроцедура ПолучитьМетаданныеОбъекта(Объект)\r\n    // Создаем ссылку на метаданные объекта\r\n    СсылкаНаМетаданные = Метаданные.НайтиПоТипу(Объект);\r\n    \r\n    // Проверяем, найдены ли метаданные\r\n    Если СсылкаНаМетаданные <> Неопределено Тогда\r\n        // Выводим название объекта\r\n        Сообщить(""Название объекта: "" + СсылкаНаМетаданные.Название);\r\n        \r\n        // Выводим описание объекта\r\n        Сообщить(""Описание объекта: "" + СсылкаНаМетаданные.Описание);\r\n        \r\n        // Выводим список полей объекта\r\n        Сообщить(""Список полей объекта:"");\r\n        Для Каждого Поле Из СсылкаНаМетаданные.Реквизиты Цикл\r\n            Сообщить(Поле.Название);\r\n        КонецЦикла;\r\n    Иначе\r\n        Сообщить(""Метаданные объекта не найдены"");\r\n    КонецЕсли;\r\nКонецПроцедуры"'
7880  15    RBRACE               '}'
7881  0     RBRACE               '}'
7881  1     T__0                 ','
7882  0     LBRACE               '{'
7882  1     T__1                 '0'
7882  2     T__0                 ','
7883  0     LBRACE               '{'
7883  1     STRING               '"Структура метаданных конфигурации (пример оформления интерфейса обработки с использованием макета)"'
7883  101   T__0                 ','
7883  102   T__1                 '0'
7883  103   T__0                 ','
7883  104   T__1                 '0'
7883  105   T__0                 ','
7883  106   STRING               '""'
7883  108   T__0                 ','
7883  109   STRING               '"//В данном примере создается форма МояОбработкаФорма, которая содержит макет.\r\n//В макет добавляются элементы, такие как текстовый объект ТекстМетаданных, \r\n//который будет выводить структуру метаданных конфигурации, и кнопка КнопкаЗакрыть для закрытия формы. \r\n//После добавления элементов в макет, форма открывается модально с помощью метода ОткрытьМодально().\r\nФорма = Новый Форма(""МояОбработкаФорма"");\r\nФорма.Текст = ""Структура метаданных конфигурации"";\r\nФорма.Размеры = Новый Размеры(400, 300);\r\nФорма.Макет = Новый Макет();\r\nФорма.Макет.РасположениеЭлементов = РасположениеЭлементов.Вертикаль;\r\nФорма.Макет.Отступ = 10;\r\n\r\n// Добавление элементов в макет\r\nТекстМетаданных = Новый Текст(""ТекстМетаданных"");\r\nТекстМетаданных.Текст = ""Здесь будет выводиться структура метаданных конфигурации"";\r\nТекстМетаданных.АвтоРазмер = Истина;\r\nФорма.Макет.Добавить(ТекстМетаданных);\r\n\r\nКнопкаЗакрыть = Новый Кнопка(""КнопкаЗакрыть"");\r\nКнопкаЗакрыть.Текст = ""Закрыть"";\r\nКнопкаЗакрыть.АвтоРазмер = Истина;\r\nКнопкаЗакрыть.ОбработчикНажатия = Процедура()\r\n    Форма.Закрыть();\r\nКонецПроцедуры;\r\nФорма.Макет.Добавить(КнопкаЗакрыть);\r\n\r\nФорма.ОткрытьМодально();"'
7908  25    RBRACE               '}'
7909  0     RBRACE               '}'
7909  1     T__0                 ','
7910  0     LBRACE               '{'
7910  1     T__1                 '0'
7910  2     T__0                 ','
7911  0     LBRACE               '{'
7911  1     STRING               '"Вывести структуру метаданных спомощью запроса"'
7911  48    T__0                 ','
7911  49    T__1                 '0'
7911  50    T__0                 ','
7911  51    T__1                 '0'
7911  52    T__0                 ','
7911  53    STRING               '""'
7911  55    T__0                 ','
7911  56    STRING               '"Процедура ВывестиСтруктуруМетаданных()\r\n    Запрос = Новый Запрос;\r\n    Запрос.Текст = ""\r\n    |    ВЫБРАТЬ\r\n    |        КлассыМетаданных.Имя,\r\n    |        КлассыМетаданных.Наименование,\r\n    |        КлассыМетаданных.Родитель,\r\n    |        КлассыМетаданных.Вид\r\n    |    ИЗ\r\n    |        ИнформационнаяБаза.Метаданные.КлассыМетаданных КАК КлассыМетаданных\r\n    |    ГДЕ\r\n    |        НЕ КлассыМетаданных.ПометкаУдаления\r\n    |    УПОРЯДОЧИТЬ ПО\r\n    |        КлассыМетаданных.Имя"";\r\n    \r\n    Результат = Запрос.Выполнить();\r\n    \r\n    Если Результат.Пустой() Тогда\r\n        Сообщить(""Структура метаданных пуста"");\r\n    Иначе\r\n        Пока Результат.Следующий() Цикл\r\n            Сообщить(Результат.Имя + "", "" + Результат.Наименование + "", "" + Результат.Родитель + "", "" + Результат.Вид);\r\n        КонецЦикла;\r\n    КонецЕсли;\r\nКонецПроцедуры"'
7935  15    RBRACE               '}'
7936  0     RBRACE               '}'
7936  1     T__0                 ','
7937  0     LBRACE               '{'
7937  1     T__1                 '0'
7937  2     T__0                 ','
7938  0     LBRACE               '{'
7938  1     STRING               '"Вывести структуру метаданных спомощью запроса(2)"'
7938  51    T__0                 ','
7938  52    T__1                 '0'
7938  53    T__0                 ','
7938  54    T__1                 '0'
7938  55    T__0                 ','
7938  56    STRING               '""'
7938  58    T__0                 ','
7938  59    STRING               '"//В данном примере мы создаем запрос, который выбирает все объекты метаданных типа ""Объект"". \r\n//Затем мы проходим по результатам запроса и выводим информацию о каждом объекте. \r\n//Для каждого объекта мы также вызываем функцию `ПолучитьСтруктуруРеквизитов`, \r\n//которая возвращает структуру реквизитов объекта. Затем мы выводим информацию о каждом реквизите.\r\n\r\nПроцедура ВывестиСтруктуруМетаданных()\r\n    Запрос = Новый Запрос;\r\n    Запрос.Текст = ""\r\n       | ВЫБРАТЬ\r\n       |     Метаданные.Ссылка КАК Ссылка,\r\n       |     Метаданные.Имя КАК Имя,\r\n       |     Метаданные.Тип.Имя КАК Тип\r\n       | ИЗ\r\n       |     Метаданные.Объекты КАК Метаданные\r\n       | ГДЕ\r\n       |     Метаданные.Тип.Имя = 'Объект'"";\r\n    Результат = Запрос.Выполнить();\r\n    \r\n    Если Результат.Пустой() Тогда\r\n        Сообщить(""Не найдены метаданные объектов"");\r\n    Иначе\r\n        Пока Результат.Следующий() Цикл\r\n            Ссылка = Результат.Ссылка;\r\n            Имя = Результат.Имя;\r\n            Тип = Результат.Тип;\r\n            \r\n            Сообщить(""Объект: "" + Имя + "", Тип: "" + Тип);\r\n            \r\n            // Получение структуры реквизитов объекта\r\n            СтруктураРеквизитов = ПолучитьСтруктуруРеквизитов(Ссылка);\r\n            \r\n            // Вывод структуры реквизитов\r\n            Для Каждого Реквизит Из СтруктураРеквизитов Цикл\r\n                Сообщить(""Реквизит: "" + Реквизит.Имя + "", Тип: "" + Реквизит.Тип);\r\n            КонецЦикла;\r\n        КонецЕсли;\r\n    КонецПроцедуры\r\n\r\nФункция ПолучитьСтруктуруРеквизитов(Ссылка) Экспорт\r\n    СтруктураРеквизитов = Новый Структура;\r\n    Метаданные = Метаданные.НайтиПоСсылке(Ссылка);\r\n    \r\n    Если Метаданные <> Неопределено Тогда\r\n        Для Каждого Реквизит Из Метаданные.Реквизиты Цикл\r\n            СтруктураРеквизитов.Вставить(Реквизит.Имя, Реквизит.Тип.Имя);\r\n        КонецЦикла;\r\n    КонецЕсли;\r\n    \r\n    Возврат СтруктураРеквизитов;\r\nКонецФункции"'
7987  13    RBRACE               '}'
7988  0     RBRACE               '}'
7988  1     T__0                 ','
7989  0     LBRACE               '{'
7989  1     T__1                 '0'
7989  2     T__0                 ','
7990  0     LBRACE               '{'
7990  1     STRING               '"Очищение Реквезитов и Табличных частей объектов"'
7990  50    T__0                 ','
7990  51    T__1                 '0'
7990  52    T__0                 ','
7990  53    T__1                 '0'
7990  54    T__0                 ','
7990  55    STRING               '""'
7990  57    T__0                 ','
7990  58    STRING               '"Для Каждого Реквизит Из Контрагент. Метаданные().Реквизиты Цикл\r\n    Контрагент[ Реквизит. Имя] = Неопределено ;\r\nКонецЦикла ;\r\nДля Каждого ТаблЧасть Из Контрагент. Метаданные().ТабличныеЧасти Цикл\r\n    Контрагент[ТаблЧасть.Имя].Очистить();\r\nКонецЦикла ;\r\n\r\nКонтрагент.Записать() ;"'
7997  24    RBRACE               '}'
7998  0     RBRACE               '}'
7999  0     RBRACE               '}'
7999  1     T__0                 ','
8000  0     LBRACE               '{'
8000  1     T__2                 '1'
8000  2     T__0                 ','
8001  0     LBRACE               '{'
8001  1     STRING               '"Метаданные объекта"'
8001  21    T__0                 ','
8001  22    T__2                 '1'
8001  23    T__0                 ','
8001  24    T__1                 '0'
8001  25    T__0                 ','
8001  26    STRING               '""'
8001  28    T__0                 ','
8001  29    STRING               '""'
8001  31    RBRACE               '}'
8001  32    T__0                 ','
8002  0     LBRACE               '{'
8002  1     T__1                 '0'
8002  2     T__0                 ','
8003  0     LBRACE               '{'
8003  1     STRING               '"проверка на наличие реквизитов с типом «Справочник.Организация» в документе и обнуление значения этих реквизитов"'
8003  115   T__0                 ','
8003  116   T__1                 '0'
8003  117   T__0                 ','
8003  118   T__1                 '0'
8003  119   T__0                 ','
8003  120   STRING               '""'
8003  122   T__0                 ','
8003  123   STRING               '"//ДокументОбъект - документ, полученный на изменение или \r\nсоздание\r\n//аналогичным образом можно работать со ссылками, например: \r\nДокументСсылка = \r\nДокумент.ИмяДокумента.ПустаяСсылка().Метаданные()\r\nДокументОбъект = Документы.ПоступлениеТоваров.СоздатьДокумент();\r\n//цикл по реквизитам\r\nДля каждого Реквизит из ДокументОбъект.Метаданные().Реквизиты Цикл\r\n    //у каждого реквизита может быть как один, так и несколько типов, подробнее см. ""ОписаниеТипов""\r\n    мТипов = Реквизит.Тип.Типы();\r\n   //проверяем по каждому типу - тот ли это нужный нам?\r\n   Для каждого Тип из мТипов Цикл\r\n      Если Тип = Тип(""СправочникСсылка.Организации"") Тогда\r\n         //обнуляем реквизит с этим именем в документе\r\n         //для ""обнуления"" можно приравнивать его к Неопределено, \r\n         //по факту значение будет установлено не Неопределено, а ""пустое значение"" типа реквизита \r\n         //Неопределено только если у реквизита несколько типов\r\n         ДокументОбъект[Реквизит.Имя] = Неопределено;\r\n      КонецЕсли;\r\n   КонецЦикла;\r\nКонецЦикла;\r\n//цикл по табличным частям\r\nДля каждого ТабЧасть из ДокументОбъект.Метаданные().ТабличныеЧасти Цикл\r\n     //в табличной части тоже реквизиты (колонки таб.части)\r\n     Для каждого Реквизит из ТабЧасть.Реквизиты Цикл\r\n        //здесь аналогично\r\n        мТипов = Реквизит.Тип.Типы();\r\n        Для каждого Тип из мТипов Цикл\r\n           Если Тип = Тип(""СправочникСсылка.Организации"") Тогда\r\n               //так как это таб.часть, то мы должны пройтись по всем строкам этой тач. части\r\n               Для каждого Строка из ДокументОбъект[ТабЧасть.Имя] Цикл\r\n                   Строка[Реквизит.Имя] = Неопределено;\r\n               КонецЦикла;\r\n           КонецЕсли;\r\n        КонецЦикла;\r\n     КонецЦикла;\r\nКонецЦикла"'
8039  11    RBRACE               '}'
8040  0     RBRACE               '}'
8041  0     RBRACE               '}'
8042  0     RBRACE               '}'
8042  1     T__0                 ','
8043  0     LBRACE               '{'
8043  1     INT                  '6'
8043  2     T__0                 ','
8044  0     LBRACE               '{'
8044  1     STRING               '"Запросы"'
8044  10    T__0                 ','
8044  11    T__2                 '1'
8044  12    T__0                 ','
8044  13    T__1                 '0'
8044  14    T__0                 ','
8044  15    STRING               '""'
8044  17    T__0                 ','
8044  18    STRING               '""'
8044  20    RBRACE               '}'
8044  21    T__0                 ','
8045  0     LBRACE               '{'
8045  1     T__1                 '0'
8045  2     T__0                 ','
8046  0     LBRACE               '{'
8046  1     STRING               '"Преобразование выборки запроса в структуру"'
8046  45    T__0                 ','
8046  46    T__1                 '0'
8046  47    T__0                 ','
8046  48    T__1                 '0'
8046  49    T__0                 ','
8046  50    STRING               '""'
8046  52    T__0                 ','
8046  53    STRING               '""'
8046  55    RBRACE               '}'
8047  0     RBRACE               '}'
8047  1     T__0                 ','
8048  0     LBRACE               '{'
8048  1     T__1                 '0'
8048  2     T__0                 ','
8049  0     LBRACE               '{'
8049  1     STRING               '"Ст_ЗапросыКонкатенация"'
8049  25    T__0                 ','
8049  26    T__1                 '0'
8049  27    T__0                 ','
8049  28    T__1                 '0'
8049  29    T__0                 ','
8049  30    STRING               '""'
8049  32    T__0                 ','
8049  33    STRING               '" Разделитель =\r\n""\r\n|;\r\n|/////////////////////////////////////////////////////////////\r\n|"";\r\n\r\nТекстыЗапросовПакета = Новый Массив;\r\n\r\nТекстЗапроса =\r\n""ВЫБРАТЬ\r\n| Упаковки.Ссылка КАК Ссылка\r\n|ИЗ\r\n| Справочник.Упаковки КАК Упаковки"";\r\n\r\nТекстыЗапросовПакета.Добавить(ТекстЗапроса);\r\n\r\nТекстЗапроса =\r\n""ВЫБРАТЬ\r\n| Номенклатура.Ссылка КАК Ссылка\r\n|ИЗ\r\n| Справочник.Номенклатура КАК Номенклатура"";\r\n\r\nТекстыЗапросовПакета.Добавить(ТекстЗапроса);\r\nТекстЗапроса = СтрСоединить(ТекстыЗапросовПакета, Разделитель);"'
8072  64    RBRACE               '}'
8073  0     RBRACE               '}'
8073  1     T__0                 ','
8074  0     LBRACE               '{'
8074  1     T__1                 '0'
8074  2     T__0                 ','
8075  0     LBRACE               '{'
8075  1     STRING               '"Ст_ЗапросыРазыменнованныеПолей"'
8075  33    T__0                 ','
8075  34    T__1                 '0'
8075  35    T__0                 ','
8075  36    T__1                 '0'
8075  37    T__0                 ','
8075  38    STRING               '""'
8075  40    T__0                 ','
8075  41    STRING               '" Запрос.Текст = ""ВЫБРАТЬ РАЗРЕШЕННЫЕ\r\n|	ВЫБОР\r\n|		КОГДА Продажи.Регистратор ССЫЛКА Документ.РеализацияТоваровУслуг\r\n|			ТОГДА ВЫРАЗИТЬ(Продажи.Регистратор КАК Документ.РеализацияТоваровУслуг).Номер\r\n|		КОГДА Продажи.Регистратор ССЫЛКА Документ.ЗаказКлиента\r\n|			ТОГДА ВЫРАЗИТЬ(Продажи.Регистратор КАК Документ.ЗаказКлиента).Номер\r\n|	КОНЕЦ КАК Номер,\r\n|	ВЫБОР\r\n|		КОГДА Продажи.Регистратор ССЫЛКА Документ.РеализацияТоваровУслуг\r\n|			ТОГДА ВЫРАЗИТЬ(Продажи.Регистратор КАК Документ.РеализацияТоваровУслуг).Дата\r\n|		КОГДА Продажи.Регистратор ССЫЛКА Документ.ЗаказКлиента\r\n|			ТОГДА ВЫРАЗИТЬ(Продажи.Регистратор КАК Документ.ЗаказКлиента).Дата\r\n|	КОНЕЦ КАК Дата,\r\n|	Продажи.ВРезерве КАК ВРезерве,\r\n|	Продажи.КОтгрузке КАК КОтгрузке\r\n|ИЗ\r\n|	РегистрНакопления.ТоварыКОтгрузке КАК Продажи\r\n|ГДЕ\r\n|	(Продажи.Регистратор ССЫЛКА Документ.РеализацияТоваровУслуг\r\n|			ИЛИ Продажи.Регистратор ССЫЛКА Документ.ЗаказКлиента)"";"'
8094  61    RBRACE               '}'
8095  0     RBRACE               '}'
8095  1     T__0                 ','
8096  0     LBRACE               '{'
8096  1     T__1                 '0'
8096  2     T__0                 ','
8097  0     LBRACE               '{'
8097  1     STRING               '"Условия сравнения и проверки в Запросах. Отбор не заполненного значения"'
8097  74    T__0                 ','
8097  75    T__1                 '0'
8097  76    T__0                 ','
8097  77    T__1                 '0'
8097  78    T__0                 ','
8097  79    STRING               '""'
8097  81    T__0                 ','
8097  82    STRING               '"Запрос.Текст =\r\n    ""ВЫБРАТЬ \r\n    |    усЕдиницыХранения.Ссылка\r\n    |ИЗ\r\n    |    Справочник.усЕдиницыХранения КАК усЕдиницыХранения""\r\n\r\n    // Пример 1. сравнение с не заполненным булевым значением:\r\n    |ГДЕ\r\n    |     усЕдиницыХранения.РазрешитьОтборИзРезервнойЗоны = Ложь\r\n\r\n    // Пример 2. но если это булево определено, то лучше так: // условие на отрицательное булево:\r\n    |ГДЕ\r\n    |     НЕ усЕдиницыХранения.РазрешитьОтборИзРезервнойЗоны\r\n\r\n    // Пример 3. выборка по условию не заполненного поля, имеющего тип ""справочник конкретного типа""\r\n    |ГДЕ\r\n    |    усЕдиницыХранения.АктивнаяОбластьОтбора = ЗНАЧЕНИЕ(Справочник.усОбластиОтбора.ПустаяСсылка)\r\n\r\n    // Пример 3а. выборка по условию не заполненного поля, имеющего тип ""документ конкретного типа""\r\n    |ГДЕ\r\n    |    НашРегистрСведений.Документ = ЗНАЧЕНИЕ(Документ.НашДокумент.ПустаяСсылка)\r\n\r\n    // Пример 3б. выборка по условию не заполненного поля, имеющего тип ""документы разных типов"" (составное поле)\r\n    |ГДЕ\r\n    |    (НашРегистрСведений.Документ = ЗНАЧЕНИЕ(Документ.НашДокумент1.ПустаяСсылка)\r\n    |    ИЛИ НашРегистрСведений.Документ = ЗНАЧЕНИЕ(Документ.НашДокумент2.ПустаяСсылка)\r\n    |    ИЛИ ...(и т.д. - последовательно перечисляем условия для всех возможных типов этого составного поля))\r\n\r\n    // Пример 4. или наоборот, если нужно выбрать заполненное значение типа ""строка"", то поможет условие:\r\n    |ГДЕ\r\n    |    усЕдиницыХранения.Наименование > """"""""\r\n\r\n    // Пример 5. если нужно выбрать документы конкретного типа, при составном типе данных, например в регистре ""ВыполняемыеЗадания"" ресурс ""Задание"" имеет составной тип, среди значений которого возможен документ ""Отбор""\r\n    |ГДЕ\r\n    |    ВЫРАЗИТЬ(РегистрСведенийВыполняемыеЗадания.Задание КАК Документ.Отбор) ССЫЛКА Документ.Отбор\r\n\r\n    // Пример 5а. Еще аналогичный пример, когда нужно выбрать документы конкретного типа\r\n    |	ВЫБОР\r\n    |		КОГДА ВЫРАЗИТЬ(агСоответствиеДокументов.ДокументБУ КАК Документ.ПоступлениеТоваровУслуг) ССЫЛКА Документ.ПоступлениеТоваровУслуг\r\n    |			ТОГДА """"ПоступлениеТоваровУслуг""""\r\n    |		КОГДА ВЫРАЗИТЬ(агСоответствиеДокументов.ДокументБУ КАК Документ.РеализацияТоваровУслуг) ССЫЛКА Документ.РеализацияТоваровУслуг\r\n    |			ТОГДА """"РеализацияТоваровУслуг""""\r\n    |		ИНАЧЕ """"""""\r\n    |	КОНЕЦ КАК ВидДокумента\r\n\r\n    // Пример 6. выбор по условию не определенного значения:\r\n    |ГДЕ\r\n    |    СохраненныеНастройки.Пользователь = НЕОПРЕДЕЛЕНО\r\n\r\n    // Пример 7. выбор по виду движения ""Приход"" регистра накопления, ""Расход"" - аналогично):\r\n    |ГДЕ\r\n    |    РегТоварыВРознице.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход)\r\n\r\n    // Пример 8. Как в запросе указать, что выполнять запрос не нужно (например, нужно программно в зависимости от какого-то\r\n    // условия вернуть пустой результат запроса - \r\n    // Запрос.Текст = СтрЗаменить(Запрос.Текст, ""ГДЕ Док.Ссылка = &ДокументСсылка"", ""ГДЕ ЛОЖЬ"");).\r\n    // Для этого достаточно добавить условие ""Где Ложь"".\r\n    // Кстати, независимо от объема запрашиваемых в выборке данных, такой запрос будет выполнен мгновенно.\r\n    |ГДЕ ЛОЖЬ\r\n\r\n    // Пример 9. Проверка на то, что результат выполнения запроса содержит данные:\r\n    Если НЕ Запрос.Выполнить().Пустой() Тогда\r\n\r\n    // Пример 10. выбор по условию не заполненной даты:\r\n    |ГДЕ\r\n    |    тбСтроки.ДатаОтмены = ДАТАВРЕМЯ(1, 1, 1)   "'
8162  53    RBRACE               '}'
8163  0     RBRACE               '}'
8163  1     T__0                 ','
8164  0     LBRACE               '{'
8164  1     T__1                 '0'
8164  2     T__0                 ','
8165  0     LBRACE               '{'
8165  1     STRING               '"Сравнение двух таблиц в запросе"'
8165  34    T__0                 ','
8165  35    T__1                 '0'
8165  36    T__0                 ','
8165  37    T__1                 '0'
8165  38    T__0                 ','
8165  39    STRING               '""'
8165  41    T__0                 ','
8165  42    STRING               '"""ВЫБРАТЬ\r\n|	Т1.Номенклатура КАК Номенклатура,\r\n|	Т1.Характеристика КАК Характеристика,\r\n|	Т1.Количество КАК Количество\r\n|ИЗ\r\n|	Таблица1 КАК Т1\r\n|		ЛЕВОЕ СОЕДИНЕНИЕ Таблица2 КАК Т2\r\n|		ПО Т1.Номенклатура = Т2.Номенклатура\r\n|			И Т1.Характеристика = Т2.Характеристика\r\n|ГДЕ\r\n|	Т2.Количество ЕСТЬ NULL\r\n|\r\n|ОБЪЕДИНИТЬ ВСЕ\r\n|\r\n|ВЫБРАТЬ\r\n|	Т2.Номенклатура,\r\n|	Т2.Характеристика,\r\n|	Т2.Количество\r\n|ИЗ\r\n|	Таблица2 КАК Т2\r\n|		ЛЕВОЕ СОЕДИНЕНИЕ Таблица1 КАК Т1\r\n|		ПО Т2.Номенклатура = Т1.Номенклатура\r\n|			И Т2.Характеристика = Т1.Характеристика\r\n|ГДЕ\r\n|	Т1.Количество ЕСТЬ NULL\r\n|\r\n|ОБЪЕДИНИТЬ ВСЕ\r\n|\r\n|ВЫБРАТЬ\r\n|	Т1.Номенклатура,\r\n|	Т1.Характеристика,\r\n|	Т1.Количество - Т2.Количество\r\n|ИЗ\r\n|	Таблица1 КАК Т1\r\n|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Таблица2 КАК Т2\r\n|		ПО Т1.Номенклатура = Т2.Номенклатура\r\n|			И Т1.Характеристика = Т2.Характеристика"""'
8201  46    RBRACE               '}'
8202  0     RBRACE               '}'
8202  1     T__0                 ','
8203  0     LBRACE               '{'
8203  1     INT                  '4'
8203  2     T__0                 ','
8204  0     LBRACE               '{'
8204  1     STRING               '"синтаксис оператора проверки совпадений"'
8204  42    T__0                 ','
8204  43    T__2                 '1'
8204  44    T__0                 ','
8204  45    T__1                 '0'
8204  46    T__0                 ','
8204  47    STRING               '""'
8204  49    T__0                 ','
8204  50    STRING               '""'
8204  52    RBRACE               '}'
8204  53    T__0                 ','
8205  0     LBRACE               '{'
8205  1     T__1                 '0'
8205  2     T__0                 ','
8206  0     LBRACE               '{'
8206  1     STRING               '"Форма оператора В для проверки совпадения с одним из перечисленных <Выражение> [НЕ] В  ( <Список значений> | <Массив значений> ) "'
8206  132   T__0                 ','
8206  133   T__1                 '0'
8206  134   T__0                 ','
8206  135   T__1                 '0'
8206  136   T__0                 ','
8206  137   STRING               '""'
8206  139   T__0                 ','
8206  140   STRING               '"  ""Выбрать\r\n  | 	Справочник.Номенклатура.Наименование\r\n  |	Где\r\n  | 	Справочник.Номенклатура.Родитель.Наименование\r\n  | 		В (""""Бытовая техника"""",""""Оргтехника"""")""\r\n  \r\n"'
8212  1     RBRACE               '}'
8213  0     RBRACE               '}'
8213  1     T__0                 ','
8214  0     LBRACE               '{'
8214  1     T__1                 '0'
8214  2     T__0                 ','
8215  0     LBRACE               '{'
8215  1     STRING               '"Форма оператора В для проверки принадлежности по иерархии <Выражение> [НЕ] В ИЕРАРХИИ  ( <Выражение> | <Список значений> | <Массив значений> )"'
8215  145   T__0                 ','
8215  146   T__1                 '0'
8215  147   T__0                 ','
8215  148   T__1                 '0'
8215  149   T__0                 ','
8215  150   STRING               '""'
8215  152   T__0                 ','
8215  153   STRING               '"// В качестве параметра Группа в запрос передается ссылка\r\n// на какую-либо группу справочника Номенклатура.\r\n""Выбрать\r\n|   Справочник.Номенклатура.Наименование\r\n|Где\r\n|   Справочник.Номенклатура.Ссылка В ИЕРАРХИИ (&Группа)""  \r\n\r\n//еще пример\r\n\r\n""Выбрать\r\n|   Справочник.Номенклатура.Наименование\r\n|Где\r\n|   Справочник.Номенклатура.Ссылка В ИЕРАРХИИ\r\n|   (\r\n|      ВЫБРАТЬ\r\n|         Справочник.Номенклатура.Ссылка\r\n|      ГДЕ\r\n|         Справочник.Номенклатура.Наименование = """"Одежда"""")""\r\n"'
8233  1     RBRACE               '}'
8234  0     RBRACE               '}'
8234  1     T__0                 ','
8235  0     LBRACE               '{'
8235  1     T__1                 '0'
8235  2     T__0                 ','
8236  0     LBRACE               '{'
8236  1     STRING               '"Форма оператора В для проверки совпадения значения с одним из результата запроса <Выражение> [НЕ] В [ИЕРАРХИИ] ( <Описание запроса> )"'
8236  136   T__0                 ','
8236  137   T__1                 '0'
8236  138   T__0                 ','
8236  139   T__1                 '0'
8236  140   T__0                 ','
8236  141   STRING               '""'
8236  143   T__0                 ','
8236  144   STRING               '"// Выбрать названия товаров, которые присутствовали в расходных накладных\r\n""ВЫБРАТЬ\r\n|   Товары.Наименование\r\n|ИЗ\r\n|   Справочник.Товары КАК Товары\r\n|ГДЕ\r\n|   Товары.Ссылка В\r\n|     (\r\n|      ВЫБРАТЬ\r\n|         РасхНаклСостав.Товар\r\n|      ИЗ\r\n|         Документ.РасхНакл.Состав КАК РасхНаклСостав\r\n|     )""  \r\n\r\n// еще пример\r\n\r\n// Выбрать названия товаров, которые присутствовали в расходных накладных\r\n""ВЫБРАТЬ\r\n|   Товары.Наименование\r\n|ИЗ\r\n|   Справочник.Товары КАК Товары\r\n|ГДЕ\r\n|   Товары.Ссылка НЕ В\r\n|     (\r\n|      ВЫБРАТЬ\r\n|         РасхНаклСостав.Товар\r\n|      ИЗ\r\n|         Документ.РасхНакл.Состав КАК РасхНаклСостав\r\n|     )""\r\n\r\n// еще пример \r\n// Выбрать названия товаров, которые присутствовали в расходных накладных\r\n""ВЫБРАТЬ\r\n|   Товары.Наименование\r\n|ИЗ\r\n|   Справочник.Товары КАК Товары\r\n|ГДЕ\r\n|   Товары.Ссылка В\r\n|     (\r\n|      ВЫБРАТЬ\r\n|         РасхНаклСостав.Товар\r\n|      ИЗ\r\n|         Документ.РасхНакл.Состав КАК РасхНаклСостав\r\n|      ГДЕ\r\n|         РасхНаклСостав.Товар = Товары.Ссылка\r\n|     )"""'
8281  10    RBRACE               '}'
8282  0     RBRACE               '}'
8282  1     T__0                 ','
8283  0     LBRACE               '{'
8283  1     T__1                 '0'
8283  2     T__0                 ','
8284  0     LBRACE               '{'
8284  1     STRING               '"(<Выражение>[, <Выражение> [, …]]) [НЕ] В  ( <Описание запроса> )"'
8284  68    T__0                 ','
8284  69    T__1                 '0'
8284  70    T__0                 ','
8284  71    T__1                 '0'
8284  72    T__0                 ','
8284  73    STRING               '""'
8284  75    T__0                 ','
8284  76    STRING               '"//Поиск дублей элементов справочника по набору полей\r\n""ВЫБРАТЬ\r\n|    Номенклатура.Ссылка\r\n|ИЗ\r\n|    Справочник.Номенклатура КАК Номенклатура\r\n|    ГДЕ (Ссылка.Код,Ссылка.Наименование,1) НЕ В (ВЫБРАТЬ\r\n|                                                      Номенклатура.Код,\r\n|                                                      Номенклатура.Наименование,\r\n|                                                      СУММА(1) КАК Флаг\r\n|                                                  ИЗ\r\n|                                                    Справочник.Номенклатура КАК Номенклатура\r\n|                                                \r\n|                                                  СГРУППИРОВАТЬ ПО\r\n|                                                    Номенклатура.Наименование,\r\n|                                                    Номенклатура.Код)"""'
8298  73    RBRACE               '}'
8299  0     RBRACE               '}'
8300  0     RBRACE               '}'
8301  0     RBRACE               '}'
8301  1     T__0                 ','
8302  0     LBRACE               '{'
8302  1     T__2                 '1'
8302  2     T__0                 ','
8303  0     LBRACE               '{'
8303  1     STRING               '"Транзакции"'
8303  13    T__0                 ','
8303  14    T__2                 '1'
8303  15    T__0                 ','
8303  16    T__1                 '0'
8303  17    T__0                 ','
8303  18    STRING               '""'
8303  20    T__0                 ','
8303  21    STRING               '""'
8303  23    RBRACE               '}'
8303  24    T__0                 ','
8304  0     LBRACE               '{'
8304  1     T__1                 '0'
8304  2     T__0                 ','
8305  0     LBRACE               '{'
8305  1     STRING               '"Ст_ТранзакцияЯвная"'
8305  21    T__0                 ','
8305  22    T__1                 '0'
8305  23    T__0                 ','
8305  24    T__1                 '0'
8305  25    T__0                 ','
8305  26    STRING               '""'
8305  28    T__0                 ','
8305  29    STRING               '"НачатьТранзакцию();\r\nПопытка\r\n    БлокировкаДанных = Новый БлокировкаДанных;\r\n    ЭлементБлокировкиДанных = БлокировкаДанных.Добавить(""Документ.ПриходнаяНакладная"");\r\n    ЭлементБлокировкиДанных.УстановитьЗначение(""Ссылка"", СсылкаДляОбработки);\r\n    ЭлементБлокировкиДанных.Режим = РежимБлокировкиДанных.Исключительный;\r\n    БлокировкаДанных.Заблокировать();\r\n\r\n    // ... // чтение или запись данных\r\n\r\n    ДокументОбъект.Записать();\r\n\r\n    ЗафиксироватьТранзакцию(); // Пишем всегда перед словом Исключение\r\nИсключение\r\n    ОтменитьТранзакцию(); // Пишем сразу после слова Исключение\r\n    ПодробноеПредставлениеОбОшибке = ОбработкаОшибок.ПодробноеПредставлениеОшибки(ИнформацияОбОшибке());\r\n    ЗаписьЖурналаРегистрации(НСтр(""ru = 'Выполнение операции'""), // записывать в ЖР с ВызватьИсключение не нужно\r\n        УровеньЖурналаРегистрации.Ошибка,                        // без ВызватьИсключение пишем в ЖР\r\n        ,\r\n        ,\r\n        СтрШаблон(НСтр("" ru = '%1'""), ПодробноеПредставлениеОбОшибке));\r\n\r\n    ВызватьИсключение; // есть внешняя транзакция\r\n\r\nКонецПопытки;"'
8329  14    RBRACE               '}'
8330  0     RBRACE               '}'
8331  0     RBRACE               '}'
8331  1     T__0                 ','
8332  0     LBRACE               '{'
8332  1     T__2                 '1'
8332  2     T__0                 ','
8333  0     LBRACE               '{'
8333  1     STRING               '"Безопасность"'
8333  15    T__0                 ','
8333  16    T__2                 '1'
8333  17    T__0                 ','
8333  18    T__1                 '0'
8333  19    T__0                 ','
8333  20    STRING               '""'
8333  22    T__0                 ','
8333  23    STRING               '""'
8333  25    RBRACE               '}'
8333  26    T__0                 ','
8334  0     LBRACE               '{'
8334  1     T__1                 '0'
8334  2     T__0                 ','
8335  0     LBRACE               '{'
8335  1     STRING               '"Ст_БезовасностьПОВызовЧерезОткрытыеИнтерфейсы"'
8335  48    T__0                 ','
8335  49    T__1                 '0'
8335  50    T__0                 ','
8335  51    T__1                 '0'
8335  52    T__0                 ','
8335  53    STRING               '""'
8335  55    T__0                 ','
8335  56    STRING               '"   // В частности, перед программным открытием документов Microsoft Word и Microsoft Excel \r\n// через COM следует запрещать исполнение макросов. \r\n// Иначе это может привести к выполнению вредоносных макросов (вирусов),\r\n// если таковые присутствуют в документе.\r\n// НЕПРАВИЛЬНО открывать документ Microsoft Word по умолчанию:\r\nОбъектWord = Новый COMОбъект(""Word.Application"");\r\nДокумент = ОбъектWord.Documents.Open(ИмяФайла);\r\n// ПРАВИЛЬНО открывать документ Microsoft Word с отключением макросов:\r\nОбъектWord = Новый COMОбъект(""Word.Application"");\r\nОбъектWord.WordBasic.DisableAutoMacros(1);\r\nДокумент = ОбъектWord.Documents.Open(ИмяФайла);\r\n// ПРАВИЛЬНО открывать документ Microsoft Excel с отключением макросов:\r\nОбъектExcel = Новый COMОбъект(""Excel.Application"");\r\nОбъектExcel.AutomationSecurity = 3; // msoAutomationSecurityForceDisable = 3\r\nДокумент = ОбъектExcel.Workbooks.Open(ИмяФайла);\r\n// Проверку наличия подписи макросов в документах Microsoft Word можно реализовать так:\r\nОбъектWord = Новый COMОбъект(""Word.Application"");\r\nОбъектWord.WordBasic.DisableAutoMacros(1); // Отключить автозапуск\r\nДокумент = ОбъектWord.Documents.Open(ФайлДокумента);\r\nЕсли Документ.VBASigned Тогда\r\n	ОбъектWord.WordBasic.DisableAutoMacros(0); // Включить автозапуск\r\n	Документ.RunAutoMacro(2); // wdAutoOpen = 2\r\nИначе\r\n	Документ.Close();\r\n	ВызватьИсключение НСтр("" ru = 'Документ не подписан. Открытие отменено.'"");\r\nКонецЕсли;\r\n// Проверку наличия подписи макросов в документах Microsoft Excel можно реализовать так:\r\nОбъектExcel = Новый COMОбъект(""Excel.Application"");\r\nИсходныйУровеньБезопасности = ОбъектExcel.AutomationSecurity;\r\nОбъектExcel.AutomationSecurity = 3; // msoAutomationSecurityForceDisable = 3\r\nДокумент = ОбъектExcel.Workbooks.Open(ФайлДокумента);\r\nОбъектExcel.AutomationSecurity = ИсходныйУровеньБезопасности;\r\nЕсли Документ.VBASigned Тогда\r\n	Документ.Close();\r\n	Документ = ОбъектExcel.Workbooks.Open(ФайлДокумента);\r\nИначе\r\n	Документ.Close();\r\n	ВызватьИсключение НСтр("" ru = 'Документ не подписан. Открытие отменено.'"");\r\nКонецЕсли;"'
8373  11    RBRACE               '}'
8374  0     RBRACE               '}'
8375  0     RBRACE               '}'
8375  1     T__0                 ','
8376  0     LBRACE               '{'
8376  1     T__2                 '1'
8376  2     T__0                 ','
8377  0     LBRACE               '{'
8377  1     STRING               '"Блокировки"'
8377  13    T__0                 ','
8377  14    T__2                 '1'
8377  15    T__0                 ','
8377  16    T__1                 '0'
8377  17    T__0                 ','
8377  18    STRING               '""'
8377  20    T__0                 ','
8377  21    STRING               '""'
8377  23    RBRACE               '}'
8377  24    T__0                 ','
8378  0     LBRACE               '{'
8378  1     T__1                 '0'
8378  2     T__0                 ','
8379  0     LBRACE               '{'
8379  1     STRING               '"Ст_БлокировкаОтветственноеЧтение"'
8379  35    T__0                 ','
8379  36    T__1                 '0'
8379  37    T__0                 ','
8379  38    T__1                 '0'
8379  39    T__0                 ','
8379  40    STRING               '""'
8379  42    T__0                 ','
8379  43    STRING               '"// Неправильно:\r\n// 1. Прочитать регистр сведений\r\nЗапрос = Новый Запрос(\r\n""ВЫБРАТЬ РАЗРЕШЕННЫЕ\r\n| ЗаметкиПоПредмету.КоличествоЗаметок КАК КоличествоЗаметок\r\n|ИЗ\r\n| РегистрСведений.ЗаметкиПоПредмету КАК ЗаметкиПоПредмету\r\n|ГДЕ\r\n| ЗаметкиПоПредмету.Предмет = &Предмет"");\r\nЗапрос.УстановитьПараметр(""Предмет"", ПредметЗаметок);\r\nВыборка = Запрос.Выполнить().Выбрать();\r\nКоличествоЗаметок = 0;\r\nЕсли Выборка.Следующий() Тогда\r\n	КоличествоЗаметок = Выборка.КоличествоЗаметок;\r\nКонецЕсли;\r\n// 2. Записать в регистр сведений\r\nНаборЗаписей = РегистрыСведений.ЗаметкиПоПредмету.СоздатьНаборЗаписей();\r\nНаборЗаписей.Отбор.Предмет.Установить(ПредметЗаметок);\r\nНоваяЗапись = НаборЗаписей.Добавить();\r\nНоваяЗапись.Предмет = ПредметЗаметок;\r\nНоваяЗапись.КоличествоЗаметок = КоличествоЗаметок + 1;\r\nНаборЗаписей.Записать();\r\n\r\n// Правильно:\r\n// 1. Начать транзакцию для пакета из двух операций чтения и записи регистра\r\nНачатьТранзакцию();\r\nПопытка\r\n	// 2. Установить исключительную блокировку на интересующий диапазон записей регистра,\r\n	// для того чтобы гарантировать, что в момент записи количество заметок не изменилось с момента чтения в каком-либо другом сеансе.\r\n	БлокировкаДанных = Новый БлокировкаДанных;\r\n	ЭлементБлокировкиДанных = БлокировкаДанных.Добавить(""РегистрСведений.ЗаметкиПоПредмету"");\r\n	ЭлементБлокировкиДанных.УстановитьЗначение(""Предмет"", ПредметЗаметок);\r\n	ЭлементБлокировкиДанных.Режим = РежимБлокировкиДанных.Исключительный;\r\n	БлокировкаДанных.Заблокировать();\r\n	// 3. Прочитать регистр сведений\r\n	Запрос = Новый Запрос(\r\n	""ВЫБРАТЬ РАЗРЕШЕННЫЕ\r\n	| ЗаметкиПоПредмету.КоличествоЗаметок КАК КоличествоЗаметок\r\n	|ИЗ\r\n	| РегистрСведений.ЗаметкиПоПредмету КАК ЗаметкиПоПредмету\r\n	|ГДЕ\r\n	| ЗаметкиПоПредмету.Предмет = &Предмет"");\r\n	Запрос.УстановитьПараметр(""Предмет"", ПредметЗаметок);\r\n	Выборка = Запрос.Выполнить().Выбрать();\r\n	КоличествоЗаметок = 0;\r\n	Если Выборка.Следующий() Тогда\r\n		КоличествоЗаметок = Выборка.КоличествоЗаметок;\r\n	КонецЕсли;\r\n	// 4. Записать в регистр сведений\r\n	НаборЗаписей = РегистрыСведений.ЗаметкиПоПредмету.СоздатьНаборЗаписей();\r\n	НаборЗаписей.Отбор.Предмет.Установить(ПредметЗаметок);\r\n	НоваяЗапись = НаборЗаписей.Добавить();\r\n	НоваяЗапись.Предмет = ПредметЗаметок;\r\n	НоваяЗапись.КоличествоЗаметок = КоличествоЗаметок + 1;\r\n	НаборЗаписей.Записать();\r\n	ЗафиксироватьТранзакцию(); // Пишем всегда перед словом Исключение\r\nИсключение\r\n	// 5. Если при установке блокировки возникла исключительная ситуация из-за того, что регистр уже заблокирован в другом сеансе (или по другим причинам),\r\n	// отменить транзакцию и записать сведения об ошибке в журнал регистрации.\r\n	ОтменитьТранзакцию(); // Пишем сразу после слова Исключение\r\n	ПодробноеПредставлениеОбОшибке = ОбработкаОшибок.ПодробноеПредставлениеОшибки(ИнформацияОбОшибке());\r\n        ЗаписьЖурналаРегистрации(НСтр("" ru = 'Заметки'"", ОбщегоНазначения.КодОсновногоЯзыка()),       // записывать в ЖР с ВызватьИсключение не нужно \r\n	    УровеньЖурналаРегистрации.Ошибка,,, СтрШаблон(НСтр("" ru = '%1'""), ПодробноеПредставлениеОбОшибке)); // без ВызватьИсключение пишем в ЖР\r\n	ВызватьИсключение; // есть внешняя транзакция\r\nКонецПопытки;"'
8443  14    RBRACE               '}'
8444  0     RBRACE               '}'
8445  0     RBRACE               '}'
8445  1     T__0                 ','
8446  0     LBRACE               '{'
8446  1     INT                  '5'
8446  2     T__0                 ','
8447  0     LBRACE               '{'
8447  1     STRING               '"JSON"'
8447  7     T__0                 ','
8447  8     T__2                 '1'
8447  9     T__0                 ','
8447  10    T__1                 '0'
8447  11    T__0                 ','
8447  12    STRING               '""'
8447  14    T__0                 ','
8447  15    STRING               '""'
8447  17    RBRACE               '}'
8447  18    T__0                 ','
8448  0     LBRACE               '{'
8448  1     T__1                 '0'
8448  2     T__0                 ','
8449  0     LBRACE               '{'
8449  1     STRING               '"Чтение JSON (Строка JSON >> Структура)"'
8449  41    T__0                 ','
8449  42    T__1                 '0'
8449  43    T__0                 ','
8449  44    T__1                 '0'
8449  45    T__0                 ','
8449  46    STRING               '""'
8449  48    T__0                 ','
8449  49    STRING               '"// Функция - Простое чтение JSON\r\n// Функция преобразует строку JSON  в структура 1С\r\n// Параметры:\r\n//  Данные	 - 	Строка - Строка в формате JS\r\n// \r\n// Возвращаемое значение:\r\n//  Структура - Результат преоборазования\r\n//\r\nФункция ПростоеЧтениеJSON(Данные)\r\n	\r\n	ЧтениеJSON = Новый ЧтениеJSON;\r\n	ЧтениеJSON.УстановитьСтроку(Данные);  		\r\n	Возврат ПрочитатьJSON(ЧтениеJSON);\r\n	\r\nКонецФункции"'
8463  13    RBRACE               '}'
8464  0     RBRACE               '}'
8464  1     T__0                 ','
8465  0     LBRACE               '{'
8465  1     T__1                 '0'
8465  2     T__0                 ','
8466  0     LBRACE               '{'
8466  1     STRING               '"Запись JSON (Структура >> Строка JSON)"'
8466  41    T__0                 ','
8466  42    T__1                 '0'
8466  43    T__0                 ','
8466  44    T__1                 '0'
8466  45    T__0                 ','
8466  46    STRING               '""'
8466  48    T__0                 ','
8466  49    STRING               '"Процедура ТестЗаписиJSON()\r\n\r\n	Данные = Новый Структура();\r\n	Данные.Вставить(""date"",ТекущаяДата());\r\n	Данные.Вставить(""base"",""RUB""); \r\n	Результат = ПростаяЗаписьJSON(Данные);	\r\n\r\nКонецПроцедуры\r\n\r\n\r\nФункция ПростаяЗаписьJSON(Данные)\r\n	\r\n	ЗаписьJSON = Новый ЗаписьJSON;			\r\n	ЗаписьJSON.УстановитьСтроку();\r\n	ЗаписатьJSON(ЗаписьJSON,Данные);			\r\n	Возврат ЗаписьJSON.Закрыть();  \r\n	\r\nКонецФункции\r\n\r\n//{\r\n//""date"": ""2021-02-13T13:46:17"",\r\n//""base"": ""RUB""\r\n//}"'
8488  4     RBRACE               '}'
8489  0     RBRACE               '}'
8489  1     T__0                 ','
8490  0     LBRACE               '{'
8490  1     T__1                 '0'
8490  2     T__0                 ','
8491  0     LBRACE               '{'
8491  1     STRING               '"Чтение JSON с преобразованием типов (Строка >> Структура JSON)"'
8491  65    T__0                 ','
8491  66    T__1                 '0'
8491  67    T__0                 ','
8491  68    T__1                 '0'
8491  69    T__0                 ','
8491  70    STRING               '""'
8491  72    T__0                 ','
8491  73    STRING               '"// https://www.cbr-xml-daily.ru/latest.js\r\n\r\nПроцедура ЗапроситьКурсыВалют()\r\n	\r\n	HTTPСоединение = Новый HTTPСоединение(""www.cbr-xml-daily.ru"");\r\n	HTTPЗапрос = Новый HTTPЗапрос(""latest.js""); \r\n	HTTPЗапрос.Заголовки.Вставить(""Content-type"", ""application/json"");	\r\n	\r\n	//GET Запрос\r\n	Запрос = HTTPСоединение.Получить(HTTPЗапрос);\r\n	Результат = ЧтениеJSON(Запрос.ПолучитьТелоКакСтроку());\r\n\r\nКонецПроцедуры\r\n\r\nФункция ЧтениеJSON(Данные)\r\n	\r\n	ЧтениеJSON = Новый ЧтениеJSON;\r\n    ЧтениеJSON.УстановитьСтроку(Данные);  		\r\n	Возврат ПрочитатьJSON(ЧтениеJSON,,,,""ФункцияВосстановленияJSON"", ЭтотОбъект);\r\n	\r\nКонецФункции\r\n\r\n\r\nФункция ФункцияВосстановленияJSON(Свойство, Значение, ДополнительныеПараметры) Экспорт\r\n	\r\n	Если СтрНайти(Свойство,""date"") > 0  Тогда // В название свойства есть Дата\r\n		Возврат ПрочитатьДатуJSON(Значение, ФорматДатыJSON.ISO);\r\n	ИначеЕсли Свойство = ""base"" Тогда\r\n		Возврат Справочники.Валюты.НайтиПоНаименованию(Значение);	\r\n	КонецЕсли;      \r\n	\r\nКонецФункции   \r\n\r\n\r\n//{\r\n//    ""date"": ""2021-02-13"",\r\n//    ""timestamp"": 1613174400,\r\n//    ""base"": ""RUB"",\r\n//    ""rates"": {\r\n//        ""AUD"": 0.017483,\r\n//        ....\r\n//        ""USD"": 0.013525,\r\n//        ""EUR"": 0.01116\r\n//    }\r\n//}"'
8535  4     RBRACE               '}'
8536  0     RBRACE               '}'
8536  1     T__0                 ','
8537  0     LBRACE               '{'
8537  1     T__1                 '0'
8537  2     T__0                 ','
8538  0     LBRACE               '{'
8538  1     STRING               '"Запись JSON с преобразованием типов (Структура >> Строка JSON)"'
8538  65    T__0                 ','
8538  66    T__1                 '0'
8538  67    T__0                 ','
8538  68    T__1                 '0'
8538  69    T__0                 ','
8538  70    STRING               '""'
8538  72    T__0                 ','
8538  73    STRING               '" Процедура ТестЗаписиJSON()\r\n\r\n	Данные = Новый Структура();\r\n	Данные.Вставить(""date"",ТекущаяДата());\r\n	Данные.Вставить(""base"",Константы.ВалютаРегламентированногоУчета.Получить()); \r\n	Результат = ЗаписьJSON(Данные);	\r\n\r\nКонецПроцедуры\r\n\r\nФункция ЗаписьJSON(Данные)\r\n	\r\n	ЗаписьJSON = Новый ЗаписьJSON;			\r\n	ЗаписьJSON.УстановитьСтроку();\r\n	НастройкиJSON = Новый НастройкиСериализацииJSON;\r\n	НастройкиJSON.ВариантЗаписиДаты = ВариантЗаписиДатыJSON.ЛокальнаяДата;\r\n	НастройкиJSON.ФорматСериализацииДаты = ФорматДатыJSON.ISO;\r\n	ЗаписатьJSON(ЗаписьJSON,Данные,НастройкиJSON,""ФункцияПреобразованияJSON"", ЭтотОбъект);			\r\n	Возврат ЗаписьJSON.Закрыть();  \r\n	\r\nКонецФункции\r\n\r\nФункция ФункцияПреобразованияJSON(Свойство, Значение, ДополнительныеПараметры, Отказ) Экспорт\r\n	\r\n	Если ТипЗнч(Значение) = Тип(""СправочникСсылка.Валюты"")  Тогда		\r\n		Возврат СокрЛП(Значение.Наименование);	\r\n	КонецЕсли; \r\n	\r\nКонецФункции"'
8565  13    RBRACE               '}'
8566  0     RBRACE               '}'
8566  1     T__0                 ','
8567  0     LBRACE               '{'
8567  1     T__1                 '0'
8567  2     T__0                 ','
8568  0     LBRACE               '{'
8568  1     STRING               '"Пример функции упаковки в JSON из регистра сведений ШтрихКод "'
8568  64    T__0                 ','
8568  65    T__1                 '0'
8568  66    T__0                 ','
8568  67    T__1                 '0'
8568  68    T__0                 ','
8568  69    STRING               '""'
8568  71    T__0                 ','
8568  72    STRING               '"Функция ПолучитьНоменклатуру()Экспорт\r\n	\r\n	Запрос = Новый Запрос;\r\n	Запрос.Текст = \r\n	""ВЫБРАТЬ\r\n	|	Штрихкоды.Штрихкод КАК barcode,\r\n	|	Штрихкоды.Номенклатура.Код КАК cod,\r\n	|	Штрихкоды.Номенклатура.Наименование КАК name,\r\n	|	Штрихкоды.Номенклатура.Артикул КАК articul\r\n	|ИЗ\r\n	|	РегистрСведений.Штрихкоды КАК Штрихкоды"";\r\n	\r\n	Результат = Запрос.Выполнить();\r\n	Выборка = Результат.Выбрать();\r\n	Массив = Новый Массив;\r\n	Пока Выборка.Следующий()Цикл\r\n		Структура = Новый Структура(""barcode, cod, name, articul"");\r\n		ЗаполнитьЗначенияСвойств(Структура, Выборка);\r\n		Массив.Добавить(Структура);\r\n	КонецЦикла;\r\n	\r\n	ЗаписьJSON = Новый ЗаписьJSON;\r\n	ЗаписьJSON.УстановитьСтроку();\r\n	ЗаписатьJSON(ЗаписьJSON, Массив);\r\n	\r\n	СтрокаJSON = ЗаписьJSON.Закрыть();\r\n	Возврат СтрокаJSON;\r\n	\r\n\r\nКонецФункции"'
8597  13    RBRACE               '}'
8598  0     RBRACE               '}'
8599  0     RBRACE               '}'
8599  1     T__0                 ','
8600  0     LBRACE               '{'
8600  1     INT                  '3'
8600  2     T__0                 ','
8601  0     LBRACE               '{'
8601  1     STRING               '"Встроенные Функции"'
8601  21    T__0                 ','
8601  22    T__2                 '1'
8601  23    T__0                 ','
8601  24    T__1                 '0'
8601  25    T__0                 ','
8601  26    STRING               '""'
8601  28    T__0                 ','
8601  29    STRING               '""'
8601  31    RBRACE               '}'
8601  32    T__0                 ','
8602  0     LBRACE               '{'
8602  1     T__1                 '0'
8602  2     T__0                 ','
8603  0     LBRACE               '{'
8603  1     STRING               '"Использование генератора случайных чисел - Random"'
8603  52    T__0                 ','
8603  53    T__1                 '0'
8603  54    T__0                 ','
8603  55    T__1                 '0'
8603  56    T__0                 ','
8603  57    STRING               '""'
8603  59    T__0                 ','
8603  60    STRING               '"НачальноеЧисло = 167;\r\nГСЧ = Новый ГенераторСлучайныхЧисел(НачальноеЧисло);\r\nСлучайноеЧисло = ГСЧ.СлучайноеЧисло(0, 1000);"'
8605  46    RBRACE               '}'
8606  0     RBRACE               '}'
8606  1     T__0                 ','
8607  0     LBRACE               '{'
8607  1     T__1                 '0'
8607  2     T__0                 ','
8608  0     LBRACE               '{'
8608  1     STRING               '"Функция Random"'
8608  17    T__0                 ','
8608  18    T__1                 '0'
8608  19    T__0                 ','
8608  20    T__1                 '0'
8608  21    T__0                 ','
8608  22    STRING               '""'
8608  24    T__0                 ','
8608  25    STRING               '"Функция Рандом() Экспорт\r\n   UID=Новый УникальныйИдентификатор();\r\n   UID = СтрЗаменить(UID,""-"","""");\r\n   Значение = """";\r\n   Для Н=1 По СтрДлина(UID) Цикл\r\n      Симв = Сред(UID,Н,1);\r\n      Значение = Значение+Прав(КодСимвола(Симв),1);\r\n   КонецЦикла;\r\n   Возврат Число(""0.""+Значение);\r\nКонецФункции   "'
8617  16    RBRACE               '}'
8618  0     RBRACE               '}'
8618  1     T__0                 ','
8619  0     LBRACE               '{'
8619  1     T__1                 '0'
8619  2     T__0                 ','
8620  0     LBRACE               '{'
8620  1     STRING               '"Функция Random2"'
8620  18    T__0                 ','
8620  19    T__1                 '0'
8620  20    T__0                 ','
8620  21    T__1                 '0'
8620  22    T__0                 ','
8620  23    STRING               '""'
8620  25    T__0                 ','
8620  26    STRING               '"Функция Ранд(Парам=0)\r\n    Если Парам<>0 Тогда\r\n        Случай=Парам;\r\n    КонецЕсли;\r\n    Если Число(Случай)=0 Тогда\r\n        Случай=Число(СтрЗаменить(""""+ТекущееВремя(),"":"",""""));\r\n        Случай=(16807*Случай)%2147483647;\r\n    КонецЕсли;\r\n    Случай=(16807*Случай)%2147483647;\r\n    Случай=макс(Случай,-Случай);\r\n    Возврат(Случай/2147483647);\r\nКонецФункции   "'
8631  16    RBRACE               '}'
8632  0     RBRACE               '}'
8633  0     RBRACE               '}'
8633  1     T__0                 ','
8634  0     LBRACE               '{'
8634  1     INT                  '2'
8634  2     T__0                 ','
8635  0     LBRACE               '{'
8635  1     STRING               '"Работа с операционной системой"'
8635  33    T__0                 ','
8635  34    T__2                 '1'
8635  35    T__0                 ','
8635  36    T__1                 '0'
8635  37    T__0                 ','
8635  38    STRING               '""'
8635  40    T__0                 ','
8635  41    STRING               '""'
8635  43    RBRACE               '}'
8635  44    T__0                 ','
8636  0     LBRACE               '{'
8636  1     T__1                 '0'
8636  2     T__0                 ','
8637  0     LBRACE               '{'
8637  1     STRING               '"Запустить внешнюю программу"'
8637  30    T__0                 ','
8637  31    T__1                 '0'
8637  32    T__0                 ','
8637  33    T__1                 '0'
8637  34    T__0                 ','
8637  35    STRING               '""'
8637  37    T__0                 ','
8637  38    STRING               '"//ЗапуститьПриложение(СтрокаКоманды, [ТекущийКаталог], [ДождатьсяЗавершения], [КодВозврата])\r\n\r\nЗапуститьПриложение(\r\n        ""calc.exe"",\r\n        """", // текущий каталог для запускаемого приложения\r\n        Ложь, // дожидаться завершения работы запущенного приложения\r\n        КодВозврата // сюда попадёт код, возвращаемый программой\r\n);"'
8644  3     RBRACE               '}'
8645  0     RBRACE               '}'
8645  1     T__0                 ','
8646  0     LBRACE               '{'
8646  1     T__1                 '0'
8646  2     T__0                 ','
8647  0     LBRACE               '{'
8647  1     STRING               '"Запустить файл с проверкой"'
8647  29    T__0                 ','
8647  30    T__1                 '0'
8647  31    T__0                 ','
8647  32    T__1                 '0'
8647  33    T__0                 ','
8647  34    STRING               '""'
8647  36    T__0                 ','
8647  37    STRING               '"//открывает web-страницу с помощью браузера ""по-умолчанию""\r\nЗапуститьПриложение(""C:\temp\test.html"");\r\n//открывает pdf-файл на просмотр\r\nФайлPDF = Новый Файл(""C:\test.pdf"");\r\nЕсли ФайлPDF.Существует() Тогда\r\n	ЗапуститьПриложение(ФайлPDF.ПолноеИмя);\r\nКонецЕсли;"'
8653  11    RBRACE               '}'
8654  0     RBRACE               '}'
8655  0     RBRACE               '}'
8656  0     RBRACE               '}'
8657  0     RBRACE               '}'
8657  1     RBRACE               '<EOF>'
==================================================
Всего токенов: 8052
